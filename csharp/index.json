{
  "api/Platform.Data.Doublets.CriterionMatchers.html": {
    "href": "api/Platform.Data.Doublets.CriterionMatchers.html",
    "title": "Namespace Platform.Data.Doublets.CriterionMatchers | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.CriterionMatchers Classes TargetMatcher<TLinkAddress> Represents the target matcher."
  },
  "api/Platform.Data.Doublets.CriterionMatchers.TargetMatcher-1.html": {
    "href": "api/Platform.Data.Doublets.CriterionMatchers.TargetMatcher-1.html",
    "title": "Class TargetMatcher<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class TargetMatcher<TLinkAddress> Represents the target matcher. Inheritance Object LinksOperatorBase <TLinkAddress> TargetMatcher<TLinkAddress> Implements ICriterionMatcher <TLinkAddress> Inherited Members LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.CriterionMatchers Assembly : Platform.Data.Doublets.dll Syntax public class TargetMatcher<TLinkAddress> : LinksOperatorBase<TLinkAddress>, ICriterionMatcher<TLinkAddress> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source TargetMatcher(ILinks<TLinkAddress>, TLinkAddress) Initializes a new instance. Declaration public TargetMatcher(ILinks<TLinkAddress> links, TLinkAddress targetToMatch) Parameters Type Name Description ILinks <TLinkAddress> links A links. TLinkAddress targetToMatch A target to match. Methods | Improve this Doc View Source IsMatched(TLinkAddress) Determines whether this instance is matched. Declaration public bool IsMatched(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description Boolean The bool Implements ICriterionMatcher<> See Also LinksOperatorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.html": {
    "href": "api/Platform.Data.Doublets.Decorators.html",
    "title": "Namespace Platform.Data.Doublets.Decorators | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Decorators Classes LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> Represents the links cascade uniqueness and usages resolver. LinksCascadeUsagesResolver<TLinkAddress> LinksDecoratorBase<TLinkAddress> Represents the links decorator base. LinksDisposableDecoratorBase<TLinkAddress> Represents the links disposable decorator base. LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed Represents the disposable with multiple calls allowed. LinksInnerReferenceExistenceValidator<TLinkAddress> Represents the links inner reference existence validator. LinksItselfConstantToSelfReferenceResolver<TLinkAddress> Represents the links itself constant to self reference resolver. LinksNonExistentDependenciesCreator<TLinkAddress> LinksNullConstantToSelfReferenceResolver<TLinkAddress> Represents the links null constant to self reference resolver. LinksUniquenessResolver<TLinkAddress> Represents the links uniqueness resolver. LinksUniquenessValidator<TLinkAddress> Represents the links uniqueness validator. LinksUsagesValidator<TLinkAddress> Represents the links usages validator. LoggingDecorator<TLinkAddress> NonNullContentsLinkDeletionResolver<TLinkAddress> Represents the non null contents link deletion resolver. UInt32Links Represents the int 32 links. UInt64Links Represents a combined decorator that implements the basic logic for interacting with the links storage for links with addresses represented as UInt64 . Представляет комбинированный декоратор, реализующий основную логику по взаимодействии с хранилищем связей, для связей с адресами представленными в виде UInt64 ."
  },
  "api/Platform.Data.Doublets.Decorators.LinksCascadeUniquenessAndUsagesResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksCascadeUniquenessAndUsagesResolver-1.html",
    "title": "Class LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> Represents the links cascade uniqueness and usages resolver. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksUniquenessResolver <TLinkAddress> LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksUniquenessResolver<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> : LinksUniquenessResolver<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksCascadeUniquenessAndUsagesResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksCascadeUniquenessAndUsagesResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source ResolveAddressChangeConflict(TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Resolves the address change conflict using the specified old link address. Declaration protected override TLinkAddress ResolveAddressChangeConflict(TLinkAddress oldLinkAddress, TLinkAddress newLinkAddress, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress oldLinkAddress The old link address. TLinkAddress newLinkAddress The new link address. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksUniquenessResolver<TLinkAddress>.ResolveAddressChangeConflict(TLinkAddress, TLinkAddress, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksUniquenessResolver <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksCascadeUsagesResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksCascadeUsagesResolver-1.html",
    "title": "Class LinksCascadeUsagesResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksCascadeUsagesResolver<TLinkAddress> Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksCascadeUsagesResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksCascadeUsagesResolver<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Remarks Must be used in conjunction with NonNullContentsLinkDeletionResolver. Должен использоваться вместе с NonNullContentsLinkDeletionResolver. Constructors | Improve this Doc View Source LinksCascadeUsagesResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksCascadeUsagesResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the restriction. Declaration public override TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Delete(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Decorators.LinksDecoratorBase-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksDecoratorBase-1.html",
    "title": "Class LinksDecoratorBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksDecoratorBase<TLinkAddress> Represents the links decorator base. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase<TLinkAddress> LinksCascadeUsagesResolver<TLinkAddress> LinksDisposableDecoratorBase<TLinkAddress> LinksInnerReferenceExistenceValidator<TLinkAddress> LinksItselfConstantToSelfReferenceResolver<TLinkAddress> LinksNonExistentDependenciesCreator<TLinkAddress> LinksNullConstantToSelfReferenceResolver<TLinkAddress> LinksUniquenessResolver<TLinkAddress> LinksUniquenessValidator<TLinkAddress> LinksUsagesValidator<TLinkAddress> LoggingDecorator<TLinkAddress> NonNullContentsLinkDeletionResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksDecoratorBase<TLinkAddress> : LinksOperatorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksDecoratorBase(ILinks<TLinkAddress>) Initializes a new instance. Declaration protected LinksDecoratorBase(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Fields | Improve this Doc View Source _constants The constants. Declaration protected readonly LinksConstants<TLinkAddress> _constants Field Value Type Description LinksConstants <TLinkAddress> | Improve this Doc View Source _facade The facade. Declaration protected ILinks<TLinkAddress> _facade Field Value Type Description ILinks <TLinkAddress> Properties | Improve this Doc View Source Constants Gets the constants value. Declaration public LinksConstants<TLinkAddress> Constants { get; } Property Value Type Description LinksConstants <TLinkAddress> | Improve this Doc View Source Facade Gets or sets the facade value. Declaration public ILinks<TLinkAddress> Facade { get; set; } Property Value Type Description ILinks <TLinkAddress> Methods | Improve this Doc View Source Count(IList<TLinkAddress>) Counts the restriction. Declaration public virtual TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Returns Type Description TLinkAddress The link | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Creates the restriction. Declaration public virtual TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the restriction. Declaration public virtual TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public virtual TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public virtual TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > See Also LinksOperatorBase <TLinkAddress> ILinks <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksDisposableDecoratorBase-1.DisposableWithMultipleCallsAllowed.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksDisposableDecoratorBase-1.DisposableWithMultipleCallsAllowed.html",
    "title": "Class LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed Represents the disposable with multiple calls allowed. Inheritance Object LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax protected class DisposableWithMultipleCallsAllowed : Disposable Constructors | Improve this Doc View Source DisposableWithMultipleCallsAllowed(Disposal) Initializes a new LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed instance. Declaration public DisposableWithMultipleCallsAllowed(Disposal disposal) Parameters Type Name Description Disposal disposal A disposal. Properties | Improve this Doc View Source AllowMultipleDisposeCalls Gets the allow multiple dispose calls value. Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description Boolean See Also Disposable"
  },
  "api/Platform.Data.Doublets.Decorators.LinksDisposableDecoratorBase-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksDisposableDecoratorBase-1.html",
    "title": "Class LinksDisposableDecoratorBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksDisposableDecoratorBase<TLinkAddress> Represents the links disposable decorator base. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksDisposableDecoratorBase<TLinkAddress> UInt32Links UInt64Links UInt64LinksTransactionsLayer Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> IDisposable Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksDisposableDecoratorBase<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>>, IDisposable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksDisposableDecoratorBase(ILinks<TLinkAddress>) Initializes a new instance. Declaration protected LinksDisposableDecoratorBase(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Fields | Improve this Doc View Source Disposable The disposable. Declaration protected readonly LinksDisposableDecoratorBase<TLinkAddress>.DisposableWithMultipleCallsAllowed Disposable Field Value Type Description LinksDisposableDecoratorBase.DisposableWithMultipleCallsAllowed <> Methods | Improve this Doc View Source Dispose() Disposes this instance. Declaration public void Dispose() | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes the manual. Declaration protected virtual void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual The manual. Boolean wasDisposed The was disposed. | Improve this Doc View Source Finalize() Declaration protected void Finalize() Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > System.IDisposable See Also LinksDecoratorBase <TLinkAddress> ILinks <TLinkAddress> IDisposable"
  },
  "api/Platform.Data.Doublets.Decorators.LinksInnerReferenceExistenceValidator-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksInnerReferenceExistenceValidator-1.html",
    "title": "Class LinksInnerReferenceExistenceValidator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksInnerReferenceExistenceValidator<TLinkAddress> Represents the links inner reference existence validator. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksInnerReferenceExistenceValidator<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksInnerReferenceExistenceValidator<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksInnerReferenceExistenceValidator(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksInnerReferenceExistenceValidator(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the restriction. Declaration public override TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Delete(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public override TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Each(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<ReadHandler<TLinkAddress>>) | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksItselfConstantToSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksItselfConstantToSelfReferenceResolver-1.html",
    "title": "Class LinksItselfConstantToSelfReferenceResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksItselfConstantToSelfReferenceResolver<TLinkAddress> Represents the links itself constant to self reference resolver. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksItselfConstantToSelfReferenceResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksItselfConstantToSelfReferenceResolver<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksItselfConstantToSelfReferenceResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksItselfConstantToSelfReferenceResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public override TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Each(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<ReadHandler<TLinkAddress>>) | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksNonExistentDependenciesCreator-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksNonExistentDependenciesCreator-1.html",
    "title": "Class LinksNonExistentDependenciesCreator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksNonExistentDependenciesCreator<TLinkAddress> Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksNonExistentDependenciesCreator<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksNonExistentDependenciesCreator<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Remarks Not practical if newSource and newTarget are too big. To be able to use practical version we should allow to create link at any specific location inside ResizableDirectMemoryLinks. This in turn will require to implement not a list of empty links, but a list of ranges to store it more efficiently. Constructors | Improve this Doc View Source LinksNonExistentDependenciesCreator(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksNonExistentDependenciesCreator(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Decorators.LinksNullConstantToSelfReferenceResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksNullConstantToSelfReferenceResolver-1.html",
    "title": "Class LinksNullConstantToSelfReferenceResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksNullConstantToSelfReferenceResolver<TLinkAddress> Represents the links null constant to self reference resolver. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksNullConstantToSelfReferenceResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksNullConstantToSelfReferenceResolver<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksNullConstantToSelfReferenceResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksNullConstantToSelfReferenceResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Creates the substitution. Declaration public override TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Create(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the substitution. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksUniquenessResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksUniquenessResolver-1.html",
    "title": "Class LinksUniquenessResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksUniquenessResolver<TLinkAddress> Represents the links uniqueness resolver. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksUniquenessResolver<TLinkAddress> LinksCascadeUniquenessAndUsagesResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksUniquenessResolver<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksUniquenessResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksUniquenessResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source ResolveAddressChangeConflict(TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Resolves the address change conflict using the specified old link address. Declaration protected virtual TLinkAddress ResolveAddressChangeConflict(TLinkAddress oldLinkAddress, TLinkAddress newLinkAddress, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress oldLinkAddress The old link address. TLinkAddress newLinkAddress The new link address. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The new link address. | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksUniquenessValidator-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksUniquenessValidator-1.html",
    "title": "Class LinksUniquenessValidator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksUniquenessValidator<TLinkAddress> Represents the links uniqueness validator. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksUniquenessValidator<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksUniquenessValidator<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksUniquenessValidator(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksUniquenessValidator(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LinksUsagesValidator-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LinksUsagesValidator-1.html",
    "title": "Class LinksUsagesValidator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksUsagesValidator<TLinkAddress> Represents the links usages validator. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LinksUsagesValidator<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LinksUsagesValidator<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksUsagesValidator(ILinks<TLinkAddress>) Initializes a new instance. Declaration public LinksUsagesValidator(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the restriction. Declaration public override TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Delete(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the restriction. Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.LoggingDecorator-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.LoggingDecorator-1.html",
    "title": "Class LoggingDecorator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LoggingDecorator<TLinkAddress> Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> LoggingDecorator<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class LoggingDecorator<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LoggingDecorator(ILinks<TLinkAddress>, Stream) Declaration public LoggingDecorator(ILinks<TLinkAddress> links, Stream logStream) Parameters Type Name Description ILinks <TLinkAddress> links Stream logStream Methods | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public override TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Create(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public override TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Delete(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public override TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Update(System.Collections.Generic.IList<TLinkAddress>, System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Decorators.NonNullContentsLinkDeletionResolver-1.html": {
    "href": "api/Platform.Data.Doublets.Decorators.NonNullContentsLinkDeletionResolver-1.html",
    "title": "Class NonNullContentsLinkDeletionResolver<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class NonNullContentsLinkDeletionResolver<TLinkAddress> Represents the non null contents link deletion resolver. Inheritance Object LinksOperatorBase <TLinkAddress> LinksDecoratorBase <TLinkAddress> NonNullContentsLinkDeletionResolver<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members LinksDecoratorBase<TLinkAddress>._constants LinksDecoratorBase<TLinkAddress>.Constants LinksDecoratorBase<TLinkAddress>._facade LinksDecoratorBase<TLinkAddress>.Facade LinksDecoratorBase<TLinkAddress>.Count(IList<TLinkAddress>) LinksDecoratorBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksDecoratorBase<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class NonNullContentsLinkDeletionResolver<TLinkAddress> : LinksDecoratorBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source NonNullContentsLinkDeletionResolver(ILinks<TLinkAddress>) Initializes a new instance. Declaration public NonNullContentsLinkDeletionResolver(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the restriction. Declaration public override TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<TLinkAddress>.Delete(System.Collections.Generic.IList<TLinkAddress>, System.Nullable<WriteHandler<TLinkAddress>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.UInt32Links.html": {
    "href": "api/Platform.Data.Doublets.Decorators.UInt32Links.html",
    "title": "Class UInt32Links | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32Links Represents the int 32 links. Inheritance Object LinksOperatorBase < UInt32 > LinksDecoratorBase < UInt32 > LinksDisposableDecoratorBase < UInt32 > UInt32Links Implements ILinks < UInt32 > Platform.Data.Doublets.ILinks < UInt32 , LinksConstants < UInt32 >> IDisposable Inherited Members LinksDisposableDecoratorBase<UInt32>.Disposable LinksDisposableDecoratorBase<UInt32>.Dispose() LinksDisposableDecoratorBase<UInt32>.Dispose(Boolean, Boolean) LinksDecoratorBase<UInt32>._constants LinksDecoratorBase<UInt32>.Constants LinksDecoratorBase<UInt32>._facade LinksDecoratorBase<UInt32>.Facade LinksDecoratorBase<UInt32>.Count(IList<UInt32>) LinksDecoratorBase<UInt32>.Each(IList<UInt32>, Nullable<ReadHandler<UInt32>>) LinksOperatorBase<UInt32>._links LinksOperatorBase<UInt32>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class UInt32Links : LinksDisposableDecoratorBase<uint>, ILinks<uint>, ILinks<uint, LinksConstants<uint>>, IDisposable Constructors | Improve this Doc View Source UInt32Links(ILinks<UInt32>) Initializes a new UInt32Links instance. Declaration public UInt32Links(ILinks<uint> links) Parameters Type Name Description ILinks < UInt32 > links A links. Methods | Improve this Doc View Source Create(IList<UInt32>, Nullable<WriteHandler<UInt32>>) Creates the substitution. Declaration public override uint Create(IList<uint> substitution, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > substitution The substitution. Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt32>.Create(System.Collections.Generic.IList<System.UInt32>, System.Nullable<WriteHandler<System.UInt32>>) | Improve this Doc View Source Delete(IList<UInt32>, Nullable<WriteHandler<UInt32>>) Deletes the substitution. Declaration public override uint Delete(IList<uint> restriction, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > restriction The substitution. Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt32>.Delete(System.Collections.Generic.IList<System.UInt32>, System.Nullable<WriteHandler<System.UInt32>>) | Improve this Doc View Source Update(IList<UInt32>, IList<UInt32>, Nullable<WriteHandler<UInt32>>) Updates the substitution. Declaration public override uint Update(IList<uint> restriction, IList<uint> substitution, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > restriction The substitution. IList < UInt32 > substitution The substitution. Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt32>.Update(System.Collections.Generic.IList<System.UInt32>, System.Collections.Generic.IList<System.UInt32>, System.Nullable<WriteHandler<System.UInt32>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > System.IDisposable Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDisposableDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Decorators.UInt64Links.html": {
    "href": "api/Platform.Data.Doublets.Decorators.UInt64Links.html",
    "title": "Class UInt64Links | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64Links Represents a combined decorator that implements the basic logic for interacting with the links storage for links with addresses represented as UInt64 . Представляет комбинированный декоратор, реализующий основную логику по взаимодействии с хранилищем связей, для связей с адресами представленными в виде UInt64 . Inheritance Object LinksOperatorBase < UInt64 > LinksDecoratorBase < UInt64 > LinksDisposableDecoratorBase < UInt64 > UInt64Links Implements ILinks < UInt64 > Platform.Data.Doublets.ILinks < UInt64 , LinksConstants < UInt64 >> IDisposable Inherited Members LinksDisposableDecoratorBase<UInt64>.Disposable LinksDisposableDecoratorBase<UInt64>.Dispose() LinksDisposableDecoratorBase<UInt64>.Dispose(Boolean, Boolean) LinksDecoratorBase<UInt64>._constants LinksDecoratorBase<UInt64>.Constants LinksDecoratorBase<UInt64>._facade LinksDecoratorBase<UInt64>.Facade LinksDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDecoratorBase<UInt64>.Each(IList<UInt64>, Nullable<ReadHandler<UInt64>>) LinksOperatorBase<UInt64>._links LinksOperatorBase<UInt64>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Decorators Assembly : Platform.Data.Doublets.dll Syntax public class UInt64Links : LinksDisposableDecoratorBase<ulong>, ILinks<ulong>, ILinks<ulong, LinksConstants<ulong>>, IDisposable Remarks Возможные оптимизации: Объединение в одном поле Source и Target с уменьшением до 32 бит. меньше объём БД меньше производительность больше ограничение на количество связей в БД) Ленивое хранение размеров поддеревьев (расчитываемое по мере использования БД) меньше объём БД больше сложность Текущее теоретическое ограничение на индекс связи, из-за использования 5 бит в размере поддеревьев для AVL баланса и флагов нитей: 2 в степени(64 минус 5 равно 59 ) равно 576 460 752 303 423 488 Желательно реализовать поддержку переключения между деревьями и битовыми индексами (битовыми строками) - вариант матрицы (выстраеваемой лениво). Решить отключать ли проверки при компиляции под Release. Т.е. исключения будут выбрасываться только при #if DEBUG Constructors | Improve this Doc View Source UInt64Links(ILinks<UInt64>) Initializes a new UInt64Links instance. Declaration public UInt64Links(ILinks<ulong> links) Parameters Type Name Description ILinks < UInt64 > links A links. Methods | Improve this Doc View Source Create(IList<UInt64>, Nullable<WriteHandler<UInt64>>) Creates the substitution. Declaration public override ulong Create(IList<ulong> substitution, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > substitution The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 The TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Create(System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) | Improve this Doc View Source Delete(IList<UInt64>, Nullable<WriteHandler<UInt64>>) Deletes the substitution. Declaration public override ulong Delete(IList<ulong> restriction, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > restriction The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Delete(System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) | Improve this Doc View Source Update(IList<UInt64>, IList<UInt64>, Nullable<WriteHandler<UInt64>>) Updates the substitution. Declaration public override ulong Update(IList<ulong> restriction, IList<ulong> substitution, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > restriction The substitution. IList < UInt64 > substitution The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 The TLinkAddress Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Update(System.Collections.Generic.IList<System.UInt64>, System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > System.IDisposable Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) UInt64LinksExtensions.AnyLinkIsAny(ILinks<UInt64>, UInt64[]) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Boolean, Boolean) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) UInt64LinksExtensions.AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Doublet-1.html": {
    "href": "api/Platform.Data.Doublets.Doublet-1.html",
    "title": "Struct Doublet<T> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct Doublet<T> Implements IEquatable < Doublet <T>> Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public struct Doublet<T> : IEquatable<Doublet<T>> Type Parameters Name Description T Constructors | Improve this Doc View Source Doublet(T, T) Declaration public Doublet(T source, T target) Parameters Type Name Description T source . . T target . . Fields | Improve this Doc View Source Source Declaration public readonly T Source Field Value Type Description T | Improve this Doc View Source Target Declaration public readonly T Target Field Value Type Description T Methods | Improve this Doc View Source Equals(Doublet<T>) Declaration public bool Equals(Doublet<T> other) Parameters Type Name Description Doublet <T> other . . Returns Type Description Boolean . . | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj . . Returns Type Description Boolean . . Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 . . Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description String . . Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(Doublet<T>, Doublet<T>) Declaration public static bool operator ==(Doublet<T> left, Doublet<T> right) Parameters Type Name Description Doublet <T> left . . Doublet <T> right . . Returns Type Description Boolean . . | Improve this Doc View Source Inequality(Doublet<T>, Doublet<T>) Declaration public static bool operator !=(Doublet<T> left, Doublet<T> right) Parameters Type Name Description Doublet <T> left . . Doublet <T> right . . Returns Type Description Boolean . . Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Doublets.DoubletComparer-1.html": {
    "href": "api/Platform.Data.Doublets.DoubletComparer-1.html",
    "title": "Class DoubletComparer<T> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class DoubletComparer<T> Inheritance Object DoubletComparer<T> Implements IEqualityComparer < Doublet <T>> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public class DoubletComparer<T> : IEqualityComparer<Doublet<T>> Type Parameters Name Description T Remarks TODO: Может стоит попробовать ref во всех методах (IRefEqualityComparer) 2x faster with comparer Fields | Improve this Doc View Source Default The . Declaration public static readonly DoubletComparer<T> Default Field Value Type Description DoubletComparer <T> Methods | Improve this Doc View Source Equals(Doublet<T>, Doublet<T>) Determines whether this instance equals. Declaration public bool Equals(Doublet<T> x, Doublet<T> y) Parameters Type Name Description Doublet <T> x The . Doublet <T> y The . Returns Type Description Boolean The bool | Improve this Doc View Source GetHashCode(Doublet<T>) Gets the hash code using the specified obj. Declaration public int GetHashCode(Doublet<T> obj) Parameters Type Name Description Doublet <T> obj The obj. Returns Type Description Int32 The int Implements System.Collections.Generic.IEqualityComparer<T>"
  },
  "api/Platform.Data.Doublets.FFI.html": {
    "href": "api/Platform.Data.Doublets.FFI.html",
    "title": "Namespace Platform.Data.Doublets.FFI | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.FFI Classes UInt32UnitedMemoryLinks UnitedMemoryLinks<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.FFI.UInt32UnitedMemoryLinks.html": {
    "href": "api/Platform.Data.Doublets.FFI.UInt32UnitedMemoryLinks.html",
    "title": "Class UInt32UnitedMemoryLinks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32UnitedMemoryLinks Inheritance Object UInt32UnitedMemoryLinks Implements ILinks < UInt32 > Platform.Data.Doublets.ILinks < UInt32 , LinksConstants < UInt32 >> Namespace : Platform.Data.Doublets.FFI Assembly : Platform.Data.Doublets.dll Syntax public class UInt32UnitedMemoryLinks : DisposableBase, ILinks<uint>, ILinks<uint, LinksConstants<uint>> Constructors | Improve this Doc View Source UInt32UnitedMemoryLinks(String) Declaration public UInt32UnitedMemoryLinks(string path) Parameters Type Name Description String path Properties | Improve this Doc View Source Constants Declaration public LinksConstants<uint> Constants { get; } Property Value Type Description LinksConstants < UInt32 > Methods | Improve this Doc View Source Count(IList<UInt32>) Declaration public uint Count(IList<uint> restriction) Parameters Type Name Description IList < UInt32 > restriction Returns Type Description UInt32 | Improve this Doc View Source Create(IList<UInt32>, Nullable<WriteHandler<UInt32>>) Declaration public uint Create(IList<uint> substitution, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > substitution Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 | Improve this Doc View Source Delete(IList<UInt32>, Nullable<WriteHandler<UInt32>>) Declaration public uint Delete(IList<uint> restriction, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > restriction Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed | Improve this Doc View Source Each(IList<UInt32>, Nullable<ReadHandler<UInt32>>) Declaration public uint Each(IList<uint> restriction, ReadHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > restriction Nullable < ReadHandler < UInt32 >> handler Returns Type Description UInt32 | Improve this Doc View Source Update(IList<UInt32>, IList<UInt32>, Nullable<WriteHandler<UInt32>>) Declaration public uint Update(IList<uint> restriction, IList<uint> substitution, WriteHandler<uint>? handler) Parameters Type Name Description IList < UInt32 > restriction IList < UInt32 > substitution Nullable < WriteHandler < UInt32 >> handler Returns Type Description UInt32 Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.FFI.UnitedMemoryLinks-1.html": {
    "href": "api/Platform.Data.Doublets.FFI.UnitedMemoryLinks-1.html",
    "title": "Class UnitedMemoryLinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UnitedMemoryLinks<TLinkAddress> Inheritance Object UnitedMemoryLinks<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Namespace : Platform.Data.Doublets.FFI Assembly : Platform.Data.Doublets.dll Syntax public class UnitedMemoryLinks<TLinkAddress> : DisposableBase, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source UnitedMemoryLinks(String) Declaration public UnitedMemoryLinks(string path) Parameters Type Name Description String path Properties | Improve this Doc View Source Constants Declaration public LinksConstants<TLinkAddress> Constants { get; } Property Value Type Description LinksConstants <TLinkAddress> Methods | Improve this Doc View Source Count(IList<TLinkAddress>) Declaration public TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction Returns Type Description TLinkAddress | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Dispose(Boolean, Boolean) Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual Boolean wasDisposed | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Declaration public TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction Nullable < ReadHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.html": {
    "href": "api/Platform.Data.Doublets.html",
    "title": "Namespace Platform.Data.Doublets | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets Classes DoubletComparer<T> ILinksExtensions Represents the links extensions. LinkExtensions Represents the link extensions. LinksOperatorBase<TLinkAddress> Represents the links operator base. SynchronizedLinks<TLinkAddress> UInt64LinksExtensions Represents the int 64 links extensions. UInt64LinksTransactionsLayer Represents the int 64 links transactions layer. UInt64LinksTransactionsLayer.Transaction Structs Doublet<T> Link<TLinkAddress> Структура описывающая уникальную связь. UInt64LinksTransactionsLayer.Transition Interfaces ILinks<TLinkAddress> Defines the links. ISynchronizedLinks<TLinkAddress> Defines the synchronized links."
  },
  "api/Platform.Data.Doublets.ILinks-1.html": {
    "href": "api/Platform.Data.Doublets.ILinks-1.html",
    "title": "Interface ILinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Interface ILinks<TLinkAddress> Defines the links. Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public interface ILinks<TLinkAddress> : ILinks<TLinkAddress, LinksConstants<TLinkAddress>> Type Parameters Name Description TLinkAddress"
  },
  "api/Platform.Data.Doublets.ILinksExtensions.html": {
    "href": "api/Platform.Data.Doublets.ILinksExtensions.html",
    "title": "Class ILinksExtensions | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ILinksExtensions Represents the links extensions. Inheritance Object ILinksExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public static class ILinksExtensions Methods | Improve this Doc View Source All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Alls the links. Declaration public static IList<IList<TLinkAddress>> All<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress[] restriction The restriction. Returns Type Description IList < IList <TLinkAddress>> A list of i list t link Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Alls the indices using the specified links. Declaration public static IList<TLinkAddress> AllIndices<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress[] restriction The restriction. Returns Type Description IList <TLinkAddress> A list of t link Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Determines whether are values reset. Declaration public static bool AreValuesReset<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress linkIndex The link index. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Declaration public static bool CheckPathExistance<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] path) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress[] path Returns Type Description Boolean Type Parameters Name Description TLinkAddress Remarks TODO: Как так? Как то что ниже может быть корректно? Скорее всего практически не применимо Предполагалось, что можно было конвертировать формируемый в проходе через SequenceWalker Stack в конкретный путь из Source, Target до связи, но это не всегда так. TODO: Возможно нужен метод, который именно выбрасывает исключения (EnsurePathExists) | Improve this Doc View Source CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static TLinkAddress CountUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Declaration public static TLinkAddress CreateAndUpdate<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress source TLinkAddress target Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Declaration public static TLinkAddress CreateAndUpdate<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source TLinkAddress target Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) Declaration public static TLinkAddress CreatePoint<TLinkAddress>(this ILinks<TLinkAddress> links) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public static TLinkAddress CreatePoint<TLinkAddress>(this ILinks<TLinkAddress> links, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) Decorates the with automatic uniqueness and usages resolution using the specified links. Declaration public static ILinks<TLinkAddress> DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(this ILinks<TLinkAddress> links) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. Returns Type Description ILinks <TLinkAddress> The links. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Deletes the links. Declaration public static TLinkAddress Delete<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkToDelete, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress linkToDelete The link to delete. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) Declaration public static void DeleteAll<TLinkAddress>(this ILinks<TLinkAddress> links) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Type Parameters Name Description TLinkAddress Remarks TODO: Возможно есть очень простой способ это сделать. (Например просто удалить файл, или изменить его размер таким образом, чтобы удалился весь контент) Например через _header->AllocatedLinks в ResizableDirectMemoryLinks | Improve this Doc View Source DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static void DeleteAllUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress linkIndex Type Parameters Name Description TLinkAddress | Improve this Doc View Source DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Declaration public static TLinkAddress DeleteAllUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress linkIndex Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress Remarks Before execution of this method ensure that deleted link is detached (all values - source and target are reset to null) or it might enter into infinite recursion. | Improve this Doc View Source DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) Deletes the by query using the specified links. Declaration public static void DeleteByQuery<TLinkAddress>(this ILinks<TLinkAddress> links, Link<TLinkAddress> query) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. Link <TLinkAddress> query The query. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Удаляет связь с указанными началом (Source) и концом (Target). Declaration public static TLinkAddress DeleteIfExists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Индекс связи, которая является началом удаляемой связи. TLinkAddress target Индекс связи, которая является концом удаляемой связи. Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Удаляет несколько связей. Declaration public static void DeleteMany<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> deletedLinks) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. IList <TLinkAddress> deletedLinks Список адресов связей к удалению. Type Parameters Name Description TLinkAddress | Improve this Doc View Source Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target, Func<TLinkAddress, bool> handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLinkAddress target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) Func <TLinkAddress, Boolean > handler Обработчик каждой подходящей связи. Returns Type Description Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLinkAddress | Improve this Doc View Source Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target, ReadHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве начала, Constants.Any - любое начало, 1..∞ конкретное начало) TLinkAddress target Значение, определяющее соответствующие шаблону связи. (Constants.Null - 0-я связь, обозначающая ссылку на пустоту в качестве конца, Constants.Any - любой конец, 1..∞ конкретный конец) Nullable < ReadHandler <TLinkAddress>> handler Обработчик каждой подходящей связи. Returns Type Description Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLinkAddress | Improve this Doc View Source Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) Declaration public static bool Each<TLinkAddress>(this ILinks<TLinkAddress> links, Func<TLinkAddress, bool> handler, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Func <TLinkAddress, Boolean > handler TLinkAddress source TLinkAddress target Returns Type Description Boolean Type Parameters Name Description TLinkAddress | Improve this Doc View Source Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) Declaration public static bool Each<TLinkAddress>(this ILinks<TLinkAddress> links, ReadHandler<TLinkAddress>? handler, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Nullable < ReadHandler <TLinkAddress>> handler TLinkAddress source TLinkAddress target Returns Type Description Boolean Type Parameters Name Description TLinkAddress | Improve this Doc View Source Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) Выполняет проход по всем связям, соответствующим шаблону, вызывая обработчик (handler) для каждой подходящей связи. Declaration public static bool Each<TLinkAddress>(this ILinks<TLinkAddress> links, ReadHandler<TLinkAddress>? handler, params TLinkAddress[] restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. Nullable < ReadHandler <TLinkAddress>> handler Обработчик каждой подходящей связи. TLinkAddress[] restriction Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Any - отсутствие ограничения, 1..∞ конкретный адрес связи. Returns Type Description Boolean True, в случае если проход по связям не был прерван и False в обратном случае. Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static void EnforceResetValues<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress linkIndex Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Enforces the reset values using the specified links. Declaration public static TLinkAddress EnforceResetValues<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress linkIndex The link index. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Declaration public static void EnsureCreated<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] addresses) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress[] addresses Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) Declaration public static void EnsureCreated<TLinkAddress>(this ILinks<TLinkAddress> links, Func<TLinkAddress> creator, params TLinkAddress[] addresses) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. Func <TLinkAddress> creator TLinkAddress[] addresses Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Declaration public static void EnsureDoesNotExists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source TLinkAddress target Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) Ensures the inner reference exists using the specified links. Declaration public static void EnsureInnerReferenceExists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress reference, string argumentName) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress reference The reference. String argumentName The argument name. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) Ensures the inner reference exists using the specified links. Declaration public static void EnsureInnerReferenceExists<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> restriction, string argumentName) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. IList <TLinkAddress> restriction The restriction. String argumentName The argument name. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Ensures the link exists using the specified links. Declaration public static void EnsureLinkExists<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. IList <TLinkAddress> restriction The restriction. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) Ensures the link is any or exists using the specified links. Declaration public static void EnsureLinkIsAnyOrExists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link, string argumentName) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress link The link. String argumentName The argument name. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Ensures the link is any or exists using the specified links. Declaration public static void EnsureLinkIsAnyOrExists<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. IList <TLinkAddress> restriction The restriction. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) Ensures the link is itself or exists using the specified links. Declaration public static void EnsureLinkIsItselfOrExists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link, string argumentName) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress link The link. String argumentName The argument name. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static void EnsureNoUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Type Parameters Name Description TLinkAddress | Improve this Doc View Source EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Declaration public static void EnsurePointsCreated<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] addresses) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress[] addresses Type Parameters Name Description TLinkAddress | Improve this Doc View Source Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) Declaration public static bool Equals<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link TLinkAddress source TLinkAddress target Returns Type Description Boolean Type Parameters Name Description TLinkAddress | Improve this Doc View Source Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Возвращает значение, определяющее существует ли связь с указанными началом и концом в хранилище связей. Declaration public static bool Exists<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Начало связи. TLinkAddress target Конец связи. Returns Type Description Boolean Значение, определяющее существует ли связь. Type Parameters Name Description TLinkAddress | Improve this Doc View Source First<TLinkAddress>(ILinks<TLinkAddress>) Firsts the links. Declaration public static TLinkAddress First<TLinkAddress>(this ILinks<TLinkAddress> links) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. Returns Type Description TLinkAddress The first link. Type Parameters Name Description TLinkAddress The link. Exceptions Type Condition InvalidOperationException В процессе поиска по хранилищу не было найдено связей. InvalidOperationException В хранилище нет связей. | Improve this Doc View Source Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Formats the links. Declaration public static string Format<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress link The link. Returns Type Description String The string Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Formats the links. Declaration public static string Format<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. IList <TLinkAddress> link The link. Returns Type Description String The string Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) Declaration public static TLinkAddress GetByKeys<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress root, params int[] path) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress root Int32 [] path Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress Remarks Может потребовать дополнительного стека для PathElement's при использовании SequenceWalker. | Improve this Doc View Source GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Возвращает индекс указанной связи. Declaration public static TLinkAddress GetIndex<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. IList <TLinkAddress> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLinkAddress Индекс начальной связи для указанной связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Создаёт связь (если она не существовала), либо возвращает индекс существующей связи с указанными Source (началом) и Target (концом). Declaration public static TLinkAddress GetOrCreate<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Индекс связи, которая является началом на создаваемой связи. TLinkAddress target Индекс связи, которая является концом для создаваемой связи. Returns Type Description TLinkAddress Индекс связи, с указанным Source (началом) и Target (концом) Type Parameters Name Description TLinkAddress | Improve this Doc View Source GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static TLinkAddress GetSource<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Индекс связи. Returns Type Description TLinkAddress Индекс начальной связи для указанной связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Возвращает индекс начальной (Source) связи для указанной связи. Declaration public static TLinkAddress GetSource<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. IList <TLinkAddress> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLinkAddress Индекс начальной связи для указанной связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) Gets the square matrix sequence element by index using the specified links. Declaration public static TLinkAddress GetSquareMatrixSequenceElementByIndex<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress root, ulong size, ulong index) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress root The root. UInt64 size The size. UInt64 index The index. Returns Type Description TLinkAddress The current link. Type Parameters Name Description TLinkAddress The link. Exceptions Type Condition ArgumentOutOfRangeException Sequences with sizes other than powers of two are not supported. | Improve this Doc View Source GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static TLinkAddress GetTarget<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Индекс связи. Returns Type Description TLinkAddress Индекс конечной связи для указанной связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Возвращает индекс конечной (Target) связи для указанной связи. Declaration public static TLinkAddress GetTarget<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. IList <TLinkAddress> link Связь представленная списком, состоящим из её адреса и содержимого. Returns Type Description TLinkAddress Индекс конечной связи для указанной связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static bool HasUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Returns Type Description Boolean Type Parameters Name Description TLinkAddress | Improve this Doc View Source MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Declaration public static TLinkAddress MergeAndDelete<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress oldLinkIndex, TLinkAddress newLinkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress oldLinkIndex TLinkAddress newLinkIndex Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Replace one link with another (replaced link is deleted, children are updated or deleted). Declaration public static TLinkAddress MergeAndDelete<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress oldLinkIndex, TLinkAddress newLinkIndex, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress oldLinkIndex TLinkAddress newLinkIndex Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Declaration public static void MergeUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress oldLinkIndex, TLinkAddress newLinkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress oldLinkIndex TLinkAddress newLinkIndex Type Parameters Name Description TLinkAddress | Improve this Doc View Source MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Merging two usages graphs, all children of old link moved to be children of new link or deleted. Declaration public static TLinkAddress MergeUsages<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress oldLinkIndex, TLinkAddress newLinkIndex, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress oldLinkIndex TLinkAddress newLinkIndex Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Declaration public static void ResetValues<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress linkIndex Type Parameters Name Description TLinkAddress | Improve this Doc View Source ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Resets the values using the specified links. Declaration public static TLinkAddress ResetValues<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress linkIndex, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress linkIndex The link index. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) Resolves the constant as self reference using the specified links. Declaration public static IList<TLinkAddress> ResolveConstantAsSelfReference<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress constant, IList<TLinkAddress> restriction, IList<TLinkAddress> substitution) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress constant The constant. IList <TLinkAddress> restriction The restriction. IList <TLinkAddress> substitution The substitution. Returns Type Description IList <TLinkAddress> A list of t link Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) Runs the random creations using the specified links. Declaration public static void RunRandomCreations<TLinkAddress>(this ILinks<TLinkAddress> links, ulong amountOfCreations) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. UInt64 amountOfCreations The amount of creations. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) Runs the random deletions using the specified links. Declaration public static void RunRandomDeletions<TLinkAddress>(this ILinks<TLinkAddress> links, ulong amountOfDeletions) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. UInt64 amountOfDeletions The amount of deletions. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) Runs the random searches using the specified links. Declaration public static void RunRandomSearches<TLinkAddress>(this ILinks<TLinkAddress> links, ulong amountOfSearches) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. UInt64 amountOfSearches The amount of searches. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Выполняет поиск связи с указанными Source (началом) и Target (концом). Declaration public static TLinkAddress SearchOrDefault<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Индекс связи, которая является началом для искомой связи. TLinkAddress target Индекс связи, которая является концом для искомой связи. Returns Type Description TLinkAddress Индекс искомой связи с указанными Source (началом) и Target (концом). Type Parameters Name Description TLinkAddress | Improve this Doc View Source SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Singles the or default using the specified links. Declaration public static IList<TLinkAddress> SingleOrDefault<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> query) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. IList <TLinkAddress> query The query. Returns Type Description IList <TLinkAddress> The result. Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link, TLinkAddress newSource, TLinkAddress newTarget) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress link Индекс обновляемой связи. TLinkAddress newSource Индекс связи, которая является началом связи, на которую выполняется обновление. TLinkAddress newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Returns Type Description TLinkAddress Индекс обновлённой связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress link, TLinkAddress newSource, TLinkAddress newTarget, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress link TLinkAddress newSource TLinkAddress newTarget Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, params TLinkAddress[] restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress[] restriction Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links IList <TLinkAddress> restriction Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. IList <TLinkAddress> restriction Ограничения на содержимое связей. Каждое ограничение может иметь значения: Constants.Null - 0-я связь, обозначающая ссылку на пустоту, Itself - требование установить ссылку на себя, 1..∞ конкретный адрес другой связи. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Индекс обновлённой связи. Type Parameters Name Description TLinkAddress | Improve this Doc View Source Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) Declaration public static TLinkAddress Update<TLinkAddress>(this ILinks<TLinkAddress> links, WriteHandler<TLinkAddress>? handler, params TLinkAddress[] restriction) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Nullable < WriteHandler <TLinkAddress>> handler TLinkAddress[] restriction Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Declaration public static TLinkAddress UpdateOrCreateOrGet<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target, TLinkAddress newSource, TLinkAddress newTarget) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links TLinkAddress source TLinkAddress target TLinkAddress newSource TLinkAddress newTarget Returns Type Description TLinkAddress Type Parameters Name Description TLinkAddress | Improve this Doc View Source UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) Обновляет связь с указанными началом (Source) и концом (Target) на связь с указанными началом (NewSource) и концом (NewTarget). Declaration public static TLinkAddress UpdateOrCreateOrGet<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress source, TLinkAddress target, TLinkAddress newSource, TLinkAddress newTarget, WriteHandler<TLinkAddress>? handler) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links Хранилище связей. TLinkAddress source Индекс связи, которая является началом обновляемой связи. TLinkAddress target Индекс связи, которая является концом обновляемой связи. TLinkAddress newSource Индекс связи, которая является началом связи, на которую выполняется обновление. TLinkAddress newTarget Индекс связи, которая является концом связи, на которую выполняется обновление. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Индекс обновлённой связи. Type Parameters Name Description TLinkAddress"
  },
  "api/Platform.Data.Doublets.ISynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Doublets.ISynchronizedLinks-1.html",
    "title": "Interface ISynchronizedLinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Interface ISynchronizedLinks<TLinkAddress> Defines the synchronized links. Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public interface ISynchronizedLinks<TLinkAddress> : ISynchronizedLinks<TLinkAddress, ILinks<TLinkAddress>, LinksConstants<TLinkAddress>>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> Type Parameters Name Description TLinkAddress See Also ILinks <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Link-1.html": {
    "href": "api/Platform.Data.Doublets.Link-1.html",
    "title": "Struct Link<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct Link<TLinkAddress> Структура описывающая уникальную связь. Implements IEquatable < Link <TLinkAddress>> IReadOnlyList <TLinkAddress> IReadOnlyCollection <TLinkAddress> IList <TLinkAddress> ICollection <TLinkAddress> IEnumerable <TLinkAddress> IEnumerable Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public struct Link<TLinkAddress> : IEquatable<Link<TLinkAddress>>, IReadOnlyList<TLinkAddress>, IReadOnlyCollection<TLinkAddress>, IList<TLinkAddress>, ICollection<TLinkAddress>, IEnumerable<TLinkAddress>, IEnumerable Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source Link(TLinkAddress, TLinkAddress, TLinkAddress) Initializes a new instance. Declaration public Link(TLinkAddress index, TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress index A index. TLinkAddress source A source. TLinkAddress target A target. | Improve this Doc View Source Link(TLinkAddress[]) Initializes a new instance. Declaration public Link(params TLinkAddress[] values) Parameters Type Name Description TLinkAddress[] values A values. | Improve this Doc View Source Link(ref Link<TLinkAddress>) Initializes a new instance. Declaration public Link(ref Link<TLinkAddress> other) Parameters Type Name Description Link <TLinkAddress> other A other. | Improve this Doc View Source Link(IList<TLinkAddress>) Initializes a new instance. Declaration public Link(IList<TLinkAddress> values) Parameters Type Name Description IList <TLinkAddress> values A values. | Improve this Doc View Source Link(Object) Initializes a new instance. Declaration public Link(object other) Parameters Type Name Description Object other A other. Exceptions Type Condition NotSupportedException Fields | Improve this Doc View Source Index The index. Declaration public readonly TLinkAddress Index Field Value Type Description TLinkAddress | Improve this Doc View Source Null The link. Declaration public static readonly Link<TLinkAddress> Null Field Value Type Description Link <TLinkAddress> | Improve this Doc View Source Source The source. Declaration public readonly TLinkAddress Source Field Value Type Description TLinkAddress | Improve this Doc View Source Target The target. Declaration public readonly TLinkAddress Target Field Value Type Description TLinkAddress Properties | Improve this Doc View Source Count Gets the count value. Declaration public int Count { get; } Property Value Type Description Int32 | Improve this Doc View Source IsReadOnly Gets the is read only value. Declaration public bool IsReadOnly { get; } Property Value Type Description Boolean | Improve this Doc View Source Item[Int32] The not supported exception. Declaration public TLinkAddress this[int index] { get; set; } Parameters Type Name Description Int32 index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source Add(TLinkAddress) Adds the item. Declaration public void Add(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. | Improve this Doc View Source Clear() Clears this instance. Declaration public void Clear() | Improve this Doc View Source Contains(TLinkAddress) Determines whether this instance contains. Declaration public bool Contains(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source CopyTo(TLinkAddress[], Int32) Copies the to using the specified array. Declaration public void CopyTo(TLinkAddress[] array, int arrayIndex) Parameters Type Name Description TLinkAddress[] array The array. Int32 arrayIndex The array index. Exceptions Type Condition InvalidOperationException | Improve this Doc View Source Equals(Link<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(Link<TLinkAddress> other) Parameters Type Name Description Link <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object other) Parameters Type Name Description Object other The other. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetEnumerator() Gets the enumerator. Declaration public IEnumerator<TLinkAddress> GetEnumerator() Returns Type Description IEnumerator <TLinkAddress> An enumerator of t link | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() | Improve this Doc View Source IndexOf(TLinkAddress) Indexes the of using the specified item. Declaration public int IndexOf(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Int32 The int | Improve this Doc View Source Insert(Int32, TLinkAddress) Inserts the index. Declaration public void Insert(int index, TLinkAddress item) Parameters Type Name Description Int32 index The index. TLinkAddress item The item. | Improve this Doc View Source IsNull() Determines whether this instance is null. Declaration public bool IsNull() Returns Type Description Boolean The bool | Improve this Doc View Source Remove(TLinkAddress) Determines whether this instance remove. Declaration public bool Remove(TLinkAddress item) Parameters Type Name Description TLinkAddress item The item. Returns Type Description Boolean The bool | Improve this Doc View Source RemoveAt(Int32) Removes the at using the specified index. Declaration public void RemoveAt(int index) Parameters Type Name Description Int32 index The index. | Improve this Doc View Source ToString() Returns the string. Declaration public override string ToString() Returns Type Description String The string Overrides ValueType.ToString() | Improve this Doc View Source ToString(TLinkAddress, TLinkAddress) Returns the string using the specified source. Declaration public static string ToString(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description String The string | Improve this Doc View Source ToString(TLinkAddress, TLinkAddress, TLinkAddress) Returns the string using the specified index. Declaration public static string ToString(TLinkAddress index, TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress index The index. TLinkAddress source The source. TLinkAddress target The target. Returns Type Description String The string Operators | Improve this Doc View Source Equality(Link<TLinkAddress>, Link<TLinkAddress>) Declaration public static bool operator ==(Link<TLinkAddress> left, Link<TLinkAddress> right) Parameters Type Name Description Link <TLinkAddress> left Link <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Implicit(TLinkAddress[] to Link<TLinkAddress>) Declaration public static implicit operator Link<TLinkAddress>(TLinkAddress[] linkArray) Parameters Type Name Description TLinkAddress[] linkArray Returns Type Description Link <TLinkAddress> | Improve this Doc View Source Implicit(Link<TLinkAddress> to TLinkAddress[]) Declaration public static implicit operator TLinkAddress[](Link<TLinkAddress> link) Parameters Type Name Description Link <TLinkAddress> link Returns Type Description TLinkAddress[] | Improve this Doc View Source Inequality(Link<TLinkAddress>, Link<TLinkAddress>) Declaration public static bool operator !=(Link<TLinkAddress> left, Link<TLinkAddress> right) Parameters Type Name Description Link <TLinkAddress> left Link <TLinkAddress> right Returns Type Description Boolean Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Gets the enumerator. Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description IEnumerator The enumerator Implements System.IEquatable<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods LinkExtensions.IsFullPoint<TLinkAddress>(Link<TLinkAddress>) LinkExtensions.IsPartialPoint<TLinkAddress>(Link<TLinkAddress>)"
  },
  "api/Platform.Data.Doublets.LinkExtensions.html": {
    "href": "api/Platform.Data.Doublets.LinkExtensions.html",
    "title": "Class LinkExtensions | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinkExtensions Represents the link extensions. Inheritance Object LinkExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public static class LinkExtensions Methods | Improve this Doc View Source IsFullPoint<TLinkAddress>(Link<TLinkAddress>) Determines whether is full point. Declaration public static bool IsFullPoint<TLinkAddress>(this Link<TLinkAddress> link) Parameters Type Name Description Link <TLinkAddress> link The link. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link. | Improve this Doc View Source IsPartialPoint<TLinkAddress>(Link<TLinkAddress>) Determines whether is partial point. Declaration public static bool IsPartialPoint<TLinkAddress>(this Link<TLinkAddress> link) Parameters Type Name Description Link <TLinkAddress> link The link. Returns Type Description Boolean The bool Type Parameters Name Description TLinkAddress The link."
  },
  "api/Platform.Data.Doublets.LinksOperatorBase-1.html": {
    "href": "api/Platform.Data.Doublets.LinksOperatorBase-1.html",
    "title": "Class LinksOperatorBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksOperatorBase<TLinkAddress> Represents the links operator base. Inheritance Object LinksOperatorBase<TLinkAddress> TargetMatcher<TLinkAddress> LinksDecoratorBase<TLinkAddress> PropertiesOperator<TLinkAddress> PropertyOperator<TLinkAddress> Stack<TLinkAddress> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksOperatorBase<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksOperatorBase(ILinks<TLinkAddress>) Initializes a new instance. Declaration protected LinksOperatorBase(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Fields | Improve this Doc View Source _links The links. Declaration protected readonly ILinks<TLinkAddress> _links Field Value Type Description ILinks <TLinkAddress> Properties | Improve this Doc View Source Links Gets the links value. Declaration public ILinks<TLinkAddress> Links { get; } Property Value Type Description ILinks <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.html": {
    "href": "api/Platform.Data.Doublets.Memory.html",
    "title": "Namespace Platform.Data.Doublets.Memory | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory Structs LinksHeader<TLinkAddress> The links header. Interfaces ILinksListMethods<TLinkAddress> Defines the links list methods. ILinksTreeMethods<TLinkAddress> Defines the links tree methods. Enums IndexTreeType The index tree type enum."
  },
  "api/Platform.Data.Doublets.Memory.ILinksListMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.ILinksListMethods-1.html",
    "title": "Interface ILinksListMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Interface ILinksListMethods<TLinkAddress> Defines the links list methods. Namespace : Platform.Data.Doublets.Memory Assembly : Platform.Data.Doublets.dll Syntax public interface ILinksListMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Methods | Improve this Doc View Source AttachAsFirst(TLinkAddress) Attaches the as first using the specified link. Declaration void AttachAsFirst(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. | Improve this Doc View Source Detach(TLinkAddress) Detaches the free link. Declaration void Detach(TLinkAddress freeLink) Parameters Type Name Description TLinkAddress freeLink The free link."
  },
  "api/Platform.Data.Doublets.Memory.ILinksTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.ILinksTreeMethods-1.html",
    "title": "Interface ILinksTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Interface ILinksTreeMethods<TLinkAddress> Defines the links tree methods. Namespace : Platform.Data.Doublets.Memory Assembly : Platform.Data.Doublets.dll Syntax public interface ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Methods | Improve this Doc View Source Attach(ref TLinkAddress, TLinkAddress) Attaches the root. Declaration void Attach(ref TLinkAddress root, TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress root The root. TLinkAddress linkIndex The link index. | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified root. Declaration TLinkAddress CountUsages(TLinkAddress root) Parameters Type Name Description TLinkAddress root The root. Returns Type Description TLinkAddress The link | Improve this Doc View Source Detach(ref TLinkAddress, TLinkAddress) Detaches the root. Declaration void Detach(ref TLinkAddress root, TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress root The root. TLinkAddress linkIndex The link index. | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified root. Declaration TLinkAddress EachUsage(TLinkAddress root, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress root The root. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Searches the source. Declaration TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description TLinkAddress The link"
  },
  "api/Platform.Data.Doublets.Memory.IndexTreeType.html": {
    "href": "api/Platform.Data.Doublets.Memory.IndexTreeType.html",
    "title": "Enum IndexTreeType | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Enum IndexTreeType The index tree type enum. Namespace : Platform.Data.Doublets.Memory Assembly : Platform.Data.Doublets.dll Syntax public enum IndexTreeType Fields Name Description Default The default index tree type. RecursionlessSizeBalancedTree The recursionless size balanced tree index tree type. SizeBalancedTree The size balanced tree index tree type. SizedAndThreadedAVLBalancedTree The sized and threaded avl balanced tree index tree type."
  },
  "api/Platform.Data.Doublets.Memory.LinksHeader-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.LinksHeader-1.html",
    "title": "Struct LinksHeader<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct LinksHeader<TLinkAddress> The links header. Implements IEquatable < LinksHeader <TLinkAddress>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets.Memory Assembly : Platform.Data.Doublets.dll Syntax public struct LinksHeader<TLinkAddress> : IEquatable<LinksHeader<TLinkAddress>> Type Parameters Name Description TLinkAddress Fields | Improve this Doc View Source AllocatedLinks The allocated links. Declaration public TLinkAddress AllocatedLinks Field Value Type Description TLinkAddress | Improve this Doc View Source FirstFreeLink The first free link. Declaration public TLinkAddress FirstFreeLink Field Value Type Description TLinkAddress | Improve this Doc View Source FreeLinks The free links. Declaration public TLinkAddress FreeLinks Field Value Type Description TLinkAddress | Improve this Doc View Source LastFreeLink The last free link. Declaration public TLinkAddress LastFreeLink Field Value Type Description TLinkAddress | Improve this Doc View Source Reserved8 The reserved. Declaration public TLinkAddress Reserved8 Field Value Type Description TLinkAddress | Improve this Doc View Source ReservedLinks The reserved links. Declaration public TLinkAddress ReservedLinks Field Value Type Description TLinkAddress | Improve this Doc View Source RootAsSource The root as source. Declaration public TLinkAddress RootAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source RootAsTarget The root as target. Declaration public TLinkAddress RootAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source SizeInBytes The size. Declaration public static readonly long SizeInBytes Field Value Type Description Int64 Methods | Improve this Doc View Source Equals(LinksHeader<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(LinksHeader<TLinkAddress> other) Parameters Type Name Description LinksHeader <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(LinksHeader<TLinkAddress>, LinksHeader<TLinkAddress>) Declaration public static bool operator ==(LinksHeader<TLinkAddress> left, LinksHeader<TLinkAddress> right) Parameters Type Name Description LinksHeader <TLinkAddress> left LinksHeader <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Inequality(LinksHeader<TLinkAddress>, LinksHeader<TLinkAddress>) Declaration public static bool operator !=(LinksHeader<TLinkAddress> left, LinksHeader<TLinkAddress> right) Parameters Type Name Description LinksHeader <TLinkAddress> left LinksHeader <TLinkAddress> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase-1.html",
    "title": "Class ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the external links recursionless size balanced tree methods base. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> : RecursionlessSizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration protected ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly byte *LinksDataParts Field Value Type Description Byte * | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly byte *LinksIndexParts Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected abstract bool FirstIsToTheLeftOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected abstract bool FirstIsToTheRightOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link. Declaration protected virtual RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected abstract TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase-1.html",
    "title": "Class ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the external links size balanced tree methods base. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> UInt32ExternalLinksSizeBalancedTreeMethodsBase UInt64ExternalLinksSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> : SizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration protected ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly byte *LinksDataParts Field Value Type Description Byte * | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly byte *LinksIndexParts Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected abstract bool FirstIsToTheLeftOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected abstract bool FirstIsToTheRightOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link. Declaration protected virtual RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected abstract TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the external links sources recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> : ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSourcesSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSourcesSizeBalancedTreeMethods-1.html",
    "title": "Class ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the external links sources size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> : ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the external links targets recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> : ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksTargetsSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksTargetsSizeBalancedTreeMethods-1.html",
    "title": "Class ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the external links targets size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> : ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.html",
    "title": "Namespace Platform.Data.Doublets.Memory.Split.Generic | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.Split.Generic Classes ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the external links recursionless size balanced tree methods base. ExternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the external links size balanced tree methods base. ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the external links sources recursionless size balanced tree methods. ExternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the external links sources size balanced tree methods. ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the external links targets recursionless size balanced tree methods. ExternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the external links targets size balanced tree methods. InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the internal links recursionless size balanced tree methods base. InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the internal links size balanced tree methods base. InternalLinksSourcesLinkedListMethods<TLinkAddress> Represents the internal links sources linked list methods. InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the internal links sources recursionless size balanced tree methods. InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the internal links sources size balanced tree methods. InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the internal links targets recursionless size balanced tree methods. InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the internal links targets size balanced tree methods. SplitMemoryLinks<TLinkAddress> Represents the split memory links. SplitMemoryLinksBase<TLinkAddress> Represents the split memory this base. UInt32InternalLinksSourcesLinkedListMethods Represents the int 32 internal links sources linked list methods. UInt64InternalLinksSourcesLinkedListMethods Represents the int 64 internal links sources linked list methods. UnusedLinksListMethods<TLinkAddress> Represents the unused links list methods."
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase-1.html",
    "title": "Class InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the internal links recursionless size balanced tree methods base. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> : RecursionlessSizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration protected InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly byte *LinksDataParts Field Value Type Description Byte * | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly byte *LinksIndexParts Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress, TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress link, TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress link TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected abstract TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link. Declaration protected virtual RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected abstract TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public abstract TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. | Improve this Doc View Source SearchCore(TLinkAddress, TLinkAddress) Searches the core using the specified root. Declaration protected TLinkAddress SearchCore(TLinkAddress root, TLinkAddress key) Parameters Type Name Description TLinkAddress root The root. TLinkAddress key The key. Returns Type Description TLinkAddress The zero. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase-1.html",
    "title": "Class InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the internal links size balanced tree methods base. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> UInt32InternalLinksSizeBalancedTreeMethodsBase UInt64InternalLinksSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress> : SizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration protected InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly byte *LinksDataParts Field Value Type Description Byte * | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly byte *LinksIndexParts Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress, TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress link, TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress link TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected abstract TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link. Declaration protected virtual RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected abstract TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public abstract TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. | Improve this Doc View Source SearchCore(TLinkAddress, TLinkAddress) Searches the core using the specified root. Declaration protected TLinkAddress SearchCore(TLinkAddress root, TLinkAddress key) Parameters Type Name Description TLinkAddress root The root. TLinkAddress key The key. Returns Type Description TLinkAddress The zero. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods-1.html",
    "title": "Class InternalLinksSourcesLinkedListMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksSourcesLinkedListMethods<TLinkAddress> Represents the internal links sources linked list methods. Inheritance Object InternalLinksSourcesLinkedListMethods<TLinkAddress> UInt32InternalLinksSourcesLinkedListMethods UInt64InternalLinksSourcesLinkedListMethods Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class InternalLinksSourcesLinkedListMethods<TLinkAddress> : RelativeCircularDoublyLinkedListMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksSourcesLinkedListMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public InternalLinksSourcesLinkedListMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified head. Declaration public TLinkAddress CountUsages(TLinkAddress head) Parameters Type Name Description TLinkAddress head The head. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified source. Declaration public TLinkAddress EachUsage(TLinkAddress source, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress source The source. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The continue. | Improve this Doc View Source GetFirst(TLinkAddress) Gets the first using the specified head. Declaration protected override TLinkAddress GetFirst(TLinkAddress head) Parameters Type Name Description TLinkAddress head The head. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLast(TLinkAddress) Gets the last using the specified head. Declaration protected override TLinkAddress GetLast(TLinkAddress head) Parameters Type Name Description TLinkAddress head The head. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link. Declaration protected virtual RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetNext(TLinkAddress) Gets the next using the specified element. Declaration protected override TLinkAddress GetNext(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetPrevious(TLinkAddress) Gets the previous using the specified element. Declaration protected override TLinkAddress GetPrevious(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified head. Declaration protected override TLinkAddress GetSize(TLinkAddress head) Parameters Type Name Description TLinkAddress head The head. Returns Type Description TLinkAddress The link | Improve this Doc View Source SetFirst(TLinkAddress, TLinkAddress) Sets the first using the specified head. Declaration protected override void SetFirst(TLinkAddress head, TLinkAddress element) Parameters Type Name Description TLinkAddress head The head. TLinkAddress element The element. | Improve this Doc View Source SetLast(TLinkAddress, TLinkAddress) Sets the last using the specified head. Declaration protected override void SetLast(TLinkAddress head, TLinkAddress element) Parameters Type Name Description TLinkAddress head The head. TLinkAddress element The element. | Improve this Doc View Source SetNext(TLinkAddress, TLinkAddress) Sets the next using the specified element. Declaration protected override void SetNext(TLinkAddress element, TLinkAddress next) Parameters Type Name Description TLinkAddress element The element. TLinkAddress next The next. | Improve this Doc View Source SetPrevious(TLinkAddress, TLinkAddress) Sets the previous using the specified element. Declaration protected override void SetPrevious(TLinkAddress element, TLinkAddress previous) Parameters Type Name Description TLinkAddress element The element. TLinkAddress previous The previous. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified head. Declaration protected override void SetSize(TLinkAddress head, TLinkAddress size) Parameters Type Name Description TLinkAddress head The head. TLinkAddress size The size."
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the internal links sources recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress, TLinkAddress] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.SearchCore(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class InternalLinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> : InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected override TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetKeyPartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected override TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot(TLinkAddress) | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Searches the source. Declaration public override TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesSizeBalancedTreeMethods-1.html",
    "title": "Class InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the internal links sources size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress, TLinkAddress] InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.SearchCore(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class InternalLinksSourcesSizeBalancedTreeMethods<TLinkAddress> : InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected override TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetKeyPartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected override TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot(TLinkAddress) | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Searches the source. Declaration public override TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksTargetsRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksTargetsRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the internal links targets recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress, TLinkAddress] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.SearchCore(TLinkAddress, TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class InternalLinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> : InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected override TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetKeyPartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected override TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot(TLinkAddress) | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Searches the source. Declaration public override TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksTargetsSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.InternalLinksTargetsSizeBalancedTreeMethods-1.html",
    "title": "Class InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the internal links targets size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksDataParts InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.LinksIndexParts InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress, TLinkAddress] InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.SearchCore(TLinkAddress, TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class InternalLinksTargetsSizeBalancedTreeMethods<TLinkAddress> : InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*, Byte*) Initializes a new instance. Declaration public InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *linksDataParts, byte *linksIndexParts, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * linksDataParts A links data parts. Byte * linksIndexParts A links index parts. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetKeyPartValue(TLinkAddress) Gets the key part value using the specified link. Declaration protected override TLinkAddress GetKeyPartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetKeyPartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot(TLinkAddress) Gets the tree root using the specified link. Declaration protected override TLinkAddress GetTreeRoot(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot(TLinkAddress) | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Searches the source. Declaration public override TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinks-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinks-1.html",
    "title": "Class SplitMemoryLinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class SplitMemoryLinks<TLinkAddress> Represents the split memory links. Inheritance Object SplitMemoryLinksBase <TLinkAddress> SplitMemoryLinks<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members SplitMemoryLinksBase<TLinkAddress>.LinkDataPartSizeInBytes SplitMemoryLinksBase<TLinkAddress>.LinkIndexPartSizeInBytes SplitMemoryLinksBase<TLinkAddress>.LinkHeaderSizeInBytes SplitMemoryLinksBase<TLinkAddress>.DefaultLinksSizeStep SplitMemoryLinksBase<TLinkAddress>._dataMemory SplitMemoryLinksBase<TLinkAddress>._indexMemory SplitMemoryLinksBase<TLinkAddress>._useLinkedList SplitMemoryLinksBase<TLinkAddress>._dataMemoryReservationStepInBytes SplitMemoryLinksBase<TLinkAddress>._indexMemoryReservationStepInBytes SplitMemoryLinksBase<TLinkAddress>.InternalSourcesListMethods SplitMemoryLinksBase<TLinkAddress>.InternalSourcesTreeMethods SplitMemoryLinksBase<TLinkAddress>.ExternalSourcesTreeMethods SplitMemoryLinksBase<TLinkAddress>.InternalTargetsTreeMethods SplitMemoryLinksBase<TLinkAddress>.ExternalTargetsTreeMethods SplitMemoryLinksBase<TLinkAddress>.UnusedLinksListMethods SplitMemoryLinksBase<TLinkAddress>.Total SplitMemoryLinksBase<TLinkAddress>.Constants SplitMemoryLinksBase<TLinkAddress>.Init(IResizableDirectMemory, IResizableDirectMemory) SplitMemoryLinksBase<TLinkAddress>.Count(IList<TLinkAddress>) SplitMemoryLinksBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) SplitMemoryLinksBase<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) SplitMemoryLinksBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) SplitMemoryLinksBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) SplitMemoryLinksBase<TLinkAddress>.GetLinkStruct(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.Exists(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.IsUnusedLink(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.GetOne() SplitMemoryLinksBase<TLinkAddress>.GetZero() SplitMemoryLinksBase<TLinkAddress>.AreEqual(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.LessThan(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.LessOrEqualThan(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.GreaterThan(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.GreaterOrEqualThan(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.ConvertToInt64(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.ConvertToAddress(Int64) SplitMemoryLinksBase<TLinkAddress>.Add(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.Subtract(TLinkAddress, TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.Increment(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.Decrement(TLinkAddress) SplitMemoryLinksBase<TLinkAddress>.AllowMultipleDisposeCalls SplitMemoryLinksBase<TLinkAddress>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class SplitMemoryLinks<TLinkAddress> : SplitMemoryLinksBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory) Initializes a new instance. Declaration public SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. | Improve this Doc View Source SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64) Initializes a new instance. Declaration public SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<TLinkAddress>) Initializes a new instance. Declaration public SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<TLinkAddress> constants) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants <TLinkAddress> constants A constants. | Improve this Doc View Source SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<TLinkAddress>, IndexTreeType, Boolean) Initializes a new instance. Declaration public SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<TLinkAddress> constants, IndexTreeType indexTreeType, bool useLinkedList) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants <TLinkAddress> constants A constants. IndexTreeType indexTreeType A index tree type. Boolean useLinkedList A use linked list. | Improve this Doc View Source SplitMemoryLinks(String, String) Initializes a new instance. Declaration public SplitMemoryLinks(string dataMemory, string indexMemory) Parameters Type Name Description String dataMemory A data memory. String indexMemory A index memory. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<TLinkAddress>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link index. Declaration protected override RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<TLinkAddress>.GetLinkDataPartReference(TLinkAddress) | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link index. Declaration protected override RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<TLinkAddress>.GetLinkIndexPartReference(TLinkAddress) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<TLinkAddress>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory, IResizableDirectMemory) Sets the pointers using the specified data memory. Declaration protected override void SetPointers(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory The data memory. IResizableDirectMemory indexMemory The index memory. Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<TLinkAddress>.SetPointers(IResizableDirectMemory, IResizableDirectMemory) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also SplitMemoryLinksBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase-1.html",
    "title": "Class SplitMemoryLinksBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class SplitMemoryLinksBase<TLinkAddress> Represents the split memory this base. Inheritance Object SplitMemoryLinksBase<TLinkAddress> SplitMemoryLinks<TLinkAddress> UInt32SplitMemoryLinks UInt64SplitMemoryLinks Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class SplitMemoryLinksBase<TLinkAddress> : DisposableBase, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source SplitMemoryLinksBase(IResizableDirectMemory, IResizableDirectMemory, Int64) Initializes a new instance. Declaration protected SplitMemoryLinksBase(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source SplitMemoryLinksBase(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<TLinkAddress>, Boolean) Initializes a new instance. Declaration protected SplitMemoryLinksBase(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<TLinkAddress> constants, bool useLinkedList) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants <TLinkAddress> constants A constants. Boolean useLinkedList A use linked list. Fields | Improve this Doc View Source _dataMemory The data memory. Declaration protected readonly IResizableDirectMemory _dataMemory Field Value Type Description IResizableDirectMemory | Improve this Doc View Source _dataMemoryReservationStepInBytes The data memory reservation step in bytes. Declaration protected readonly long _dataMemoryReservationStepInBytes Field Value Type Description Int64 | Improve this Doc View Source _indexMemory The index memory. Declaration protected readonly IResizableDirectMemory _indexMemory Field Value Type Description IResizableDirectMemory | Improve this Doc View Source _indexMemoryReservationStepInBytes The index memory reservation step in bytes. Declaration protected readonly long _indexMemoryReservationStepInBytes Field Value Type Description Int64 | Improve this Doc View Source _useLinkedList The use linked list. Declaration protected readonly bool _useLinkedList Field Value Type Description Boolean | Improve this Doc View Source DefaultLinksSizeStep The default this size step. Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description Int64 | Improve this Doc View Source ExternalSourcesTreeMethods The external sources tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> ExternalSourcesTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source ExternalTargetsTreeMethods The external targets tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> ExternalTargetsTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source InternalSourcesListMethods The internal sources list methods. Declaration protected InternalLinksSourcesLinkedListMethods<TLinkAddress> InternalSourcesListMethods Field Value Type Description InternalLinksSourcesLinkedListMethods <TLinkAddress> | Improve this Doc View Source InternalSourcesTreeMethods The internal sources tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> InternalSourcesTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source InternalTargetsTreeMethods The internal targets tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> InternalTargetsTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source LinkDataPartSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly long LinkDataPartSizeInBytes Field Value Type Description Int64 Remarks Используется только во вне класса, не рекомедуется использовать внутри. Так как во вне не обязательно будет доступен unsafe С#. | Improve this Doc View Source LinkHeaderSizeInBytes The size in bytes. Declaration public static readonly long LinkHeaderSizeInBytes Field Value Type Description Int64 | Improve this Doc View Source LinkIndexPartSizeInBytes The size in bytes. Declaration public static readonly long LinkIndexPartSizeInBytes Field Value Type Description Int64 | Improve this Doc View Source UnusedLinksListMethods The unused this list methods. Declaration protected ILinksListMethods<TLinkAddress> UnusedLinksListMethods Field Value Type Description ILinksListMethods <TLinkAddress> Properties | Improve this Doc View Source AllowMultipleDisposeCalls Gets the allow multiple dispose calls value. Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description Boolean | Improve this Doc View Source Constants Gets the constants value. Declaration public virtual LinksConstants<TLinkAddress> Constants { get; } Property Value Type Description LinksConstants <TLinkAddress> | Improve this Doc View Source Total Возвращает общее число связей находящихся в хранилище. Declaration protected virtual TLinkAddress Total { get; } Property Value Type Description TLinkAddress Methods | Improve this Doc View Source Add(TLinkAddress, TLinkAddress) Adds the first. Declaration protected virtual TLinkAddress Add(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description TLinkAddress The link | Improve this Doc View Source AreEqual(TLinkAddress, TLinkAddress) Determines whether this instance are equal. Declaration protected virtual bool AreEqual(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected virtual TLinkAddress ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description TLinkAddress The link | Improve this Doc View Source ConvertToInt64(TLinkAddress) Converts the to int 64 using the specified value. Declaration protected virtual long ConvertToInt64(TLinkAddress value) Parameters Type Name Description TLinkAddress value The value. Returns Type Description Int64 The long | Improve this Doc View Source Count(IList<TLinkAddress>) Counts the substitution. Declaration public virtual TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Returns Type Description TLinkAddress The link Exceptions Type Condition NotSupportedException Другие размеры и способы ограничений не поддерживаются. | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public virtual TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство | Improve this Doc View Source Decrement(TLinkAddress) Decrements the link. Declaration protected virtual TLinkAddress Decrement(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the substitution. Declaration public virtual TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes the manual. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual The manual. Boolean wasDisposed The was disposed. | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public virtual TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link Exceptions Type Condition NotSupportedException Другие размеры и способы ограничений не поддерживаются. | Improve this Doc View Source Exists(TLinkAddress) Determines whether this instance exists. Declaration protected virtual bool Exists(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description Boolean The bool | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected abstract LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref this header of t link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link index. Declaration protected abstract RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetLinkIndexPartReference(TLinkAddress) Gets the link index part reference using the specified link index. Declaration protected abstract RawLinkIndexPart<TLinkAddress> GetLinkIndexPartReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLinkIndexPart <TLinkAddress> A ref raw link index part of t link | Improve this Doc View Source GetLinkStruct(TLinkAddress) Gets the link struct using the specified link index. Declaration public IList<TLinkAddress> GetLinkStruct(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetOne() Gets the one. Declaration protected virtual TLinkAddress GetOne() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetZero() Gets the zero. Declaration protected virtual TLinkAddress GetZero() Returns Type Description TLinkAddress The link | Improve this Doc View Source GreaterOrEqualThan(TLinkAddress, TLinkAddress) Determines whether this instance greater or equal than. Declaration protected virtual bool GreaterOrEqualThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(TLinkAddress, TLinkAddress) Determines whether this instance greater than. Declaration protected virtual bool GreaterThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(TLinkAddress) Increments the link. Declaration protected virtual TLinkAddress Increment(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source Init(IResizableDirectMemory, IResizableDirectMemory) Inits the data memory. Declaration protected virtual void Init(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory The data memory. IResizableDirectMemory indexMemory The index memory. | Improve this Doc View Source IsUnusedLink(TLinkAddress) Determines whether this instance is unused link. Declaration protected virtual bool IsUnusedLink(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThan(TLinkAddress, TLinkAddress) Determines whether this instance less or equal than. Declaration protected virtual bool LessOrEqualThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(TLinkAddress, TLinkAddress) Determines whether this instance less than. Declaration protected virtual bool LessThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected virtual void ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory, IResizableDirectMemory) Declaration protected abstract void SetPointers(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory IResizableDirectMemory indexMemory Remarks TODO: Возможно это должно быть событием, вызываемым из IMemory, в том случае, если адрес реально поменялся Указатель this.this может быть в том же месте, так как 0-я связь не используется и имеет такой же размер как Header, поэтому header размещается в том же месте, что и 0-я связь | Improve this Doc View Source Subtract(TLinkAddress, TLinkAddress) Subtracts the first. Declaration protected virtual TLinkAddress Subtract(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description TLinkAddress The link | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public virtual TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also ILinks <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.UInt32InternalLinksSourcesLinkedListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.UInt32InternalLinksSourcesLinkedListMethods.html",
    "title": "Class UInt32InternalLinksSourcesLinkedListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksSourcesLinkedListMethods Represents the int 32 internal links sources linked list methods. Inheritance Object InternalLinksSourcesLinkedListMethods < UInt32 > UInt32InternalLinksSourcesLinkedListMethods Inherited Members InternalLinksSourcesLinkedListMethods<UInt32>.Break InternalLinksSourcesLinkedListMethods<UInt32>.Continue InternalLinksSourcesLinkedListMethods<UInt32>.GetFirst(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.GetLast(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.GetPrevious(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.GetNext(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.GetSize(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.SetFirst(UInt32, UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.SetLast(UInt32, UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.SetPrevious(UInt32, UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.SetNext(UInt32, UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.SetSize(UInt32, UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.CountUsages(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.GetLinkValues(UInt32) InternalLinksSourcesLinkedListMethods<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class UInt32InternalLinksSourcesLinkedListMethods : InternalLinksSourcesLinkedListMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksSourcesLinkedListMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*) Initializes a new UInt32InternalLinksSourcesLinkedListMethods instance. Declaration public UInt32InternalLinksSourcesLinkedListMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. Methods | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods<System.UInt32>.GetLinkIndexPartReference(System.UInt32) See Also InternalLinksSourcesLinkedListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.UInt64InternalLinksSourcesLinkedListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.UInt64InternalLinksSourcesLinkedListMethods.html",
    "title": "Class UInt64InternalLinksSourcesLinkedListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksSourcesLinkedListMethods Represents the int 64 internal links sources linked list methods. Inheritance Object InternalLinksSourcesLinkedListMethods < UInt64 > UInt64InternalLinksSourcesLinkedListMethods Inherited Members InternalLinksSourcesLinkedListMethods<UInt64>.Break InternalLinksSourcesLinkedListMethods<UInt64>.Continue InternalLinksSourcesLinkedListMethods<UInt64>.GetFirst(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.GetLast(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.GetPrevious(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.GetNext(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.GetSize(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.SetFirst(UInt64, UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.SetLast(UInt64, UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.SetPrevious(UInt64, UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.SetNext(UInt64, UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.SetSize(UInt64, UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.CountUsages(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.GetLinkValues(UInt64) InternalLinksSourcesLinkedListMethods<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class UInt64InternalLinksSourcesLinkedListMethods : InternalLinksSourcesLinkedListMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksSourcesLinkedListMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*) Initializes a new UInt64InternalLinksSourcesLinkedListMethods instance. Declaration public UInt64InternalLinksSourcesLinkedListMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. Methods | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSourcesLinkedListMethods<System.UInt64>.GetLinkIndexPartReference(System.UInt64) See Also InternalLinksSourcesLinkedListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods-1.html",
    "title": "Class UnusedLinksListMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UnusedLinksListMethods<TLinkAddress> Represents the unused links list methods. Inheritance Object UnusedLinksListMethods<TLinkAddress> UInt32UnusedLinksListMethods UInt64UnusedLinksListMethods Implements ILinksListMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.Split.Generic Assembly : Platform.Data.Doublets.dll Syntax public class UnusedLinksListMethods<TLinkAddress> : AbsoluteCircularDoublyLinkedListMethods<TLinkAddress>, ILinksListMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source UnusedLinksListMethods(Byte*, Byte*) Initializes a new instance. Declaration public UnusedLinksListMethods(byte *links, byte *header) Parameters Type Name Description Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source GetFirst() Gets the first. Declaration protected override TLinkAddress GetFirst() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLast() Gets the last. Declaration protected override TLinkAddress GetLast() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLinkDataPartReference(TLinkAddress) Gets the link data part reference using the specified link. Declaration protected virtual RawLinkDataPart<TLinkAddress> GetLinkDataPartReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLinkDataPart <TLinkAddress> A ref raw link data part of t link | Improve this Doc View Source GetNext(TLinkAddress) Gets the next using the specified element. Declaration protected override TLinkAddress GetNext(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetPrevious(TLinkAddress) Gets the previous using the specified element. Declaration protected override TLinkAddress GetPrevious(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetSize() Gets the size. Declaration protected override TLinkAddress GetSize() Returns Type Description TLinkAddress The link | Improve this Doc View Source SetFirst(TLinkAddress) Sets the first using the specified element. Declaration protected override void SetFirst(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. | Improve this Doc View Source SetLast(TLinkAddress) Sets the last using the specified element. Declaration protected override void SetLast(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. | Improve this Doc View Source SetNext(TLinkAddress, TLinkAddress) Sets the next using the specified element. Declaration protected override void SetNext(TLinkAddress element, TLinkAddress next) Parameters Type Name Description TLinkAddress element The element. TLinkAddress next The next. | Improve this Doc View Source SetPrevious(TLinkAddress, TLinkAddress) Sets the previous using the specified element. Declaration protected override void SetPrevious(TLinkAddress element, TLinkAddress previous) Parameters Type Name Description TLinkAddress element The element. TLinkAddress previous The previous. | Improve this Doc View Source SetSize(TLinkAddress) Sets the size using the specified size. Declaration protected override void SetSize(TLinkAddress size) Parameters Type Name Description TLinkAddress size The size. Implements ILinksListMethods<TLinkAddress> See Also ILinksListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.html",
    "title": "Namespace Platform.Data.Doublets.Memory.Split | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.Split Structs RawLinkDataPart<TLinkAddress> The raw link data part. RawLinkIndexPart<TLinkAddress> The raw link index part."
  },
  "api/Platform.Data.Doublets.Memory.Split.RawLinkDataPart-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.RawLinkDataPart-1.html",
    "title": "Struct RawLinkDataPart<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct RawLinkDataPart<TLinkAddress> The raw link data part. Implements IEquatable < RawLinkDataPart <TLinkAddress>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets.Memory.Split Assembly : Platform.Data.Doublets.dll Syntax public struct RawLinkDataPart<TLinkAddress> : IEquatable<RawLinkDataPart<TLinkAddress>> Type Parameters Name Description TLinkAddress Fields | Improve this Doc View Source SizeInBytes The size. Declaration public static readonly long SizeInBytes Field Value Type Description Int64 | Improve this Doc View Source Source The source. Declaration public TLinkAddress Source Field Value Type Description TLinkAddress | Improve this Doc View Source Target The target. Declaration public TLinkAddress Target Field Value Type Description TLinkAddress Methods | Improve this Doc View Source Equals(RawLinkDataPart<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(RawLinkDataPart<TLinkAddress> other) Parameters Type Name Description RawLinkDataPart <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(RawLinkDataPart<TLinkAddress>, RawLinkDataPart<TLinkAddress>) Declaration public static bool operator ==(RawLinkDataPart<TLinkAddress> left, RawLinkDataPart<TLinkAddress> right) Parameters Type Name Description RawLinkDataPart <TLinkAddress> left RawLinkDataPart <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Inequality(RawLinkDataPart<TLinkAddress>, RawLinkDataPart<TLinkAddress>) Declaration public static bool operator !=(RawLinkDataPart<TLinkAddress> left, RawLinkDataPart<TLinkAddress> right) Parameters Type Name Description RawLinkDataPart <TLinkAddress> left RawLinkDataPart <TLinkAddress> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Doublets.Memory.Split.RawLinkIndexPart-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.RawLinkIndexPart-1.html",
    "title": "Struct RawLinkIndexPart<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct RawLinkIndexPart<TLinkAddress> The raw link index part. Implements IEquatable < RawLinkIndexPart <TLinkAddress>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets.Memory.Split Assembly : Platform.Data.Doublets.dll Syntax public struct RawLinkIndexPart<TLinkAddress> : IEquatable<RawLinkIndexPart<TLinkAddress>> Type Parameters Name Description TLinkAddress Fields | Improve this Doc View Source LeftAsSource The left as source. Declaration public TLinkAddress LeftAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source LeftAsTarget The left as target. Declaration public TLinkAddress LeftAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source RightAsSource The right as source. Declaration public TLinkAddress RightAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source RightAsTarget The right as target. Declaration public TLinkAddress RightAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source RootAsSource The root as source. Declaration public TLinkAddress RootAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source RootAsTarget The root as target. Declaration public TLinkAddress RootAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source SizeAsSource The size as source. Declaration public TLinkAddress SizeAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source SizeAsTarget The size as target. Declaration public TLinkAddress SizeAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source SizeInBytes The size. Declaration public static readonly long SizeInBytes Field Value Type Description Int64 Methods | Improve this Doc View Source Equals(RawLinkIndexPart<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(RawLinkIndexPart<TLinkAddress> other) Parameters Type Name Description RawLinkIndexPart <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(RawLinkIndexPart<TLinkAddress>, RawLinkIndexPart<TLinkAddress>) Declaration public static bool operator ==(RawLinkIndexPart<TLinkAddress> left, RawLinkIndexPart<TLinkAddress> right) Parameters Type Name Description RawLinkIndexPart <TLinkAddress> left RawLinkIndexPart <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Inequality(RawLinkIndexPart<TLinkAddress>, RawLinkIndexPart<TLinkAddress>) Declaration public static bool operator !=(RawLinkIndexPart<TLinkAddress> left, RawLinkIndexPart<TLinkAddress> right) Parameters Type Name Description RawLinkIndexPart <TLinkAddress> left RawLinkIndexPart <TLinkAddress> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.html",
    "title": "Namespace Platform.Data.Doublets.Memory.Split.Specific | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.Split.Specific Classes UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 external links recursionless size balanced tree methods base. UInt32ExternalLinksSizeBalancedTreeMethodsBase Represents the int 32 external links size balanced tree methods base. UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 external links sources recursionless size balanced tree methods. UInt32ExternalLinksSourcesSizeBalancedTreeMethods Represents the int 32 external links sources size balanced tree methods. UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 external links targets recursionless size balanced tree methods. UInt32ExternalLinksTargetsSizeBalancedTreeMethods Represents the int 32 external links targets size balanced tree methods. UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 internal links recursionless size balanced tree methods base. UInt32InternalLinksSizeBalancedTreeMethodsBase Represents the int 32 internal links size balanced tree methods base. UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 internal links sources recursionless size balanced tree methods. UInt32InternalLinksSourcesSizeBalancedTreeMethods Represents the int 32 internal links sources size balanced tree methods. UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 internal links targets recursionless size balanced tree methods. UInt32InternalLinksTargetsSizeBalancedTreeMethods Represents the int 32 internal links targets size balanced tree methods. UInt32SplitMemoryLinks Represents the int 32 split memory links. UInt32UnusedLinksListMethods Represents the int 32 unused links list methods. UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 external links recursionless size balanced tree methods base. UInt64ExternalLinksSizeBalancedTreeMethodsBase Represents the int 64 external links size balanced tree methods base. UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 external links sources recursionless size balanced tree methods. UInt64ExternalLinksSourcesSizeBalancedTreeMethods Represents the int 64 external links sources size balanced tree methods. UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 external links targets recursionless size balanced tree methods. UInt64ExternalLinksTargetsSizeBalancedTreeMethods Represents the int 64 external links targets size balanced tree methods. UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 internal links recursionless size balanced tree methods base. UInt64InternalLinksSizeBalancedTreeMethodsBase Represents the int 64 internal links size balanced tree methods base. UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 internal links sources recursionless size balanced tree methods. UInt64InternalLinksSourcesSizeBalancedTreeMethods Represents the int 64 internal links sources size balanced tree methods. UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 internal links targets recursionless size balanced tree methods. UInt64InternalLinksTargetsSizeBalancedTreeMethods Represents the int 64 internal links targets size balanced tree methods. UInt64SplitMemoryLinks Represents the int 64 split memory links. UInt64UnusedLinksListMethods Represents the int 64 unused links list methods."
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 external links recursionless size balanced tree methods base. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot() ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase : ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<uint>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt32 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<uint>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkIndexPartReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The link | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32ExternalLinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksSizeBalancedTreeMethodsBase Represents the int 32 external links size balanced tree methods base. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksSizeBalancedTreeMethodsBase UInt32ExternalLinksSourcesSizeBalancedTreeMethods UInt32ExternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot() ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32ExternalLinksSizeBalancedTreeMethodsBase : ExternalLinksSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt32ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<uint>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt32 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<uint>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkIndexPartReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The link | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 external links sources recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods : UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt32ExternalLinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksSourcesSizeBalancedTreeMethods Represents the int 32 external links sources size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksSizeBalancedTreeMethodsBase UInt32ExternalLinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32ExternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt32ExternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt32ExternalLinksSizeBalancedTreeMethodsBase.Header UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt32ExternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32ExternalLinksSourcesSizeBalancedTreeMethods : UInt32ExternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt32ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32ExternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 external links targets recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods : UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32ExternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32ExternalLinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt32ExternalLinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32ExternalLinksTargetsSizeBalancedTreeMethods Represents the int 32 external links targets size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32ExternalLinksSizeBalancedTreeMethodsBase UInt32ExternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32ExternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt32ExternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt32ExternalLinksSizeBalancedTreeMethodsBase.Header UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt32ExternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32ExternalLinksTargetsSizeBalancedTreeMethods : UInt32ExternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32ExternalLinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt32ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32ExternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 internal links recursionless size balanced tree methods base. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetKeyPartValue(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase : InternalLinksRecursionlessSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<uint>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt32 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<uint>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkIndexPartReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The link | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32InternalLinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksSizeBalancedTreeMethodsBase Represents the int 32 internal links size balanced tree methods base. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksSizeBalancedTreeMethodsBase UInt32InternalLinksSourcesSizeBalancedTreeMethods UInt32InternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetKeyPartValue(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32InternalLinksSizeBalancedTreeMethodsBase : InternalLinksSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt32InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<uint>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt32 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<uint>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkIndexPartReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The link | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The link | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 internal links sources recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods : UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetKeyPartValue(UInt32) Gets the key part value using the specified node. Declaration protected override uint GetKeyPartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetKeyPartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot(UInt32) Gets the tree root using the specified node. Declaration protected override uint GetTreeRoot(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot(System.UInt32) | Improve this Doc View Source Search(UInt32, UInt32) Searches the source. Declaration public override uint Search(uint source, uint target) Parameters Type Name Description UInt32 source The source. UInt32 target The target. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.Search(System.UInt32, System.UInt32) | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt32InternalLinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksSourcesSizeBalancedTreeMethods Represents the int 32 internal links sources size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksSizeBalancedTreeMethodsBase UInt32InternalLinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32InternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt32InternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt32InternalLinksSizeBalancedTreeMethodsBase.Header UInt32InternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt32InternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32InternalLinksSourcesSizeBalancedTreeMethods : UInt32InternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt32InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetKeyPartValue(UInt32) Gets the key part value using the specified node. Declaration protected override uint GetKeyPartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetKeyPartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot(UInt32) Gets the tree root using the specified node. Declaration protected override uint GetTreeRoot(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot(System.UInt32) | Improve this Doc View Source Search(UInt32, UInt32) Searches the source. Declaration public override uint Search(uint source, uint target) Parameters Type Name Description UInt32 source The source. UInt32 target The target. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.Search(System.UInt32, System.UInt32) | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32InternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 internal links targets recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods : UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetKeyPartValue(UInt32) Gets the key part value using the specified node. Declaration protected override uint GetKeyPartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetKeyPartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot(UInt32) Gets the tree root using the specified node. Declaration protected override uint GetTreeRoot(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot(System.UInt32) | Improve this Doc View Source Search(UInt32, UInt32) Searches the source. Declaration public override uint Search(uint source, uint target) Parameters Type Name Description UInt32 source The source. UInt32 target The target. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.Search(System.UInt32, System.UInt32) | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32InternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32InternalLinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt32InternalLinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32InternalLinksTargetsSizeBalancedTreeMethods Represents the int 32 internal links targets size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt32 > UInt32InternalLinksSizeBalancedTreeMethodsBase UInt32InternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32InternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt32InternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt32InternalLinksSizeBalancedTreeMethodsBase.Header UInt32InternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt32InternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32, UInt32] InternalLinksSizeBalancedTreeMethodsBase<UInt32>.SearchCore(UInt32, UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) InternalLinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32InternalLinksTargetsSizeBalancedTreeMethods : UInt32InternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLinkDataPart<UInt32>*, RawLinkIndexPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32InternalLinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt32InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLinkDataPart<uint>*linksDataParts, RawLinkIndexPart<uint>*linksIndexParts, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLinkDataPart < UInt32 >* linksDataParts A links data parts. RawLinkIndexPart < UInt32 >* linksIndexParts A links index parts. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified node. Declaration protected override uint GetBasePartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetKeyPartValue(UInt32) Gets the key part value using the specified node. Declaration protected override uint GetKeyPartValue(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetKeyPartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref link | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link | Improve this Doc View Source GetTreeRoot(UInt32) Gets the tree root using the specified node. Declaration protected override uint GetTreeRoot(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot(System.UInt32) | Improve this Doc View Source Search(UInt32, UInt32) Searches the source. Declaration public override uint Search(uint source, uint target) Parameters Type Name Description UInt32 source The source. UInt32 target The target. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt32>.Search(System.UInt32, System.UInt32) | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32InternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32SplitMemoryLinks.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32SplitMemoryLinks.html",
    "title": "Class UInt32SplitMemoryLinks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32SplitMemoryLinks Represents the int 32 split memory links. Inheritance Object SplitMemoryLinksBase < UInt32 > UInt32SplitMemoryLinks Implements ILinks < UInt32 > Platform.Data.Doublets.ILinks < UInt32 , LinksConstants < UInt32 >> Inherited Members SplitMemoryLinksBase<UInt32>.LinkDataPartSizeInBytes SplitMemoryLinksBase<UInt32>.LinkIndexPartSizeInBytes SplitMemoryLinksBase<UInt32>.LinkHeaderSizeInBytes SplitMemoryLinksBase<UInt32>.DefaultLinksSizeStep SplitMemoryLinksBase<UInt32>._dataMemory SplitMemoryLinksBase<UInt32>._indexMemory SplitMemoryLinksBase<UInt32>._useLinkedList SplitMemoryLinksBase<UInt32>._dataMemoryReservationStepInBytes SplitMemoryLinksBase<UInt32>._indexMemoryReservationStepInBytes SplitMemoryLinksBase<UInt32>.InternalSourcesListMethods SplitMemoryLinksBase<UInt32>.InternalSourcesTreeMethods SplitMemoryLinksBase<UInt32>.ExternalSourcesTreeMethods SplitMemoryLinksBase<UInt32>.InternalTargetsTreeMethods SplitMemoryLinksBase<UInt32>.ExternalTargetsTreeMethods SplitMemoryLinksBase<UInt32>.UnusedLinksListMethods SplitMemoryLinksBase<UInt32>.Total SplitMemoryLinksBase<UInt32>.Constants SplitMemoryLinksBase<UInt32>.Init(IResizableDirectMemory, IResizableDirectMemory) SplitMemoryLinksBase<UInt32>.Count(IList<UInt32>) SplitMemoryLinksBase<UInt32>.Each(IList<UInt32>, Nullable<ReadHandler<UInt32>>) SplitMemoryLinksBase<UInt32>.Update(IList<UInt32>, IList<UInt32>, Nullable<WriteHandler<UInt32>>) SplitMemoryLinksBase<UInt32>.Create(IList<UInt32>, Nullable<WriteHandler<UInt32>>) SplitMemoryLinksBase<UInt32>.Delete(IList<UInt32>, Nullable<WriteHandler<UInt32>>) SplitMemoryLinksBase<UInt32>.GetLinkStruct(UInt32) SplitMemoryLinksBase<UInt32>.Exists(UInt32) SplitMemoryLinksBase<UInt32>.IsUnusedLink(UInt32) SplitMemoryLinksBase<UInt32>.AllowMultipleDisposeCalls SplitMemoryLinksBase<UInt32>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32SplitMemoryLinks : SplitMemoryLinksBase<uint>, ILinks<uint>, ILinks<uint, LinksConstants<uint>> Constructors | Improve this Doc View Source UInt32SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory) Initializes a new UInt32SplitMemoryLinks instance. Declaration public UInt32SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. | Improve this Doc View Source UInt32SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64) Initializes a new UInt32SplitMemoryLinks instance. Declaration public UInt32SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UInt32SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<UInt32>) Initializes a new UInt32SplitMemoryLinks instance. Declaration public UInt32SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<uint> constants) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt32 > constants A constants. | Improve this Doc View Source UInt32SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<UInt32>, IndexTreeType, Boolean) Initializes a new UInt32SplitMemoryLinks instance. Declaration public UInt32SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<uint> constants, IndexTreeType indexTreeType, bool useLinkedList) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt32 > constants A constants. IndexTreeType indexTreeType A index tree type. Boolean useLinkedList A use linked list. Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.Add(System.UInt32, System.UInt32) | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.AreEqual(System.UInt32, System.UInt32) | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected override uint ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.ConvertToAddress(System.Int64) | Improve this Doc View Source ConvertToInt64(UInt32) Converts the to int 64 using the specified value. Declaration protected override long ConvertToInt64(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Int64 The long Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.ConvertToInt64(System.UInt32) | Improve this Doc View Source Decrement(UInt32) Decrements the link. Declaration protected override uint Decrement(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.Decrement(System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link index. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint linkIndex) Parameters Type Name Description UInt32 linkIndex The link index. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GetLinkDataPartReference(System.UInt32) | Improve this Doc View Source GetLinkIndexPartReference(UInt32) Gets the link index part reference using the specified link index. Declaration protected override RawLinkIndexPart<uint> GetLinkIndexPartReference(uint linkIndex) Parameters Type Name Description UInt32 linkIndex The link index. Returns Type Description RawLinkIndexPart < UInt32 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GetLinkIndexPartReference(System.UInt32) | Improve this Doc View Source GetOne() Gets the one. Declaration protected override uint GetOne() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GetOne() | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GetZero() | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GreaterOrEqualThan(System.UInt32, System.UInt32) | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.GreaterThan(System.UInt32, System.UInt32) | Improve this Doc View Source Increment(UInt32) Increments the link. Declaration protected override uint Increment(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.Increment(System.UInt32) | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.LessOrEqualThan(System.UInt32, System.UInt32) | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.LessThan(System.UInt32, System.UInt32) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory, IResizableDirectMemory) Sets the pointers using the specified data memory. Declaration protected override void SetPointers(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory The data memory. IResizableDirectMemory indexMemory The index memory. Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.SetPointers(IResizableDirectMemory, IResizableDirectMemory) | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt32>.Subtract(System.UInt32, System.UInt32) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also SplitMemoryLinksBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32UnusedLinksListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt32UnusedLinksListMethods.html",
    "title": "Class UInt32UnusedLinksListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32UnusedLinksListMethods Represents the int 32 unused links list methods. Inheritance Object UnusedLinksListMethods < UInt32 > UInt32UnusedLinksListMethods Implements ILinksListMethods < UInt32 > Inherited Members UnusedLinksListMethods<UInt32>.GetFirst() UnusedLinksListMethods<UInt32>.GetLast() UnusedLinksListMethods<UInt32>.GetPrevious(UInt32) UnusedLinksListMethods<UInt32>.GetNext(UInt32) UnusedLinksListMethods<UInt32>.GetSize() UnusedLinksListMethods<UInt32>.SetFirst(UInt32) UnusedLinksListMethods<UInt32>.SetLast(UInt32) UnusedLinksListMethods<UInt32>.SetPrevious(UInt32, UInt32) UnusedLinksListMethods<UInt32>.SetNext(UInt32, UInt32) UnusedLinksListMethods<UInt32>.SetSize(UInt32) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32UnusedLinksListMethods : UnusedLinksListMethods<uint>, ILinksListMethods<uint> Constructors | Improve this Doc View Source UInt32UnusedLinksListMethods(RawLinkDataPart<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32UnusedLinksListMethods instance. Declaration public UInt32UnusedLinksListMethods(RawLinkDataPart<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description RawLinkDataPart < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt32) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<uint> GetLinkDataPartReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLinkDataPart < UInt32 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods<System.UInt32>.GetLinkDataPartReference(System.UInt32) Implements ILinksListMethods<TLinkAddress> See Also UnusedLinksListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 external links recursionless size balanced tree methods base. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot() ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase : ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<ulong>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt64 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<ulong>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkIndexPartReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64ExternalLinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksSizeBalancedTreeMethodsBase Represents the int 64 external links size balanced tree methods base. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksSizeBalancedTreeMethodsBase UInt64ExternalLinksSourcesSizeBalancedTreeMethods UInt64ExternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot() ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64ExternalLinksSizeBalancedTreeMethodsBase : ExternalLinksSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt64ExternalLinksSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<ulong>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt64 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<ulong>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkIndexPartReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress> See Also ExternalLinksSizeBalancedTreeMethodsBase <TLinkAddress> ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 external links sources recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods : UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64ExternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt64ExternalLinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksSourcesSizeBalancedTreeMethods Represents the int 64 external links sources size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksSizeBalancedTreeMethodsBase UInt64ExternalLinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64ExternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt64ExternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt64ExternalLinksSizeBalancedTreeMethodsBase.Header UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt64ExternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64ExternalLinksSourcesSizeBalancedTreeMethods : UInt64ExternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt64ExternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64ExternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 external links targets recursionless size balanced tree methods. Inheritance Object ExternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods : UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64ExternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64ExternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64ExternalLinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt64ExternalLinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64ExternalLinksTargetsSizeBalancedTreeMethods Represents the int 64 external links targets size balanced tree methods. Inheritance Object ExternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64ExternalLinksSizeBalancedTreeMethodsBase UInt64ExternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64ExternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt64ExternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt64ExternalLinksSizeBalancedTreeMethodsBase.Header UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt64ExternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64ExternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) ExternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64ExternalLinksTargetsSizeBalancedTreeMethods : UInt64ExternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64ExternalLinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt64ExternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.ExternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64ExternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 internal links recursionless size balanced tree methods base. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetKeyPartValue(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase : InternalLinksRecursionlessSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<ulong>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt64 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<ulong>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkIndexPartReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64InternalLinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksSizeBalancedTreeMethodsBase Represents the int 64 internal links size balanced tree methods base. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksSizeBalancedTreeMethodsBase UInt64InternalLinksSourcesSizeBalancedTreeMethods UInt64InternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetKeyPartValue(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64InternalLinksSizeBalancedTreeMethodsBase : InternalLinksSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt64InternalLinksSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source LinksDataParts The links data parts. Declaration protected readonly RawLinkDataPart<ulong>*LinksDataParts Field Value Type Description RawLinkDataPart < UInt64 >* | Improve this Doc View Source LinksIndexParts The links index parts. Declaration protected readonly RawLinkIndexPart<ulong>*LinksIndexParts Field Value Type Description RawLinkIndexPart < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkIndexPartReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress> See Also InternalLinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 internal links sources recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods : UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64InternalLinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetKeyPartValue(UInt64) Gets the key part value using the specified node. Declaration protected override ulong GetKeyPartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetKeyPartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot(UInt64) Gets the tree root using the specified node. Declaration protected override ulong GetTreeRoot(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot(System.UInt64) | Improve this Doc View Source Search(UInt64, UInt64) Searches the source. Declaration public override ulong Search(ulong source, ulong target) Parameters Type Name Description UInt64 source The source. UInt64 target The target. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.Search(System.UInt64, System.UInt64) | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt64InternalLinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksSourcesSizeBalancedTreeMethods Represents the int 64 internal links sources size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksSizeBalancedTreeMethodsBase UInt64InternalLinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64InternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt64InternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt64InternalLinksSizeBalancedTreeMethodsBase.Header UInt64InternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt64InternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64InternalLinksSourcesSizeBalancedTreeMethods : UInt64InternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt64InternalLinksSourcesSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetKeyPartValue(UInt64) Gets the key part value using the specified node. Declaration protected override ulong GetKeyPartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetKeyPartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref link | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot(UInt64) Gets the tree root using the specified node. Declaration protected override ulong GetTreeRoot(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot(System.UInt64) | Improve this Doc View Source Search(UInt64, UInt64) Searches the source. Declaration public override ulong Search(ulong source, ulong target) Parameters Type Name Description UInt64 source The source. UInt64 target The target. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.Search(System.UInt64, System.UInt64) | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64InternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 internal links targets recursionless size balanced tree methods. Inheritance Object InternalLinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksDataParts UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LinksIndexParts UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods : UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64InternalLinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetKeyPartValue(UInt64) Gets the key part value using the specified node. Declaration protected override ulong GetKeyPartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetKeyPartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot(UInt64) Gets the tree root using the specified node. Declaration protected override ulong GetTreeRoot(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot(System.UInt64) | Improve this Doc View Source Search(UInt64, UInt64) Searches the source. Declaration public override ulong Search(ulong source, ulong target) Parameters Type Name Description UInt64 source The source. UInt64 target The target. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.Search(System.UInt64, System.UInt64) | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64InternalLinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64InternalLinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt64InternalLinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64InternalLinksTargetsSizeBalancedTreeMethods Represents the int 64 internal links targets size balanced tree methods. Inheritance Object InternalLinksSizeBalancedTreeMethodsBase < UInt64 > UInt64InternalLinksSizeBalancedTreeMethodsBase UInt64InternalLinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64InternalLinksSizeBalancedTreeMethodsBase.LinksDataParts UInt64InternalLinksSizeBalancedTreeMethodsBase.LinksIndexParts UInt64InternalLinksSizeBalancedTreeMethodsBase.Header UInt64InternalLinksSizeBalancedTreeMethodsBase.GetZero() UInt64InternalLinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GetLinkDataPartReference(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.GetLinkIndexPartReference(UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64InternalLinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Break InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Continue InternalLinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64, UInt64] InternalLinksSizeBalancedTreeMethodsBase<UInt64>.SearchCore(UInt64, UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) InternalLinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64InternalLinksTargetsSizeBalancedTreeMethods : UInt64InternalLinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLinkDataPart<UInt64>*, RawLinkIndexPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64InternalLinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt64InternalLinksTargetsSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLinkDataPart<ulong>*linksDataParts, RawLinkIndexPart<ulong>*linksIndexParts, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLinkDataPart < UInt64 >* linksDataParts A links data parts. RawLinkIndexPart < UInt64 >* linksIndexParts A links index parts. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified node. Declaration protected override ulong GetBasePartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetKeyPartValue(UInt64) Gets the key part value using the specified node. Declaration protected override ulong GetKeyPartValue(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetKeyPartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link | Improve this Doc View Source GetTreeRoot(UInt64) Gets the tree root using the specified node. Declaration protected override ulong GetTreeRoot(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot(System.UInt64) | Improve this Doc View Source Search(UInt64, UInt64) Searches the source. Declaration public override ulong Search(ulong source, ulong target) Parameters Type Name Description UInt64 source The source. UInt64 target The target. Returns Type Description UInt64 The link Overrides Platform.Data.Doublets.Memory.Split.Generic.InternalLinksSizeBalancedTreeMethodsBase<System.UInt64>.Search(System.UInt64, System.UInt64) | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64InternalLinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64SplitMemoryLinks.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64SplitMemoryLinks.html",
    "title": "Class UInt64SplitMemoryLinks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64SplitMemoryLinks Represents the int 64 split memory links. Inheritance Object SplitMemoryLinksBase < UInt64 > UInt64SplitMemoryLinks Implements ILinks < UInt64 > Platform.Data.Doublets.ILinks < UInt64 , LinksConstants < UInt64 >> Inherited Members SplitMemoryLinksBase<UInt64>.LinkDataPartSizeInBytes SplitMemoryLinksBase<UInt64>.LinkIndexPartSizeInBytes SplitMemoryLinksBase<UInt64>.LinkHeaderSizeInBytes SplitMemoryLinksBase<UInt64>.DefaultLinksSizeStep SplitMemoryLinksBase<UInt64>._dataMemory SplitMemoryLinksBase<UInt64>._indexMemory SplitMemoryLinksBase<UInt64>._useLinkedList SplitMemoryLinksBase<UInt64>._dataMemoryReservationStepInBytes SplitMemoryLinksBase<UInt64>._indexMemoryReservationStepInBytes SplitMemoryLinksBase<UInt64>.InternalSourcesListMethods SplitMemoryLinksBase<UInt64>.InternalSourcesTreeMethods SplitMemoryLinksBase<UInt64>.ExternalSourcesTreeMethods SplitMemoryLinksBase<UInt64>.InternalTargetsTreeMethods SplitMemoryLinksBase<UInt64>.ExternalTargetsTreeMethods SplitMemoryLinksBase<UInt64>.UnusedLinksListMethods SplitMemoryLinksBase<UInt64>.Total SplitMemoryLinksBase<UInt64>.Constants SplitMemoryLinksBase<UInt64>.Init(IResizableDirectMemory, IResizableDirectMemory) SplitMemoryLinksBase<UInt64>.Count(IList<UInt64>) SplitMemoryLinksBase<UInt64>.Each(IList<UInt64>, Nullable<ReadHandler<UInt64>>) SplitMemoryLinksBase<UInt64>.Update(IList<UInt64>, IList<UInt64>, Nullable<WriteHandler<UInt64>>) SplitMemoryLinksBase<UInt64>.Create(IList<UInt64>, Nullable<WriteHandler<UInt64>>) SplitMemoryLinksBase<UInt64>.Delete(IList<UInt64>, Nullable<WriteHandler<UInt64>>) SplitMemoryLinksBase<UInt64>.GetLinkStruct(UInt64) SplitMemoryLinksBase<UInt64>.Exists(UInt64) SplitMemoryLinksBase<UInt64>.IsUnusedLink(UInt64) SplitMemoryLinksBase<UInt64>.AllowMultipleDisposeCalls SplitMemoryLinksBase<UInt64>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64SplitMemoryLinks : SplitMemoryLinksBase<ulong>, ILinks<ulong>, ILinks<ulong, LinksConstants<ulong>> Constructors | Improve this Doc View Source UInt64SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory) Initializes a new UInt64SplitMemoryLinks instance. Declaration public UInt64SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. | Improve this Doc View Source UInt64SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64) Initializes a new UInt64SplitMemoryLinks instance. Declaration public UInt64SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UInt64SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<UInt64>) Initializes a new UInt64SplitMemoryLinks instance. Declaration public UInt64SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<ulong> constants) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt64 > constants A constants. | Improve this Doc View Source UInt64SplitMemoryLinks(IResizableDirectMemory, IResizableDirectMemory, Int64, LinksConstants<UInt64>, IndexTreeType, Boolean) Initializes a new UInt64SplitMemoryLinks instance. Declaration public UInt64SplitMemoryLinks(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory, long memoryReservationStep, LinksConstants<ulong> constants, IndexTreeType indexTreeType, bool useLinkedList) Parameters Type Name Description IResizableDirectMemory dataMemory A data memory. IResizableDirectMemory indexMemory A index memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt64 > constants A constants. IndexTreeType indexTreeType A index tree type. Boolean useLinkedList A use linked list. Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.Add(System.UInt64, System.UInt64) | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.AreEqual(System.UInt64, System.UInt64) | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected override ulong ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.ConvertToAddress(System.Int64) | Improve this Doc View Source ConvertToInt64(UInt64) Converts the to int 64 using the specified value. Declaration protected override long ConvertToInt64(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Int64 The long Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.ConvertToInt64(System.UInt64) | Improve this Doc View Source Decrement(UInt64) Decrements the link. Declaration protected override ulong Decrement(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.Decrement(System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link index. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong linkIndex) Parameters Type Name Description UInt64 linkIndex The link index. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GetLinkDataPartReference(System.UInt64) | Improve this Doc View Source GetLinkIndexPartReference(UInt64) Gets the link index part reference using the specified link index. Declaration protected override RawLinkIndexPart<ulong> GetLinkIndexPartReference(ulong linkIndex) Parameters Type Name Description UInt64 linkIndex The link index. Returns Type Description RawLinkIndexPart < UInt64 > A ref raw link index part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GetLinkIndexPartReference(System.UInt64) | Improve this Doc View Source GetOne() Gets the one. Declaration protected override ulong GetOne() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GetOne() | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GetZero() | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GreaterOrEqualThan(System.UInt64, System.UInt64) | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.GreaterThan(System.UInt64, System.UInt64) | Improve this Doc View Source Increment(UInt64) Increments the link. Declaration protected override ulong Increment(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.Increment(System.UInt64) | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.LessOrEqualThan(System.UInt64, System.UInt64) | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.LessThan(System.UInt64, System.UInt64) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory, IResizableDirectMemory) Sets the pointers using the specified data memory. Declaration protected override void SetPointers(IResizableDirectMemory dataMemory, IResizableDirectMemory indexMemory) Parameters Type Name Description IResizableDirectMemory dataMemory The data memory. IResizableDirectMemory indexMemory The index memory. Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.SetPointers(IResizableDirectMemory, IResizableDirectMemory) | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.Split.Generic.SplitMemoryLinksBase<System.UInt64>.Subtract(System.UInt64, System.UInt64) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) UInt64LinksExtensions.AnyLinkIsAny(ILinks<UInt64>, UInt64[]) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Boolean, Boolean) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) UInt64LinksExtensions.AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also SplitMemoryLinksBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64UnusedLinksListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.Split.Specific.UInt64UnusedLinksListMethods.html",
    "title": "Class UInt64UnusedLinksListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64UnusedLinksListMethods Represents the int 64 unused links list methods. Inheritance Object UnusedLinksListMethods < UInt64 > UInt64UnusedLinksListMethods Implements ILinksListMethods < UInt64 > Inherited Members UnusedLinksListMethods<UInt64>.GetFirst() UnusedLinksListMethods<UInt64>.GetLast() UnusedLinksListMethods<UInt64>.GetPrevious(UInt64) UnusedLinksListMethods<UInt64>.GetNext(UInt64) UnusedLinksListMethods<UInt64>.GetSize() UnusedLinksListMethods<UInt64>.SetFirst(UInt64) UnusedLinksListMethods<UInt64>.SetLast(UInt64) UnusedLinksListMethods<UInt64>.SetPrevious(UInt64, UInt64) UnusedLinksListMethods<UInt64>.SetNext(UInt64, UInt64) UnusedLinksListMethods<UInt64>.SetSize(UInt64) Namespace : Platform.Data.Doublets.Memory.Split.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64UnusedLinksListMethods : UnusedLinksListMethods<ulong>, ILinksListMethods<ulong> Constructors | Improve this Doc View Source UInt64UnusedLinksListMethods(RawLinkDataPart<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64UnusedLinksListMethods instance. Declaration public UInt64UnusedLinksListMethods(RawLinkDataPart<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description RawLinkDataPart < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkDataPartReference(UInt64) Gets the link data part reference using the specified link. Declaration protected override RawLinkDataPart<ulong> GetLinkDataPartReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLinkDataPart < UInt64 > A ref raw link data part of t link Overrides Platform.Data.Doublets.Memory.Split.Generic.UnusedLinksListMethods<System.UInt64>.GetLinkDataPartReference(System.UInt64) Implements ILinksListMethods<TLinkAddress> See Also UnusedLinksListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.html",
    "title": "Namespace Platform.Data.Doublets.Memory.United.Generic | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.United.Generic Classes LinksAvlBalancedTreeMethodsBase<TLinkAddress> Represents the links avl balanced tree methods base. LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the links recursionless size balanced tree methods base. LinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the links size balanced tree methods base. LinksSourcesAvlBalancedTreeMethods<TLinkAddress> Represents the links sources avl balanced tree methods. LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the links sources recursionless size balanced tree methods. LinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the links sources size balanced tree methods. LinksTargetsAvlBalancedTreeMethods<TLinkAddress> Represents the links targets avl balanced tree methods. LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the links targets recursionless size balanced tree methods. LinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the links targets size balanced tree methods. UnitedMemoryLinks<TLinkAddress> Represents the united memory links. UnitedMemoryLinksBase<TLinkAddress> Represents the united memory this base. UnusedLinksListMethods<TLinkAddress> Represents the unused links list methods."
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase-1.html",
    "title": "Class LinksAvlBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksAvlBalancedTreeMethodsBase<TLinkAddress> Represents the links avl balanced tree methods base. Inheritance Object LinksAvlBalancedTreeMethodsBase<TLinkAddress> LinksSourcesAvlBalancedTreeMethods<TLinkAddress> LinksTargetsAvlBalancedTreeMethods<TLinkAddress> UInt64LinksAvlBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksAvlBalancedTreeMethodsBase<TLinkAddress> : SizedAndThreadedAVLBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksAvlBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration protected LinksAvlBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source Links The links. Declaration protected readonly byte *Links Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified link. Declaration public TLinkAddress EachUsage(TLinkAddress link, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress link The link. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The continue. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected abstract bool FirstIsToTheLeftOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected abstract bool FirstIsToTheRightOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source GetBalanceValue(TLinkAddress) Gets the balance value using the specified stored value. Declaration protected virtual sbyte GetBalanceValue(TLinkAddress storedValue) Parameters Type Name Description TLinkAddress storedValue The stored value. Returns Type Description SByte The sbyte | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLeftIsChildValue(TLinkAddress) Determines whether this instance get left is child value. Declaration protected virtual bool GetLeftIsChildValue(TLinkAddress value) Parameters Type Name Description TLinkAddress value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link. Declaration protected virtual RawLink<TLinkAddress> GetLinkReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetRightIsChildValue(TLinkAddress) Determines whether this instance get right is child value. Declaration protected virtual bool GetRightIsChildValue(TLinkAddress value) Parameters Type Name Description TLinkAddress value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GetSizeValue(TLinkAddress) Gets the size value using the specified value. Declaration protected virtual TLinkAddress GetSizeValue(TLinkAddress value) Parameters Type Name Description TLinkAddress value The value. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected abstract TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link | Improve this Doc View Source IsChild(TLinkAddress, TLinkAddress) Determines whether this instance is child. Declaration protected bool IsChild(TLinkAddress parent, TLinkAddress possibleChild) Parameters Type Name Description TLinkAddress parent The parent. TLinkAddress possibleChild The possible child. Returns Type Description Boolean The bool | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. | Improve this Doc View Source SetBalanceValue(ref TLinkAddress, SByte) Sets the balance value using the specified stored value. Declaration protected virtual void SetBalanceValue(ref TLinkAddress storedValue, sbyte value) Parameters Type Name Description TLinkAddress storedValue The stored value. SByte value The value. | Improve this Doc View Source SetLeftIsChildValue(ref TLinkAddress, Boolean) Sets the left is child value using the specified stored value. Declaration protected virtual void SetLeftIsChildValue(ref TLinkAddress storedValue, bool value) Parameters Type Name Description TLinkAddress storedValue The stored value. Boolean value The value. | Improve this Doc View Source SetRightIsChildValue(ref TLinkAddress, Boolean) Sets the right is child value using the specified stored value. Declaration protected virtual void SetRightIsChildValue(ref TLinkAddress storedValue, bool value) Parameters Type Name Description TLinkAddress storedValue The stored value. Boolean value The value. | Improve this Doc View Source SetSizeValue(ref TLinkAddress, TLinkAddress) Sets the size value using the specified stored value. Declaration protected virtual void SetSizeValue(ref TLinkAddress storedValue, TLinkAddress size) Parameters Type Name Description TLinkAddress storedValue The stored value. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase-1.html",
    "title": "Class LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> Represents the links recursionless size balanced tree methods base. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> UInt32LinksRecursionlessSizeBalancedTreeMethodsBase UInt64LinksRecursionlessSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress> : RecursionlessSizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration protected LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source Links The links. Declaration protected readonly byte *Links Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected abstract bool FirstIsToTheLeftOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected abstract bool FirstIsToTheRightOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link. Declaration protected virtual RawLink<TLinkAddress> GetLinkReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected abstract TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase-1.html",
    "title": "Class LinksSizeBalancedTreeMethodsBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksSizeBalancedTreeMethodsBase<TLinkAddress> Represents the links size balanced tree methods base. Inheritance Object LinksSizeBalancedTreeMethodsBase<TLinkAddress> LinksSourcesSizeBalancedTreeMethods<TLinkAddress> LinksTargetsSizeBalancedTreeMethods<TLinkAddress> UInt32LinksSizeBalancedTreeMethodsBase UInt64LinksSizeBalancedTreeMethodsBase Implements ILinksTreeMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class LinksSizeBalancedTreeMethodsBase<TLinkAddress> : SizeBalancedTreeMethods<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration protected LinksSizeBalancedTreeMethodsBase(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Fields | Improve this Doc View Source Break The break. Declaration protected readonly TLinkAddress Break Field Value Type Description TLinkAddress | Improve this Doc View Source Continue The continue. Declaration protected readonly TLinkAddress Continue Field Value Type Description TLinkAddress | Improve this Doc View Source Header The header. Declaration protected readonly byte *Header Field Value Type Description Byte * | Improve this Doc View Source Links The links. Declaration protected readonly byte *Links Field Value Type Description Byte * Properties | Improve this Doc View Source Item[TLinkAddress] The zero. Declaration public TLinkAddress this[TLinkAddress index] { get; } Parameters Type Name Description TLinkAddress index Property Value Type Description TLinkAddress Methods | Improve this Doc View Source CountUsages(TLinkAddress) Counts the usages using the specified link. Declaration public TLinkAddress CountUsages(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) Eaches the usage using the specified base. Declaration public TLinkAddress EachUsage(TLinkAddress base, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description TLinkAddress base Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected abstract bool FirstIsToTheLeftOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected abstract bool FirstIsToTheRightOfSecond(TLinkAddress source, TLinkAddress target, TLinkAddress rootSource, TLinkAddress rootTarget) Parameters Type Name Description TLinkAddress source The source. TLinkAddress target The target. TLinkAddress rootSource The root source. TLinkAddress rootTarget The root target. Returns Type Description Boolean The bool | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected abstract TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link. Declaration protected virtual RawLink<TLinkAddress> GetLinkReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link | Improve this Doc View Source GetLinkValues(TLinkAddress) Gets the link values using the specified link index. Declaration protected virtual IList<TLinkAddress> GetLinkValues(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected abstract TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link | Improve this Doc View Source PrintNodeValue(TLinkAddress, StringBuilder) Prints the node value using the specified node. Declaration protected override void PrintNodeValue(TLinkAddress node, StringBuilder sb) Parameters Type Name Description TLinkAddress node The node. StringBuilder sb The sb. | Improve this Doc View Source Search(TLinkAddress, TLinkAddress) Выполняет поиск и возвращает индекс связи с указанными Source (началом) и Target (концом). Declaration public TLinkAddress Search(TLinkAddress source, TLinkAddress target) Parameters Type Name Description TLinkAddress source Индекс связи, которая является началом на искомой связи. TLinkAddress target Индекс связи, которая является концом на искомой связи. Returns Type Description TLinkAddress Индекс искомой связи. Implements ILinksTreeMethods<TLinkAddress> See Also ILinksTreeMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesAvlBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesAvlBalancedTreeMethods-1.html",
    "title": "Class LinksSourcesAvlBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksSourcesAvlBalancedTreeMethods<TLinkAddress> Represents the links sources avl balanced tree methods. Inheritance Object LinksAvlBalancedTreeMethodsBase <TLinkAddress> LinksSourcesAvlBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Break LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Continue LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Links LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Header LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetSizeValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetSizeValue(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLeftIsChildValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetLeftIsChildValue(TLinkAddress, Boolean) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetRightIsChildValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetRightIsChildValue(TLinkAddress, Boolean) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.IsChild(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetBalanceValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetBalanceValue(TLinkAddress, SByte) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksSourcesAvlBalancedTreeMethods<TLinkAddress> : LinksAvlBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksSourcesAvlBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksSourcesAvlBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBalance(TLinkAddress) Gets the balance using the specified node. Declaration protected override sbyte GetBalance(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description SByte The sbyte | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftIsChild(TLinkAddress) Determines whether this instance get left is child. Declaration protected override bool GetLeftIsChild(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightIsChild(TLinkAddress) Determines whether this instance get right is child. Declaration protected override bool GetRightIsChild(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetBalance(TLinkAddress, SByte) Sets the balance using the specified node. Declaration protected override void SetBalance(TLinkAddress node, sbyte value) Parameters Type Name Description TLinkAddress node The node. SByte value The value. | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetLeftIsChild(TLinkAddress, Boolean) Sets the left is child using the specified node. Declaration protected override void SetLeftIsChild(TLinkAddress node, bool value) Parameters Type Name Description TLinkAddress node The node. Boolean value The value. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetRightIsChild(TLinkAddress, Boolean) Sets the right is child using the specified node. Declaration protected override void SetRightIsChild(TLinkAddress node, bool value) Parameters Type Name Description TLinkAddress node The node. Boolean value The value. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksAvlBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the links sources recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Links LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksSourcesRecursionlessSizeBalancedTreeMethods<TLinkAddress> : LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksSourcesSizeBalancedTreeMethods-1.html",
    "title": "Class LinksSourcesSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksSourcesSizeBalancedTreeMethods<TLinkAddress> Represents the links sources size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase <TLinkAddress> LinksSourcesSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Links LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksSourcesSizeBalancedTreeMethods<TLinkAddress> : LinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksSourcesSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsAvlBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsAvlBalancedTreeMethods-1.html",
    "title": "Class LinksTargetsAvlBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksTargetsAvlBalancedTreeMethods<TLinkAddress> Represents the links targets avl balanced tree methods. Inheritance Object LinksAvlBalancedTreeMethodsBase <TLinkAddress> LinksTargetsAvlBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Break LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Continue LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Links LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Header LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetSizeValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetSizeValue(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetLeftIsChildValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetLeftIsChildValue(TLinkAddress, Boolean) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetRightIsChildValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetRightIsChildValue(TLinkAddress, Boolean) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.IsChild(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetBalanceValue(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.SetBalanceValue(TLinkAddress, SByte) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksAvlBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksAvlBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksTargetsAvlBalancedTreeMethods<TLinkAddress> : LinksAvlBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksTargetsAvlBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksTargetsAvlBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBalance(TLinkAddress) Gets the balance using the specified node. Declaration protected override sbyte GetBalance(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description SByte The sbyte | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftIsChild(TLinkAddress) Determines whether this instance get left is child. Declaration protected override bool GetLeftIsChild(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightIsChild(TLinkAddress) Determines whether this instance get right is child. Declaration protected override bool GetRightIsChild(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetBalance(TLinkAddress, SByte) Sets the balance using the specified node. Declaration protected override void SetBalance(TLinkAddress node, sbyte value) Parameters Type Name Description TLinkAddress node The node. SByte value The value. | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetLeftIsChild(TLinkAddress, Boolean) Sets the left is child using the specified node. Declaration protected override void SetLeftIsChild(TLinkAddress node, bool value) Parameters Type Name Description TLinkAddress node The node. Boolean value The value. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetRightIsChild(TLinkAddress, Boolean) Sets the right is child using the specified node. Declaration protected override void SetRightIsChild(TLinkAddress node, bool value) Parameters Type Name Description TLinkAddress node The node. Boolean value The value. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksAvlBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsRecursionlessSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsRecursionlessSizeBalancedTreeMethods-1.html",
    "title": "Class LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Represents the links targets recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress> LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Links LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Header LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksTargetsRecursionlessSizeBalancedTreeMethods<TLinkAddress> : LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksRecursionlessSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsSizeBalancedTreeMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.LinksTargetsSizeBalancedTreeMethods-1.html",
    "title": "Class LinksTargetsSizeBalancedTreeMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class LinksTargetsSizeBalancedTreeMethods<TLinkAddress> Represents the links targets size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase <TLinkAddress> LinksTargetsSizeBalancedTreeMethods<TLinkAddress> Implements ILinksTreeMethods <TLinkAddress> Inherited Members LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Break LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Continue LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Links LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Header LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetHeaderReference() LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkReference(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetLinkValues(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Item[TLinkAddress] LinksSizeBalancedTreeMethodsBase<TLinkAddress>.Search(TLinkAddress, TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.CountUsages(TLinkAddress) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.EachUsage(TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) LinksSizeBalancedTreeMethodsBase<TLinkAddress>.PrintNodeValue(TLinkAddress, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class LinksTargetsSizeBalancedTreeMethods<TLinkAddress> : LinksSizeBalancedTreeMethodsBase<TLinkAddress>, ILinksTreeMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source LinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress>, Byte*, Byte*) Initializes a new instance. Declaration public LinksTargetsSizeBalancedTreeMethods(LinksConstants<TLinkAddress> constants, byte *links, byte *header) Parameters Type Name Description LinksConstants <TLinkAddress> constants A constants. Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source ClearNode(TLinkAddress) Clears the node using the specified node. Declaration protected override void ClearNode(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheLeftOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(TLinkAddress firstSource, TLinkAddress firstTarget, TLinkAddress secondSource, TLinkAddress secondTarget) Parameters Type Name Description TLinkAddress firstSource The first source. TLinkAddress firstTarget The first target. TLinkAddress secondSource The second source. TLinkAddress secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.FirstIsToTheRightOfSecond(TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) | Improve this Doc View Source GetBasePartValue(TLinkAddress) Gets the base part value using the specified link. Declaration protected override TLinkAddress GetBasePartValue(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetBasePartValue(TLinkAddress) | Improve this Doc View Source GetLeft(TLinkAddress) Gets the left using the specified node. Declaration protected override TLinkAddress GetLeft(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLeftReference(TLinkAddress) Gets the left reference using the specified node. Declaration protected override TLinkAddress GetLeftReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetRight(TLinkAddress) Gets the right using the specified node. Declaration protected override TLinkAddress GetRight(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetRightReference(TLinkAddress) Gets the right reference using the specified node. Declaration protected override TLinkAddress GetRightReference(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The ref link | Improve this Doc View Source GetSize(TLinkAddress) Gets the size using the specified node. Declaration protected override TLinkAddress GetSize(TLinkAddress node) Parameters Type Name Description TLinkAddress node The node. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override TLinkAddress GetTreeRoot() Returns Type Description TLinkAddress The link Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<TLinkAddress>.GetTreeRoot() | Improve this Doc View Source SetLeft(TLinkAddress, TLinkAddress) Sets the left using the specified node. Declaration protected override void SetLeft(TLinkAddress node, TLinkAddress left) Parameters Type Name Description TLinkAddress node The node. TLinkAddress left The left. | Improve this Doc View Source SetRight(TLinkAddress, TLinkAddress) Sets the right using the specified node. Declaration protected override void SetRight(TLinkAddress node, TLinkAddress right) Parameters Type Name Description TLinkAddress node The node. TLinkAddress right The right. | Improve this Doc View Source SetSize(TLinkAddress, TLinkAddress) Sets the size using the specified node. Declaration protected override void SetSize(TLinkAddress node, TLinkAddress size) Parameters Type Name Description TLinkAddress node The node. TLinkAddress size The size. Implements ILinksTreeMethods<TLinkAddress> See Also LinksSizeBalancedTreeMethodsBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinks-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinks-1.html",
    "title": "Class UnitedMemoryLinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UnitedMemoryLinks<TLinkAddress> Represents the united memory links. Inheritance Object UnitedMemoryLinksBase <TLinkAddress> UnitedMemoryLinks<TLinkAddress> Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members UnitedMemoryLinksBase<TLinkAddress>.LinkSizeInBytes UnitedMemoryLinksBase<TLinkAddress>.LinkHeaderSizeInBytes UnitedMemoryLinksBase<TLinkAddress>.DefaultLinksSizeStep UnitedMemoryLinksBase<TLinkAddress>._memory UnitedMemoryLinksBase<TLinkAddress>._memoryReservationStep UnitedMemoryLinksBase<TLinkAddress>.TargetsTreeMethods UnitedMemoryLinksBase<TLinkAddress>.SourcesTreeMethods UnitedMemoryLinksBase<TLinkAddress>.UnusedLinksListMethods UnitedMemoryLinksBase<TLinkAddress>.Total UnitedMemoryLinksBase<TLinkAddress>.Constants UnitedMemoryLinksBase<TLinkAddress>.Init(IResizableDirectMemory, Int64) UnitedMemoryLinksBase<TLinkAddress>.Count(IList<TLinkAddress>) UnitedMemoryLinksBase<TLinkAddress>.Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) UnitedMemoryLinksBase<TLinkAddress>.Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) UnitedMemoryLinksBase<TLinkAddress>.Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) UnitedMemoryLinksBase<TLinkAddress>.Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) UnitedMemoryLinksBase<TLinkAddress>.GetLinkStruct(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.Exists(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.IsUnusedLink(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.GetOne() UnitedMemoryLinksBase<TLinkAddress>.GetZero() UnitedMemoryLinksBase<TLinkAddress>.AreEqual(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.LessThan(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.LessOrEqualThan(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.GreaterThan(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.GreaterOrEqualThan(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.ConvertToInt64(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.ConvertToAddress(Int64) UnitedMemoryLinksBase<TLinkAddress>.Add(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.Subtract(TLinkAddress, TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.Increment(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.Decrement(TLinkAddress) UnitedMemoryLinksBase<TLinkAddress>.AllowMultipleDisposeCalls UnitedMemoryLinksBase<TLinkAddress>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class UnitedMemoryLinks<TLinkAddress> : UnitedMemoryLinksBase<TLinkAddress>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source UnitedMemoryLinks(IResizableDirectMemory) Initializes a new instance. Declaration public UnitedMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory A memory. | Improve this Doc View Source UnitedMemoryLinks(IResizableDirectMemory, Int64) Initializes a new instance. Declaration public UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UnitedMemoryLinks(IResizableDirectMemory, Int64, LinksConstants<TLinkAddress>, IndexTreeType) Initializes a new instance. Declaration public UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep, LinksConstants<TLinkAddress> constants, IndexTreeType indexTreeType) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. LinksConstants <TLinkAddress> constants A constants. IndexTreeType indexTreeType A index tree type. | Improve this Doc View Source UnitedMemoryLinks(String) Initializes a new instance. Declaration public UnitedMemoryLinks(string address) Parameters Type Name Description String address A address. | Improve this Doc View Source UnitedMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public UnitedMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description String address Полный пусть к файлу базы данных. Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<TLinkAddress>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link index. Declaration protected override RawLink<TLinkAddress> GetLinkReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<TLinkAddress>.GetLinkReference(TLinkAddress) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<TLinkAddress>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory) Sets the pointers using the specified memory. Declaration protected override void SetPointers(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory The memory. Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<TLinkAddress>.SetPointers(IResizableDirectMemory) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also UnitedMemoryLinksBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase-1.html",
    "title": "Class UnitedMemoryLinksBase<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UnitedMemoryLinksBase<TLinkAddress> Represents the united memory this base. Inheritance Object UnitedMemoryLinksBase<TLinkAddress> UnitedMemoryLinks<TLinkAddress> UInt32UnitedMemoryLinks UInt64UnitedMemoryLinks Implements ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public abstract class UnitedMemoryLinksBase<TLinkAddress> : DisposableBase, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source UnitedMemoryLinksBase(IResizableDirectMemory, Int64) Initializes a new instance. Declaration protected UnitedMemoryLinksBase(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UnitedMemoryLinksBase(IResizableDirectMemory, Int64, LinksConstants<TLinkAddress>) Initializes a new instance. Declaration protected UnitedMemoryLinksBase(IResizableDirectMemory memory, long memoryReservationStep, LinksConstants<TLinkAddress> constants) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. LinksConstants <TLinkAddress> constants A constants. Fields | Improve this Doc View Source _memory The memory. Declaration protected readonly IResizableDirectMemory _memory Field Value Type Description IResizableDirectMemory | Improve this Doc View Source _memoryReservationStep The memory reservation step. Declaration protected readonly long _memoryReservationStep Field Value Type Description Int64 | Improve this Doc View Source DefaultLinksSizeStep The link size in bytes. Declaration public static readonly long DefaultLinksSizeStep Field Value Type Description Int64 | Improve this Doc View Source LinkHeaderSizeInBytes The size in bytes. Declaration public static readonly long LinkHeaderSizeInBytes Field Value Type Description Int64 | Improve this Doc View Source LinkSizeInBytes Возвращает размер одной связи в байтах. Declaration public static readonly long LinkSizeInBytes Field Value Type Description Int64 Remarks Используется только во вне класса, не рекомедуется использовать внутри. Так как во вне не обязательно будет доступен unsafe С#. | Improve this Doc View Source SourcesTreeMethods The sources tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> SourcesTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source TargetsTreeMethods The targets tree methods. Declaration protected ILinksTreeMethods<TLinkAddress> TargetsTreeMethods Field Value Type Description ILinksTreeMethods <TLinkAddress> | Improve this Doc View Source UnusedLinksListMethods The unused this list methods. Declaration protected ILinksListMethods<TLinkAddress> UnusedLinksListMethods Field Value Type Description ILinksListMethods <TLinkAddress> Properties | Improve this Doc View Source AllowMultipleDisposeCalls Gets the allow multiple dispose calls value. Declaration protected override bool AllowMultipleDisposeCalls { get; } Property Value Type Description Boolean | Improve this Doc View Source Constants Gets the constants value. Declaration public virtual LinksConstants<TLinkAddress> Constants { get; } Property Value Type Description LinksConstants <TLinkAddress> | Improve this Doc View Source Total Возвращает общее число связей находящихся в хранилище. Declaration protected virtual TLinkAddress Total { get; } Property Value Type Description TLinkAddress Methods | Improve this Doc View Source Add(TLinkAddress, TLinkAddress) Adds the first. Declaration protected virtual TLinkAddress Add(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description TLinkAddress The link | Improve this Doc View Source AreEqual(TLinkAddress, TLinkAddress) Determines whether this instance are equal. Declaration protected virtual bool AreEqual(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected virtual TLinkAddress ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description TLinkAddress The link | Improve this Doc View Source ConvertToInt64(TLinkAddress) Converts the to int 64 using the specified value. Declaration protected virtual long ConvertToInt64(TLinkAddress value) Parameters Type Name Description TLinkAddress value The value. Returns Type Description Int64 The long | Improve this Doc View Source Count(IList<TLinkAddress>) Counts the substitution. Declaration public virtual TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Returns Type Description TLinkAddress The link Exceptions Type Condition NotSupportedException Другие размеры и способы ограничений не поддерживаются. | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public virtual TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Remarks TODO: Возможно нужно будет заполнение нулями, если внешнее API ими не заполняет пространство | Improve this Doc View Source Decrement(TLinkAddress) Decrements the link. Declaration protected virtual TLinkAddress Decrement(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the substitution. Declaration public virtual TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes the manual. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual The manual. Boolean wasDisposed The was disposed. | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public virtual TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link Exceptions Type Condition NotSupportedException Другие размеры и способы ограничений не поддерживаются. | Improve this Doc View Source Exists(TLinkAddress) Determines whether this instance exists. Declaration protected virtual bool Exists(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description Boolean The bool | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected abstract LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref this header of t link | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link index. Declaration protected abstract RawLink<TLinkAddress> GetLinkReference(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link | Improve this Doc View Source GetLinkStruct(TLinkAddress) Gets the link struct using the specified link index. Declaration public IList<TLinkAddress> GetLinkStruct(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description IList <TLinkAddress> A list of t link | Improve this Doc View Source GetOne() Gets the one. Declaration protected virtual TLinkAddress GetOne() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetZero() Gets the zero. Declaration protected virtual TLinkAddress GetZero() Returns Type Description TLinkAddress The link | Improve this Doc View Source GreaterOrEqualThan(TLinkAddress, TLinkAddress) Determines whether this instance greater or equal than. Declaration protected virtual bool GreaterOrEqualThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(TLinkAddress, TLinkAddress) Determines whether this instance greater than. Declaration protected virtual bool GreaterThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(TLinkAddress) Increments the link. Declaration protected virtual TLinkAddress Increment(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source Init(IResizableDirectMemory, Int64) Inits the memory. Declaration protected virtual void Init(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory The memory. Int64 memoryReservationStep The memory reservation step. | Improve this Doc View Source IsUnusedLink(TLinkAddress) Determines whether this instance is unused link. Declaration protected virtual bool IsUnusedLink(TLinkAddress linkIndex) Parameters Type Name Description TLinkAddress linkIndex The link index. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThan(TLinkAddress, TLinkAddress) Determines whether this instance less or equal than. Declaration protected virtual bool LessOrEqualThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(TLinkAddress, TLinkAddress) Determines whether this instance less than. Declaration protected virtual bool LessThan(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description Boolean The bool | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected virtual void ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory) Declaration protected abstract void SetPointers(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory Remarks TODO: Возможно это должно быть событием, вызываемым из IMemory, в том случае, если адрес реально поменялся Указатель this.this может быть в том же месте, так как 0-я связь не используется и имеет такой же размер как Header, поэтому header размещается в том же месте, что и 0-я связь | Improve this Doc View Source Subtract(TLinkAddress, TLinkAddress) Subtracts the first. Declaration protected virtual TLinkAddress Subtract(TLinkAddress first, TLinkAddress second) Parameters Type Name Description TLinkAddress first The first. TLinkAddress second The second. Returns Type Description TLinkAddress The link | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Declaration public virtual TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction IList <TLinkAddress> substitution Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress Remarks TODO: Возможно можно перемещать значения, если указан индекс, но значение существует в другом месте (но не в менеджере памяти, а в логике Links) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also ILinks <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods-1.html",
    "title": "Class UnusedLinksListMethods<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UnusedLinksListMethods<TLinkAddress> Represents the unused links list methods. Inheritance Object UnusedLinksListMethods<TLinkAddress> UInt32UnusedLinksListMethods UInt64UnusedLinksListMethods Implements ILinksListMethods <TLinkAddress> Namespace : Platform.Data.Doublets.Memory.United.Generic Assembly : Platform.Data.Doublets.dll Syntax public class UnusedLinksListMethods<TLinkAddress> : AbsoluteCircularDoublyLinkedListMethods<TLinkAddress>, ILinksListMethods<TLinkAddress> Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source UnusedLinksListMethods(Byte*, Byte*) Initializes a new instance. Declaration public UnusedLinksListMethods(byte *links, byte *header) Parameters Type Name Description Byte * links A links. Byte * header A header. Methods | Improve this Doc View Source GetFirst() Gets the first. Declaration protected override TLinkAddress GetFirst() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected virtual LinksHeader<TLinkAddress> GetHeaderReference() Returns Type Description LinksHeader <TLinkAddress> A ref links header of t link | Improve this Doc View Source GetLast() Gets the last. Declaration protected override TLinkAddress GetLast() Returns Type Description TLinkAddress The link | Improve this Doc View Source GetLinkReference(TLinkAddress) Gets the link reference using the specified link. Declaration protected virtual RawLink<TLinkAddress> GetLinkReference(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description RawLink <TLinkAddress> A ref raw link of t link | Improve this Doc View Source GetNext(TLinkAddress) Gets the next using the specified element. Declaration protected override TLinkAddress GetNext(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetPrevious(TLinkAddress) Gets the previous using the specified element. Declaration protected override TLinkAddress GetPrevious(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Returns Type Description TLinkAddress The link | Improve this Doc View Source GetSize() Gets the size. Declaration protected override TLinkAddress GetSize() Returns Type Description TLinkAddress The link | Improve this Doc View Source SetFirst(TLinkAddress) Sets the first using the specified element. Declaration protected override void SetFirst(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. | Improve this Doc View Source SetLast(TLinkAddress) Sets the last using the specified element. Declaration protected override void SetLast(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. | Improve this Doc View Source SetNext(TLinkAddress, TLinkAddress) Sets the next using the specified element. Declaration protected override void SetNext(TLinkAddress element, TLinkAddress next) Parameters Type Name Description TLinkAddress element The element. TLinkAddress next The next. | Improve this Doc View Source SetPrevious(TLinkAddress, TLinkAddress) Sets the previous using the specified element. Declaration protected override void SetPrevious(TLinkAddress element, TLinkAddress previous) Parameters Type Name Description TLinkAddress element The element. TLinkAddress previous The previous. | Improve this Doc View Source SetSize(TLinkAddress) Sets the size using the specified size. Declaration protected override void SetSize(TLinkAddress size) Parameters Type Name Description TLinkAddress size The size. Implements ILinksListMethods<TLinkAddress> See Also ILinksListMethods <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.html",
    "title": "Namespace Platform.Data.Doublets.Memory.United | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.United Structs RawLink<TLinkAddress> The raw link."
  },
  "api/Platform.Data.Doublets.Memory.United.RawLink-1.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.RawLink-1.html",
    "title": "Struct RawLink<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct RawLink<TLinkAddress> The raw link. Implements IEquatable < RawLink <TLinkAddress>> Inherited Members ValueType.ToString() Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets.Memory.United Assembly : Platform.Data.Doublets.dll Syntax public struct RawLink<TLinkAddress> : IEquatable<RawLink<TLinkAddress>> Type Parameters Name Description TLinkAddress Fields | Improve this Doc View Source LeftAsSource The left as source. Declaration public TLinkAddress LeftAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source LeftAsTarget The left as target. Declaration public TLinkAddress LeftAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source RightAsSource The right as source. Declaration public TLinkAddress RightAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source RightAsTarget The right as target. Declaration public TLinkAddress RightAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source SizeAsSource The size as source. Declaration public TLinkAddress SizeAsSource Field Value Type Description TLinkAddress | Improve this Doc View Source SizeAsTarget The size as target. Declaration public TLinkAddress SizeAsTarget Field Value Type Description TLinkAddress | Improve this Doc View Source SizeInBytes The size. Declaration public static readonly long SizeInBytes Field Value Type Description Int64 | Improve this Doc View Source Source The source. Declaration public TLinkAddress Source Field Value Type Description TLinkAddress | Improve this Doc View Source Target The target. Declaration public TLinkAddress Target Field Value Type Description TLinkAddress Methods | Improve this Doc View Source Equals(RawLink<TLinkAddress>) Determines whether this instance equals. Declaration public bool Equals(RawLink<TLinkAddress> other) Parameters Type Name Description RawLink <TLinkAddress> other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(RawLink<TLinkAddress>, RawLink<TLinkAddress>) Declaration public static bool operator ==(RawLink<TLinkAddress> left, RawLink<TLinkAddress> right) Parameters Type Name Description RawLink <TLinkAddress> left RawLink <TLinkAddress> right Returns Type Description Boolean | Improve this Doc View Source Inequality(RawLink<TLinkAddress>, RawLink<TLinkAddress>) Declaration public static bool operator !=(RawLink<TLinkAddress> left, RawLink<TLinkAddress> right) Parameters Type Name Description RawLink <TLinkAddress> left RawLink <TLinkAddress> right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.html",
    "title": "Namespace Platform.Data.Doublets.Memory.United.Specific | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Memory.United.Specific Classes UInt32LinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 links recursionless size balanced tree methods base. UInt32LinksSizeBalancedTreeMethodsBase Represents the int 32 links size balanced tree methods base. UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 links sources recursionless size balanced tree methods. UInt32LinksSourcesSizeBalancedTreeMethods Represents the int 32 links sources size balanced tree methods. UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 links targets recursionless size balanced tree methods. UInt32LinksTargetsSizeBalancedTreeMethods Represents the int 32 links targets size balanced tree methods. UInt32UnitedMemoryLinks Represents a low-level implementation of direct access to resizable memory, for organizing the storage of links with addresses represented as UInt32 . Представляет низкоуровневую реализация прямого доступа к памяти с переменным размером, для организации хранения связей с адресами представленными в виде UInt32 . UInt32UnusedLinksListMethods Represents the int 32 unused links list methods. UInt64LinksAvlBalancedTreeMethodsBase Represents the int 64 links avl balanced tree methods base. UInt64LinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 links recursionless size balanced tree methods base. UInt64LinksSizeBalancedTreeMethodsBase Represents the int 64 links size balanced tree methods base. UInt64LinksSourcesAvlBalancedTreeMethods Represents the int 64 links sources avl balanced tree methods. UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 links sources recursionless size balanced tree methods. UInt64LinksSourcesSizeBalancedTreeMethods Represents the int 64 links sources size balanced tree methods. UInt64LinksTargetsAvlBalancedTreeMethods Represents the int 64 links targets avl balanced tree methods. UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 links targets recursionless size balanced tree methods. UInt64LinksTargetsSizeBalancedTreeMethods Represents the int 64 links targets size balanced tree methods. UInt64UnitedMemoryLinks Represents a low-level implementation of direct access to resizable memory, for organizing the storage of links with addresses represented as UInt64 . Представляет низкоуровневую реализация прямого доступа к памяти с переменным размером, для организации хранения связей с адресами представленными в виде UInt64 . UInt64UnusedLinksListMethods Represents the int 64 unused links list methods."
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32LinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 32 links recursionless size balanced tree methods base. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksRecursionlessSizeBalancedTreeMethodsBase UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot() LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32LinksRecursionlessSizeBalancedTreeMethodsBase : LinksRecursionlessSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt32LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source Links The links. Declaration protected readonly RawLink<uint>*Links Field Value Type Description RawLink < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The uint | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt32) Gets the link reference using the specified link. Declaration protected override RawLink<uint> GetLinkReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLink < UInt32 > A ref raw link of uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The uint | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The uint | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint Implements ILinksTreeMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt32LinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksSizeBalancedTreeMethodsBase Represents the int 32 links size balanced tree methods base. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksSizeBalancedTreeMethodsBase UInt32LinksSourcesSizeBalancedTreeMethods UInt32LinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members LinksSizeBalancedTreeMethodsBase<UInt32>.Break LinksSizeBalancedTreeMethodsBase<UInt32>.Continue LinksSizeBalancedTreeMethodsBase<UInt32>.GetTreeRoot() LinksSizeBalancedTreeMethodsBase<UInt32>.GetBasePartValue(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt32LinksSizeBalancedTreeMethodsBase : LinksSizeBalancedTreeMethodsBase<uint>, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksSizeBalancedTreeMethodsBase(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt32LinksSizeBalancedTreeMethodsBase(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<uint>*Header Field Value Type Description LinksHeader < UInt32 >* | Improve this Doc View Source Links The links. Declaration protected readonly RawLink<uint>*Links Field Value Type Description RawLink < UInt32 >* Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt32) Decrements the value. Declaration protected override uint Decrement(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The uint | Improve this Doc View Source EqualToZero(UInt32) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt32) Gets the link reference using the specified link. Declaration protected override RawLink<uint> GetLinkReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLink < UInt32 > A ref raw link of uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetLinkReference(System.UInt32) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The uint | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt32) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt32) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt32) Increments the value. Declaration protected override uint Increment(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description UInt32 The uint | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt32) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt32) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint Implements ILinksTreeMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 32 links sources recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksRecursionlessSizeBalancedTreeMethodsBase UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Links UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkReference(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods : UInt32LinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified link. Declaration protected override uint GetBasePartValue(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32LinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt32LinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksSourcesSizeBalancedTreeMethods Represents the int 32 links sources size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksSizeBalancedTreeMethodsBase UInt32LinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32LinksSizeBalancedTreeMethodsBase.Links UInt32LinksSizeBalancedTreeMethodsBase.Header UInt32LinksSizeBalancedTreeMethodsBase.GetZero() UInt32LinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32LinksSizeBalancedTreeMethodsBase.GetLinkReference(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.Break LinksSizeBalancedTreeMethodsBase<UInt32>.Continue LinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32LinksSourcesSizeBalancedTreeMethods : UInt32LinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt32LinksSourcesSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified link. Declaration protected override uint GetBasePartValue(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32LinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 32 links targets recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksRecursionlessSizeBalancedTreeMethodsBase UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Links UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32LinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkReference(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods : UInt32LinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt32LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified link. Declaration protected override uint GetBasePartValue(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32LinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32LinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt32LinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32LinksTargetsSizeBalancedTreeMethods Represents the int 32 links targets size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt32 > UInt32LinksSizeBalancedTreeMethodsBase UInt32LinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt32 > Inherited Members UInt32LinksSizeBalancedTreeMethodsBase.Links UInt32LinksSizeBalancedTreeMethodsBase.Header UInt32LinksSizeBalancedTreeMethodsBase.GetZero() UInt32LinksSizeBalancedTreeMethodsBase.EqualToZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.AreEqual(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessThanZero(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.LessThan(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Increment(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Decrement(UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Add(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.Subtract(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt32, UInt32) UInt32LinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt32LinksSizeBalancedTreeMethodsBase.GetLinkReference(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.Break LinksSizeBalancedTreeMethodsBase<UInt32>.Continue LinksSizeBalancedTreeMethodsBase<UInt32>.GetLinkValues(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.Item[UInt32] LinksSizeBalancedTreeMethodsBase<UInt32>.Search(UInt32, UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.CountUsages(UInt32) LinksSizeBalancedTreeMethodsBase<UInt32>.EachUsage(UInt32, Nullable<ReadHandler<UInt32>>) LinksSizeBalancedTreeMethodsBase<UInt32>.PrintNodeValue(UInt32, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32LinksTargetsSizeBalancedTreeMethods : UInt32LinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<uint> Constructors | Improve this Doc View Source UInt32LinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt32>, RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32LinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt32LinksTargetsSizeBalancedTreeMethods(LinksConstants<uint> constants, RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description LinksConstants < UInt32 > constants A constants. RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt32) Clears the node using the specified node. Declaration protected override void ClearNode(uint node) Parameters Type Name Description UInt32 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheLeftOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt32, UInt32, UInt32, UInt32) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(uint firstSource, uint firstTarget, uint secondSource, uint secondTarget) Parameters Type Name Description UInt32 firstSource The first source. UInt32 firstTarget The first target. UInt32 secondSource The second source. UInt32 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.FirstIsToTheRightOfSecond(System.UInt32, System.UInt32, System.UInt32, System.UInt32) | Improve this Doc View Source GetBasePartValue(UInt32) Gets the base part value using the specified link. Declaration protected override uint GetBasePartValue(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetBasePartValue(System.UInt32) | Improve this Doc View Source GetLeft(UInt32) Gets the left using the specified node. Declaration protected override uint GetLeft(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetLeftReference(UInt32) Gets the left reference using the specified node. Declaration protected override uint GetLeftReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetRight(UInt32) Gets the right using the specified node. Declaration protected override uint GetRight(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetRightReference(UInt32) Gets the right reference using the specified node. Declaration protected override uint GetRightReference(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The ref uint | Improve this Doc View Source GetSize(UInt32) Gets the size using the specified node. Declaration protected override uint GetSize(uint node) Parameters Type Name Description UInt32 node The node. Returns Type Description UInt32 The uint | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override uint GetTreeRoot() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt32>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt32, UInt32) Sets the left using the specified node. Declaration protected override void SetLeft(uint node, uint left) Parameters Type Name Description UInt32 node The node. UInt32 left The left. | Improve this Doc View Source SetRight(UInt32, UInt32) Sets the right using the specified node. Declaration protected override void SetRight(uint node, uint right) Parameters Type Name Description UInt32 node The node. UInt32 right The right. | Improve this Doc View Source SetSize(UInt32, UInt32) Sets the size using the specified node. Declaration protected override void SetSize(uint node, uint size) Parameters Type Name Description UInt32 node The node. UInt32 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt32LinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32UnitedMemoryLinks.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32UnitedMemoryLinks.html",
    "title": "Class UInt32UnitedMemoryLinks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32UnitedMemoryLinks Represents a low-level implementation of direct access to resizable memory, for organizing the storage of links with addresses represented as UInt32 . Представляет низкоуровневую реализация прямого доступа к памяти с переменным размером, для организации хранения связей с адресами представленными в виде UInt32 . Inheritance Object UnitedMemoryLinksBase < UInt32 > UInt32UnitedMemoryLinks Implements ILinks < UInt32 > Platform.Data.Doublets.ILinks < UInt32 , LinksConstants < UInt32 >> Inherited Members UnitedMemoryLinksBase<UInt32>.LinkSizeInBytes UnitedMemoryLinksBase<UInt32>.LinkHeaderSizeInBytes UnitedMemoryLinksBase<UInt32>.DefaultLinksSizeStep UnitedMemoryLinksBase<UInt32>._memory UnitedMemoryLinksBase<UInt32>._memoryReservationStep UnitedMemoryLinksBase<UInt32>.TargetsTreeMethods UnitedMemoryLinksBase<UInt32>.SourcesTreeMethods UnitedMemoryLinksBase<UInt32>.UnusedLinksListMethods UnitedMemoryLinksBase<UInt32>.Total UnitedMemoryLinksBase<UInt32>.Constants UnitedMemoryLinksBase<UInt32>.Init(IResizableDirectMemory, Int64) UnitedMemoryLinksBase<UInt32>.Count(IList<UInt32>) UnitedMemoryLinksBase<UInt32>.Each(IList<UInt32>, Nullable<ReadHandler<UInt32>>) UnitedMemoryLinksBase<UInt32>.Update(IList<UInt32>, IList<UInt32>, Nullable<WriteHandler<UInt32>>) UnitedMemoryLinksBase<UInt32>.Create(IList<UInt32>, Nullable<WriteHandler<UInt32>>) UnitedMemoryLinksBase<UInt32>.Delete(IList<UInt32>, Nullable<WriteHandler<UInt32>>) UnitedMemoryLinksBase<UInt32>.GetLinkStruct(UInt32) UnitedMemoryLinksBase<UInt32>.Exists(UInt32) UnitedMemoryLinksBase<UInt32>.IsUnusedLink(UInt32) UnitedMemoryLinksBase<UInt32>.AllowMultipleDisposeCalls UnitedMemoryLinksBase<UInt32>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32UnitedMemoryLinks : UnitedMemoryLinksBase<uint>, ILinks<uint>, ILinks<uint, LinksConstants<uint>> Constructors | Improve this Doc View Source UInt32UnitedMemoryLinks(IResizableDirectMemory) Initializes a new UInt32UnitedMemoryLinks instance. Declaration public UInt32UnitedMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory A memory. | Improve this Doc View Source UInt32UnitedMemoryLinks(IResizableDirectMemory, Int64) Initializes a new UInt32UnitedMemoryLinks instance. Declaration public UInt32UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UInt32UnitedMemoryLinks(IResizableDirectMemory, Int64, LinksConstants<UInt32>, IndexTreeType) Initializes a new UInt32UnitedMemoryLinks instance. Declaration public UInt32UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep, LinksConstants<uint> constants, IndexTreeType indexTreeType) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt32 > constants A constants. IndexTreeType indexTreeType A index tree type. | Improve this Doc View Source UInt32UnitedMemoryLinks(String) Initializes a new UInt32UnitedMemoryLinks instance. Declaration public UInt32UnitedMemoryLinks(string address) Parameters Type Name Description String address A address. | Improve this Doc View Source UInt32UnitedMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public UInt32UnitedMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description String address Полный пусть к файлу базы данных. Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Methods | Improve this Doc View Source Add(UInt32, UInt32) Adds the first. Declaration protected override uint Add(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.Add(System.UInt32, System.UInt32) | Improve this Doc View Source AreEqual(UInt32, UInt32) Determines whether this instance are equal. Declaration protected override bool AreEqual(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.AreEqual(System.UInt32, System.UInt32) | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected override uint ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.ConvertToAddress(System.Int64) | Improve this Doc View Source ConvertToInt64(UInt32) Converts the to int 64 using the specified value. Declaration protected override long ConvertToInt64(uint value) Parameters Type Name Description UInt32 value The value. Returns Type Description Int64 The long Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.ConvertToInt64(System.UInt32) | Improve this Doc View Source Decrement(UInt32) Decrements the link. Declaration protected override uint Decrement(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.Decrement(System.UInt32) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt32) Gets the link reference using the specified link index. Declaration protected override RawLink<uint> GetLinkReference(uint linkIndex) Parameters Type Name Description UInt32 linkIndex The link index. Returns Type Description RawLink < UInt32 > A ref raw link of uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GetLinkReference(System.UInt32) | Improve this Doc View Source GetOne() Gets the one. Declaration protected override uint GetOne() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GetOne() | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override uint GetZero() Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GetZero() | Improve this Doc View Source GreaterOrEqualThan(UInt32, UInt32) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GreaterOrEqualThan(System.UInt32, System.UInt32) | Improve this Doc View Source GreaterThan(UInt32, UInt32) Determines whether this instance greater than. Declaration protected override bool GreaterThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.GreaterThan(System.UInt32, System.UInt32) | Improve this Doc View Source Increment(UInt32) Increments the link. Declaration protected override uint Increment(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.Increment(System.UInt32) | Improve this Doc View Source LessOrEqualThan(UInt32, UInt32) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.LessOrEqualThan(System.UInt32, System.UInt32) | Improve this Doc View Source LessThan(UInt32, UInt32) Determines whether this instance less than. Declaration protected override bool LessThan(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.LessThan(System.UInt32, System.UInt32) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory) Sets the pointers using the specified memory. Declaration protected override void SetPointers(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory The memory. Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.SetPointers(IResizableDirectMemory) | Improve this Doc View Source Subtract(UInt32, UInt32) Subtracts the first. Declaration protected override uint Subtract(uint first, uint second) Parameters Type Name Description UInt32 first The first. UInt32 second The second. Returns Type Description UInt32 The uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt32>.Subtract(System.UInt32, System.UInt32) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt32UnusedLinksListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt32UnusedLinksListMethods.html",
    "title": "Class UInt32UnusedLinksListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt32UnusedLinksListMethods Represents the int 32 unused links list methods. Inheritance Object UnusedLinksListMethods < UInt32 > UInt32UnusedLinksListMethods Implements ILinksListMethods < UInt32 > Inherited Members UnusedLinksListMethods<UInt32>.GetFirst() UnusedLinksListMethods<UInt32>.GetLast() UnusedLinksListMethods<UInt32>.GetPrevious(UInt32) UnusedLinksListMethods<UInt32>.GetNext(UInt32) UnusedLinksListMethods<UInt32>.GetSize() UnusedLinksListMethods<UInt32>.SetFirst(UInt32) UnusedLinksListMethods<UInt32>.SetLast(UInt32) UnusedLinksListMethods<UInt32>.SetPrevious(UInt32, UInt32) UnusedLinksListMethods<UInt32>.SetNext(UInt32, UInt32) UnusedLinksListMethods<UInt32>.SetSize(UInt32) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt32UnusedLinksListMethods : UnusedLinksListMethods<uint>, ILinksListMethods<uint> Constructors | Improve this Doc View Source UInt32UnusedLinksListMethods(RawLink<UInt32>*, LinksHeader<UInt32>*) Initializes a new UInt32UnusedLinksListMethods instance. Declaration public UInt32UnusedLinksListMethods(RawLink<uint>*links, LinksHeader<uint>*header) Parameters Type Name Description RawLink < UInt32 >* links A links. LinksHeader < UInt32 >* header A header. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<uint> GetHeaderReference() Returns Type Description LinksHeader < UInt32 > A ref links header of uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods<System.UInt32>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt32) Gets the link reference using the specified link. Declaration protected override RawLink<uint> GetLinkReference(uint link) Parameters Type Name Description UInt32 link The link. Returns Type Description RawLink < UInt32 > A ref raw link of uint Overrides Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods<System.UInt32>.GetLinkReference(System.UInt32) Implements ILinksListMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksAvlBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksAvlBalancedTreeMethodsBase.html",
    "title": "Class UInt64LinksAvlBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksAvlBalancedTreeMethodsBase Represents the int 64 links avl balanced tree methods base. Inheritance Object LinksAvlBalancedTreeMethodsBase < UInt64 > UInt64LinksAvlBalancedTreeMethodsBase UInt64LinksSourcesAvlBalancedTreeMethods UInt64LinksTargetsAvlBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members LinksAvlBalancedTreeMethodsBase<UInt64>.Break LinksAvlBalancedTreeMethodsBase<UInt64>.Continue LinksAvlBalancedTreeMethodsBase<UInt64>.GetTreeRoot() LinksAvlBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.IsChild(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksAvlBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksAvlBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64LinksAvlBalancedTreeMethodsBase : LinksAvlBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksAvlBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksAvlBalancedTreeMethodsBase instance. Declaration protected UInt64LinksAvlBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source Links The links. Declaration protected readonly RawLink<ulong>*Links Field Value Type Description RawLink < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetBalanceValue(UInt64) Gets the balance value using the specified value. Declaration protected override sbyte GetBalanceValue(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description SByte The sbyte Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetBalanceValue(System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLeftIsChildValue(UInt64) Determines whether this instance get left is child value. Declaration protected override bool GetLeftIsChildValue(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetLeftIsChildValue(System.UInt64) | Improve this Doc View Source GetLinkReference(UInt64) Gets the link reference using the specified link. Declaration protected override RawLink<ulong> GetLinkReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLink < UInt64 > A ref raw link of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetLinkReference(System.UInt64) | Improve this Doc View Source GetRightIsChildValue(UInt64) Determines whether this instance get right is child value. Declaration protected override bool GetRightIsChildValue(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetRightIsChildValue(System.UInt64) | Improve this Doc View Source GetSizeValue(UInt64) Gets the size value using the specified value. Declaration protected override ulong GetSizeValue(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetSizeValue(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source SetBalanceValue(ref UInt64, SByte) Sets the balance value using the specified stored value. Declaration protected override void SetBalanceValue(ref ulong storedValue, sbyte value) Parameters Type Name Description UInt64 storedValue The stored value. SByte value The value. Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.SetBalanceValue(System.UInt64, System.SByte) | Improve this Doc View Source SetLeftIsChildValue(ref UInt64, Boolean) Sets the left is child value using the specified stored value. Declaration protected override void SetLeftIsChildValue(ref ulong storedValue, bool value) Parameters Type Name Description UInt64 storedValue The stored value. Boolean value The value. Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.SetLeftIsChildValue(System.UInt64, System.Boolean) | Improve this Doc View Source SetRightIsChildValue(ref UInt64, Boolean) Sets the right is child value using the specified stored value. Declaration protected override void SetRightIsChildValue(ref ulong storedValue, bool value) Parameters Type Name Description UInt64 storedValue The stored value. Boolean value The value. Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.SetRightIsChildValue(System.UInt64, System.Boolean) | Improve this Doc View Source SetSizeValue(ref UInt64, UInt64) Sets the size value using the specified stored value. Declaration protected override void SetSizeValue(ref ulong storedValue, ulong size) Parameters Type Name Description UInt64 storedValue The stored value. UInt64 size The size. Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.SetSizeValue(System.UInt64, System.UInt64) | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64LinksRecursionlessSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksRecursionlessSizeBalancedTreeMethodsBase Represents the int 64 links recursionless size balanced tree methods base. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksRecursionlessSizeBalancedTreeMethodsBase UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot() LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64LinksRecursionlessSizeBalancedTreeMethodsBase : LinksRecursionlessSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksRecursionlessSizeBalancedTreeMethodsBase instance. Declaration protected UInt64LinksRecursionlessSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source Links The links. Declaration protected readonly RawLink<ulong>*Links Field Value Type Description RawLink < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt64) Gets the link reference using the specified link. Declaration protected override RawLink<ulong> GetLinkReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLink < UInt64 > A ref raw link of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSizeBalancedTreeMethodsBase.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSizeBalancedTreeMethodsBase.html",
    "title": "Class UInt64LinksSizeBalancedTreeMethodsBase | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksSizeBalancedTreeMethodsBase Represents the int 64 links size balanced tree methods base. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksSizeBalancedTreeMethodsBase UInt64LinksSourcesSizeBalancedTreeMethods UInt64LinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members LinksSizeBalancedTreeMethodsBase<UInt64>.Break LinksSizeBalancedTreeMethodsBase<UInt64>.Continue LinksSizeBalancedTreeMethodsBase<UInt64>.GetTreeRoot() LinksSizeBalancedTreeMethodsBase<UInt64>.GetBasePartValue(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public abstract class UInt64LinksSizeBalancedTreeMethodsBase : LinksSizeBalancedTreeMethodsBase<ulong>, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksSizeBalancedTreeMethodsBase(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksSizeBalancedTreeMethodsBase instance. Declaration protected UInt64LinksSizeBalancedTreeMethodsBase(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Fields | Improve this Doc View Source Header The header. Declaration protected readonly LinksHeader<ulong>*Header Field Value Type Description LinksHeader < UInt64 >* | Improve this Doc View Source Links The links. Declaration protected readonly RawLink<ulong>*Links Field Value Type Description RawLink < UInt64 >* Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source Decrement(UInt64) Decrements the value. Declaration protected override ulong Decrement(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source EqualToZero(UInt64) Determines whether this instance equal to zero. Declaration protected override bool EqualToZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt64) Gets the link reference using the specified link. Declaration protected override RawLink<ulong> GetLinkReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLink < UInt64 > A ref raw link of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetLinkReference(System.UInt64) | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterOrEqualThanZero(UInt64) Determines whether this instance greater or equal than zero. Declaration protected override bool GreaterOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source GreaterThanZero(UInt64) Determines whether this instance greater than zero. Declaration protected override bool GreaterThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Increment(UInt64) Increments the value. Declaration protected override ulong Increment(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description UInt64 The ulong | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessOrEqualThanZero(UInt64) Determines whether this instance less or equal than zero. Declaration protected override bool LessOrEqualThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool | Improve this Doc View Source LessThanZero(UInt64) Determines whether this instance less than zero. Declaration protected override bool LessThanZero(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Boolean The bool | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Implements ILinksTreeMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesAvlBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesAvlBalancedTreeMethods.html",
    "title": "Class UInt64LinksSourcesAvlBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksSourcesAvlBalancedTreeMethods Represents the int 64 links sources avl balanced tree methods. Inheritance Object LinksAvlBalancedTreeMethodsBase < UInt64 > UInt64LinksAvlBalancedTreeMethodsBase UInt64LinksSourcesAvlBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksAvlBalancedTreeMethodsBase.Links UInt64LinksAvlBalancedTreeMethodsBase.Header UInt64LinksAvlBalancedTreeMethodsBase.GetZero() UInt64LinksAvlBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GetSizeValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetSizeValue(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GetLeftIsChildValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetLeftIsChildValue(UInt64, Boolean) UInt64LinksAvlBalancedTreeMethodsBase.GetRightIsChildValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetRightIsChildValue(UInt64, Boolean) UInt64LinksAvlBalancedTreeMethodsBase.GetBalanceValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetBalanceValue(UInt64, SByte) UInt64LinksAvlBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksAvlBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.Break LinksAvlBalancedTreeMethodsBase<UInt64>.Continue LinksAvlBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.IsChild(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksAvlBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksAvlBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksSourcesAvlBalancedTreeMethods : UInt64LinksAvlBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksSourcesAvlBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksSourcesAvlBalancedTreeMethods instance. Declaration public UInt64LinksSourcesAvlBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBalance(UInt64) Gets the balance using the specified node. Declaration protected override sbyte GetBalance(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description SByte The sbyte | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftIsChild(UInt64) Determines whether this instance get left is child. Declaration protected override bool GetLeftIsChild(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightIsChild(UInt64) Determines whether this instance get right is child. Declaration protected override bool GetRightIsChild(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetBalance(UInt64, SByte) Sets the balance using the specified node. Declaration protected override void SetBalance(ulong node, sbyte value) Parameters Type Name Description UInt64 node The node. SByte value The value. | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetLeftIsChild(UInt64, Boolean) Sets the left is child using the specified node. Declaration protected override void SetLeftIsChild(ulong node, bool value) Parameters Type Name Description UInt64 node The node. Boolean value The value. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetRightIsChild(UInt64, Boolean) Sets the right is child using the specified node. Declaration protected override void SetRightIsChild(ulong node, bool value) Parameters Type Name Description UInt64 node The node. Boolean value The value. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksAvlBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods Represents the int 64 links sources recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksRecursionlessSizeBalancedTreeMethodsBase UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Links UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods : UInt64LinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64LinksSourcesRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksSourcesSizeBalancedTreeMethods.html",
    "title": "Class UInt64LinksSourcesSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksSourcesSizeBalancedTreeMethods Represents the int 64 links sources size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksSizeBalancedTreeMethodsBase UInt64LinksSourcesSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksSizeBalancedTreeMethodsBase.Links UInt64LinksSizeBalancedTreeMethodsBase.Header UInt64LinksSizeBalancedTreeMethodsBase.GetZero() UInt64LinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksSizeBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.Break LinksSizeBalancedTreeMethodsBase<UInt64>.Continue LinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksSourcesSizeBalancedTreeMethods : UInt64LinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksSourcesSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksSourcesSizeBalancedTreeMethods instance. Declaration public UInt64LinksSourcesSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsAvlBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsAvlBalancedTreeMethods.html",
    "title": "Class UInt64LinksTargetsAvlBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksTargetsAvlBalancedTreeMethods Represents the int 64 links targets avl balanced tree methods. Inheritance Object LinksAvlBalancedTreeMethodsBase < UInt64 > UInt64LinksAvlBalancedTreeMethodsBase UInt64LinksTargetsAvlBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksAvlBalancedTreeMethodsBase.Links UInt64LinksAvlBalancedTreeMethodsBase.Header UInt64LinksAvlBalancedTreeMethodsBase.GetZero() UInt64LinksAvlBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GetSizeValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetSizeValue(UInt64, UInt64) UInt64LinksAvlBalancedTreeMethodsBase.GetLeftIsChildValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetLeftIsChildValue(UInt64, Boolean) UInt64LinksAvlBalancedTreeMethodsBase.GetRightIsChildValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetRightIsChildValue(UInt64, Boolean) UInt64LinksAvlBalancedTreeMethodsBase.GetBalanceValue(UInt64) UInt64LinksAvlBalancedTreeMethodsBase.SetBalanceValue(UInt64, SByte) UInt64LinksAvlBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksAvlBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.Break LinksAvlBalancedTreeMethodsBase<UInt64>.Continue LinksAvlBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.IsChild(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksAvlBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksAvlBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksAvlBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksTargetsAvlBalancedTreeMethods : UInt64LinksAvlBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksTargetsAvlBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksTargetsAvlBalancedTreeMethods instance. Declaration public UInt64LinksTargetsAvlBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBalance(UInt64) Gets the balance using the specified node. Declaration protected override sbyte GetBalance(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description SByte The sbyte | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftIsChild(UInt64) Determines whether this instance get left is child. Declaration protected override bool GetLeftIsChild(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightIsChild(UInt64) Determines whether this instance get right is child. Declaration protected override bool GetRightIsChild(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description Boolean The bool | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksAvlBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetBalance(UInt64, SByte) Sets the balance using the specified node. Declaration protected override void SetBalance(ulong node, sbyte value) Parameters Type Name Description UInt64 node The node. SByte value The value. | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetLeftIsChild(UInt64, Boolean) Sets the left is child using the specified node. Declaration protected override void SetLeftIsChild(ulong node, bool value) Parameters Type Name Description UInt64 node The node. Boolean value The value. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetRightIsChild(UInt64, Boolean) Sets the right is child using the specified node. Declaration protected override void SetRightIsChild(ulong node, bool value) Parameters Type Name Description UInt64 node The node. Boolean value The value. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksAvlBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods.html",
    "title": "Class UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods Represents the int 64 links targets recursionless size balanced tree methods. Inheritance Object LinksRecursionlessSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksRecursionlessSizeBalancedTreeMethodsBase UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Links UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Header UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetZero() UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksRecursionlessSizeBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Break LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Continue LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksRecursionlessSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods : UInt64LinksRecursionlessSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods instance. Declaration public UInt64LinksTargetsRecursionlessSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksRecursionlessSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksRecursionlessSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsSizeBalancedTreeMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64LinksTargetsSizeBalancedTreeMethods.html",
    "title": "Class UInt64LinksTargetsSizeBalancedTreeMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksTargetsSizeBalancedTreeMethods Represents the int 64 links targets size balanced tree methods. Inheritance Object LinksSizeBalancedTreeMethodsBase < UInt64 > UInt64LinksSizeBalancedTreeMethodsBase UInt64LinksTargetsSizeBalancedTreeMethods Implements ILinksTreeMethods < UInt64 > Inherited Members UInt64LinksSizeBalancedTreeMethodsBase.Links UInt64LinksSizeBalancedTreeMethodsBase.Header UInt64LinksSizeBalancedTreeMethodsBase.GetZero() UInt64LinksSizeBalancedTreeMethodsBase.EqualToZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.AreEqual(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GreaterOrEqualThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessOrEqualThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessOrEqualThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessThanZero(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.LessThan(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Increment(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Decrement(UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Add(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.Subtract(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.FirstIsToTheLeftOfSecond(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.FirstIsToTheRightOfSecond(UInt64, UInt64) UInt64LinksSizeBalancedTreeMethodsBase.GetHeaderReference() UInt64LinksSizeBalancedTreeMethodsBase.GetLinkReference(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.Break LinksSizeBalancedTreeMethodsBase<UInt64>.Continue LinksSizeBalancedTreeMethodsBase<UInt64>.GetLinkValues(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.Item[UInt64] LinksSizeBalancedTreeMethodsBase<UInt64>.Search(UInt64, UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.CountUsages(UInt64) LinksSizeBalancedTreeMethodsBase<UInt64>.EachUsage(UInt64, Nullable<ReadHandler<UInt64>>) LinksSizeBalancedTreeMethodsBase<UInt64>.PrintNodeValue(UInt64, StringBuilder) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksTargetsSizeBalancedTreeMethods : UInt64LinksSizeBalancedTreeMethodsBase, ILinksTreeMethods<ulong> Constructors | Improve this Doc View Source UInt64LinksTargetsSizeBalancedTreeMethods(LinksConstants<UInt64>, RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64LinksTargetsSizeBalancedTreeMethods instance. Declaration public UInt64LinksTargetsSizeBalancedTreeMethods(LinksConstants<ulong> constants, RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description LinksConstants < UInt64 > constants A constants. RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source ClearNode(UInt64) Clears the node using the specified node. Declaration protected override void ClearNode(ulong node) Parameters Type Name Description UInt64 node The node. | Improve this Doc View Source FirstIsToTheLeftOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the left of second. Declaration protected override bool FirstIsToTheLeftOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheLeftOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source FirstIsToTheRightOfSecond(UInt64, UInt64, UInt64, UInt64) Determines whether this instance first is to the right of second. Declaration protected override bool FirstIsToTheRightOfSecond(ulong firstSource, ulong firstTarget, ulong secondSource, ulong secondTarget) Parameters Type Name Description UInt64 firstSource The first source. UInt64 firstTarget The first target. UInt64 secondSource The second source. UInt64 secondTarget The second target. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.FirstIsToTheRightOfSecond(System.UInt64, System.UInt64, System.UInt64, System.UInt64) | Improve this Doc View Source GetBasePartValue(UInt64) Gets the base part value using the specified link. Declaration protected override ulong GetBasePartValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetBasePartValue(System.UInt64) | Improve this Doc View Source GetLeft(UInt64) Gets the left using the specified node. Declaration protected override ulong GetLeft(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetLeftReference(UInt64) Gets the left reference using the specified node. Declaration protected override ulong GetLeftReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetRight(UInt64) Gets the right using the specified node. Declaration protected override ulong GetRight(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetRightReference(UInt64) Gets the right reference using the specified node. Declaration protected override ulong GetRightReference(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ref ulong | Improve this Doc View Source GetSize(UInt64) Gets the size using the specified node. Declaration protected override ulong GetSize(ulong node) Parameters Type Name Description UInt64 node The node. Returns Type Description UInt64 The ulong | Improve this Doc View Source GetTreeRoot() Gets the tree root. Declaration protected override ulong GetTreeRoot() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.LinksSizeBalancedTreeMethodsBase<System.UInt64>.GetTreeRoot() | Improve this Doc View Source SetLeft(UInt64, UInt64) Sets the left using the specified node. Declaration protected override void SetLeft(ulong node, ulong left) Parameters Type Name Description UInt64 node The node. UInt64 left The left. | Improve this Doc View Source SetRight(UInt64, UInt64) Sets the right using the specified node. Declaration protected override void SetRight(ulong node, ulong right) Parameters Type Name Description UInt64 node The node. UInt64 right The right. | Improve this Doc View Source SetSize(UInt64, UInt64) Sets the size using the specified node. Declaration protected override void SetSize(ulong node, ulong size) Parameters Type Name Description UInt64 node The node. UInt64 size The size. Implements ILinksTreeMethods<TLinkAddress> See Also UInt64LinksSizeBalancedTreeMethodsBase"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64UnitedMemoryLinks.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64UnitedMemoryLinks.html",
    "title": "Class UInt64UnitedMemoryLinks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64UnitedMemoryLinks Represents a low-level implementation of direct access to resizable memory, for organizing the storage of links with addresses represented as UInt64 . Представляет низкоуровневую реализация прямого доступа к памяти с переменным размером, для организации хранения связей с адресами представленными в виде UInt64 . Inheritance Object UnitedMemoryLinksBase < UInt64 > UInt64UnitedMemoryLinks Implements ILinks < UInt64 > Platform.Data.Doublets.ILinks < UInt64 , LinksConstants < UInt64 >> Inherited Members UnitedMemoryLinksBase<UInt64>.LinkSizeInBytes UnitedMemoryLinksBase<UInt64>.LinkHeaderSizeInBytes UnitedMemoryLinksBase<UInt64>.DefaultLinksSizeStep UnitedMemoryLinksBase<UInt64>._memory UnitedMemoryLinksBase<UInt64>._memoryReservationStep UnitedMemoryLinksBase<UInt64>.TargetsTreeMethods UnitedMemoryLinksBase<UInt64>.SourcesTreeMethods UnitedMemoryLinksBase<UInt64>.UnusedLinksListMethods UnitedMemoryLinksBase<UInt64>.Total UnitedMemoryLinksBase<UInt64>.Constants UnitedMemoryLinksBase<UInt64>.Init(IResizableDirectMemory, Int64) UnitedMemoryLinksBase<UInt64>.Count(IList<UInt64>) UnitedMemoryLinksBase<UInt64>.Each(IList<UInt64>, Nullable<ReadHandler<UInt64>>) UnitedMemoryLinksBase<UInt64>.Update(IList<UInt64>, IList<UInt64>, Nullable<WriteHandler<UInt64>>) UnitedMemoryLinksBase<UInt64>.Create(IList<UInt64>, Nullable<WriteHandler<UInt64>>) UnitedMemoryLinksBase<UInt64>.Delete(IList<UInt64>, Nullable<WriteHandler<UInt64>>) UnitedMemoryLinksBase<UInt64>.GetLinkStruct(UInt64) UnitedMemoryLinksBase<UInt64>.Exists(UInt64) UnitedMemoryLinksBase<UInt64>.IsUnusedLink(UInt64) UnitedMemoryLinksBase<UInt64>.AllowMultipleDisposeCalls UnitedMemoryLinksBase<UInt64>.Dispose(Boolean, Boolean) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64UnitedMemoryLinks : UnitedMemoryLinksBase<ulong>, ILinks<ulong>, ILinks<ulong, LinksConstants<ulong>> Constructors | Improve this Doc View Source UInt64UnitedMemoryLinks(IResizableDirectMemory) Initializes a new UInt64UnitedMemoryLinks instance. Declaration public UInt64UnitedMemoryLinks(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory A memory. | Improve this Doc View Source UInt64UnitedMemoryLinks(IResizableDirectMemory, Int64) Initializes a new UInt64UnitedMemoryLinks instance. Declaration public UInt64UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. | Improve this Doc View Source UInt64UnitedMemoryLinks(IResizableDirectMemory, Int64, LinksConstants<UInt64>, IndexTreeType) Initializes a new UInt64UnitedMemoryLinks instance. Declaration public UInt64UnitedMemoryLinks(IResizableDirectMemory memory, long memoryReservationStep, LinksConstants<ulong> constants, IndexTreeType indexTreeType) Parameters Type Name Description IResizableDirectMemory memory A memory. Int64 memoryReservationStep A memory reservation step. LinksConstants < UInt64 > constants A constants. IndexTreeType indexTreeType A index tree type. | Improve this Doc View Source UInt64UnitedMemoryLinks(String) Initializes a new UInt64UnitedMemoryLinks instance. Declaration public UInt64UnitedMemoryLinks(string address) Parameters Type Name Description String address A address. | Improve this Doc View Source UInt64UnitedMemoryLinks(String, Int64) Создаёт экземпляр базы данных Links в файле по указанному адресу, с указанным минимальным шагом расширения базы данных. Declaration public UInt64UnitedMemoryLinks(string address, long memoryReservationStep) Parameters Type Name Description String address Полный пусть к файлу базы данных. Int64 memoryReservationStep Минимальный шаг расширения базы данных в байтах. Methods | Improve this Doc View Source Add(UInt64, UInt64) Adds the first. Declaration protected override ulong Add(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.Add(System.UInt64, System.UInt64) | Improve this Doc View Source AreEqual(UInt64, UInt64) Determines whether this instance are equal. Declaration protected override bool AreEqual(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.AreEqual(System.UInt64, System.UInt64) | Improve this Doc View Source ConvertToAddress(Int64) Converts the to address using the specified value. Declaration protected override ulong ConvertToAddress(long value) Parameters Type Name Description Int64 value The value. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.ConvertToAddress(System.Int64) | Improve this Doc View Source ConvertToInt64(UInt64) Converts the to int 64 using the specified value. Declaration protected override long ConvertToInt64(ulong value) Parameters Type Name Description UInt64 value The value. Returns Type Description Int64 The long Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.ConvertToInt64(System.UInt64) | Improve this Doc View Source Decrement(UInt64) Decrements the link. Declaration protected override ulong Decrement(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.Decrement(System.UInt64) | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt64) Gets the link reference using the specified link index. Declaration protected override RawLink<ulong> GetLinkReference(ulong linkIndex) Parameters Type Name Description UInt64 linkIndex The link index. Returns Type Description RawLink < UInt64 > A ref raw link of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GetLinkReference(System.UInt64) | Improve this Doc View Source GetOne() Gets the one. Declaration protected override ulong GetOne() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GetOne() | Improve this Doc View Source GetZero() Gets the zero. Declaration protected override ulong GetZero() Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GetZero() | Improve this Doc View Source GreaterOrEqualThan(UInt64, UInt64) Determines whether this instance greater or equal than. Declaration protected override bool GreaterOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GreaterOrEqualThan(System.UInt64, System.UInt64) | Improve this Doc View Source GreaterThan(UInt64, UInt64) Determines whether this instance greater than. Declaration protected override bool GreaterThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.GreaterThan(System.UInt64, System.UInt64) | Improve this Doc View Source Increment(UInt64) Increments the link. Declaration protected override ulong Increment(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.Increment(System.UInt64) | Improve this Doc View Source LessOrEqualThan(UInt64, UInt64) Determines whether this instance less or equal than. Declaration protected override bool LessOrEqualThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.LessOrEqualThan(System.UInt64, System.UInt64) | Improve this Doc View Source LessThan(UInt64, UInt64) Determines whether this instance less than. Declaration protected override bool LessThan(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description Boolean The bool Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.LessThan(System.UInt64, System.UInt64) | Improve this Doc View Source ResetPointers() Resets the pointers. Declaration protected override void ResetPointers() Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.ResetPointers() | Improve this Doc View Source SetPointers(IResizableDirectMemory) Sets the pointers using the specified memory. Declaration protected override void SetPointers(IResizableDirectMemory memory) Parameters Type Name Description IResizableDirectMemory memory The memory. Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.SetPointers(IResizableDirectMemory) | Improve this Doc View Source Subtract(UInt64, UInt64) Subtracts the first. Declaration protected override ulong Subtract(ulong first, ulong second) Parameters Type Name Description UInt64 first The first. UInt64 second The second. Returns Type Description UInt64 The ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnitedMemoryLinksBase<System.UInt64>.Subtract(System.UInt64, System.UInt64) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) UInt64LinksExtensions.AnyLinkIsAny(ILinks<UInt64>, UInt64[]) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Boolean, Boolean) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) UInt64LinksExtensions.AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.Memory.United.Specific.UInt64UnusedLinksListMethods.html": {
    "href": "api/Platform.Data.Doublets.Memory.United.Specific.UInt64UnusedLinksListMethods.html",
    "title": "Class UInt64UnusedLinksListMethods | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64UnusedLinksListMethods Represents the int 64 unused links list methods. Inheritance Object UnusedLinksListMethods < UInt64 > UInt64UnusedLinksListMethods Implements ILinksListMethods < UInt64 > Inherited Members UnusedLinksListMethods<UInt64>.GetFirst() UnusedLinksListMethods<UInt64>.GetLast() UnusedLinksListMethods<UInt64>.GetPrevious(UInt64) UnusedLinksListMethods<UInt64>.GetNext(UInt64) UnusedLinksListMethods<UInt64>.GetSize() UnusedLinksListMethods<UInt64>.SetFirst(UInt64) UnusedLinksListMethods<UInt64>.SetLast(UInt64) UnusedLinksListMethods<UInt64>.SetPrevious(UInt64, UInt64) UnusedLinksListMethods<UInt64>.SetNext(UInt64, UInt64) UnusedLinksListMethods<UInt64>.SetSize(UInt64) Namespace : Platform.Data.Doublets.Memory.United.Specific Assembly : Platform.Data.Doublets.dll Syntax public class UInt64UnusedLinksListMethods : UnusedLinksListMethods<ulong>, ILinksListMethods<ulong> Constructors | Improve this Doc View Source UInt64UnusedLinksListMethods(RawLink<UInt64>*, LinksHeader<UInt64>*) Initializes a new UInt64UnusedLinksListMethods instance. Declaration public UInt64UnusedLinksListMethods(RawLink<ulong>*links, LinksHeader<ulong>*header) Parameters Type Name Description RawLink < UInt64 >* links A links. LinksHeader < UInt64 >* header A header. Methods | Improve this Doc View Source GetHeaderReference() Gets the header reference. Declaration protected override LinksHeader<ulong> GetHeaderReference() Returns Type Description LinksHeader < UInt64 > A ref links header of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods<System.UInt64>.GetHeaderReference() | Improve this Doc View Source GetLinkReference(UInt64) Gets the link reference using the specified link. Declaration protected override RawLink<ulong> GetLinkReference(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description RawLink < UInt64 > A ref raw link of ulong Overrides Platform.Data.Doublets.Memory.United.Generic.UnusedLinksListMethods<System.UInt64>.GetLinkReference(System.UInt64) Implements ILinksListMethods<TLinkAddress>"
  },
  "api/Platform.Data.Doublets.PropertyOperators.html": {
    "href": "api/Platform.Data.Doublets.PropertyOperators.html",
    "title": "Namespace Platform.Data.Doublets.PropertyOperators | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.PropertyOperators Classes PropertiesOperator<TLinkAddress> Represents the properties operator. PropertyOperator<TLinkAddress> Represents the property operator."
  },
  "api/Platform.Data.Doublets.PropertyOperators.PropertiesOperator-1.html": {
    "href": "api/Platform.Data.Doublets.PropertyOperators.PropertiesOperator-1.html",
    "title": "Class PropertiesOperator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class PropertiesOperator<TLinkAddress> Represents the properties operator. Inheritance Object LinksOperatorBase <TLinkAddress> PropertiesOperator<TLinkAddress> Implements IProperties <TLinkAddress, TLinkAddress, TLinkAddress> Inherited Members LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.PropertyOperators Assembly : Platform.Data.Doublets.dll Syntax public class PropertiesOperator<TLinkAddress> : LinksOperatorBase<TLinkAddress>, IProperties<TLinkAddress, TLinkAddress, TLinkAddress> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source PropertiesOperator(ILinks<TLinkAddress>) Initializes a new instance. Declaration public PropertiesOperator(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Methods | Improve this Doc View Source GetValue(TLinkAddress, TLinkAddress) Gets the value using the specified object. Declaration public TLinkAddress GetValue(TLinkAddress object, TLinkAddress property) Parameters Type Name Description TLinkAddress object TLinkAddress property The property. Returns Type Description TLinkAddress The link | Improve this Doc View Source SetValue(TLinkAddress, TLinkAddress, TLinkAddress) Sets the value using the specified object. Declaration public void SetValue(TLinkAddress object, TLinkAddress property, TLinkAddress value) Parameters Type Name Description TLinkAddress object TLinkAddress property The property. TLinkAddress value The value. Implements IProperties<, , > See Also LinksOperatorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.PropertyOperators.PropertyOperator-1.html": {
    "href": "api/Platform.Data.Doublets.PropertyOperators.PropertyOperator-1.html",
    "title": "Class PropertyOperator<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class PropertyOperator<TLinkAddress> Represents the property operator. Inheritance Object LinksOperatorBase <TLinkAddress> PropertyOperator<TLinkAddress> Implements IProperty <TLinkAddress, TLinkAddress> Inherited Members LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.PropertyOperators Assembly : Platform.Data.Doublets.dll Syntax public class PropertyOperator<TLinkAddress> : LinksOperatorBase<TLinkAddress>, IProperty<TLinkAddress, TLinkAddress> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source PropertyOperator(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) Initializes a new instance. Declaration public PropertyOperator(ILinks<TLinkAddress> links, TLinkAddress propertyMarker, TLinkAddress propertyValueMarker) Parameters Type Name Description ILinks <TLinkAddress> links A links. TLinkAddress propertyMarker A property marker. TLinkAddress propertyValueMarker A property value marker. Methods | Improve this Doc View Source Get(TLinkAddress) Gets the link. Declaration public TLinkAddress Get(TLinkAddress link) Parameters Type Name Description TLinkAddress link The link. Returns Type Description TLinkAddress The link | Improve this Doc View Source Set(TLinkAddress, TLinkAddress) Sets the link. Declaration public void Set(TLinkAddress link, TLinkAddress value) Parameters Type Name Description TLinkAddress link The link. TLinkAddress value The value. Implements IProperty<, > See Also LinksOperatorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Stacks.html": {
    "href": "api/Platform.Data.Doublets.Stacks.html",
    "title": "Namespace Platform.Data.Doublets.Stacks | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Namespace Platform.Data.Doublets.Stacks Classes Stack<TLinkAddress> Represents the stack. StackExtensions Represents the stack extensions."
  },
  "api/Platform.Data.Doublets.Stacks.Stack-1.html": {
    "href": "api/Platform.Data.Doublets.Stacks.Stack-1.html",
    "title": "Class Stack<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class Stack<TLinkAddress> Represents the stack. Inheritance Object LinksOperatorBase <TLinkAddress> Stack<TLinkAddress> Implements IStack <TLinkAddress> Inherited Members LinksOperatorBase<TLinkAddress>._links LinksOperatorBase<TLinkAddress>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Stacks Assembly : Platform.Data.Doublets.dll Syntax public class Stack<TLinkAddress> : LinksOperatorBase<TLinkAddress>, IStack<TLinkAddress> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Constructors | Improve this Doc View Source Stack(ILinks<TLinkAddress>, TLinkAddress) Initializes a new Stack instance. Declaration public Stack(ILinks<TLinkAddress> links, TLinkAddress stack) Parameters Type Name Description ILinks <TLinkAddress> links A links. TLinkAddress stack A stack. Properties | Improve this Doc View Source IsEmpty Gets the is empty value. Declaration public bool IsEmpty { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Peek() Peeks this instance. Declaration public TLinkAddress Peek() Returns Type Description TLinkAddress The link | Improve this Doc View Source Pop() Pops this instance. Declaration public TLinkAddress Pop() Returns Type Description TLinkAddress The element. | Improve this Doc View Source Push(TLinkAddress) Pushes the element. Declaration public void Push(TLinkAddress element) Parameters Type Name Description TLinkAddress element The element. Implements IStack<> See Also LinksOperatorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.Stacks.StackExtensions.html": {
    "href": "api/Platform.Data.Doublets.Stacks.StackExtensions.html",
    "title": "Class StackExtensions | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class StackExtensions Represents the stack extensions. Inheritance Object StackExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets.Stacks Assembly : Platform.Data.Doublets.dll Syntax public static class StackExtensions Methods | Improve this Doc View Source CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) Creates the stack using the specified links. Declaration public static TLinkAddress CreateStack<TLinkAddress>(this ILinks<TLinkAddress> links, TLinkAddress stackMarker) where TLinkAddress : struct Parameters Type Name Description ILinks <TLinkAddress> links The links. TLinkAddress stackMarker The stack marker. Returns Type Description TLinkAddress The stack. Type Parameters Name Description TLinkAddress The link."
  },
  "api/Platform.Data.Doublets.SynchronizedLinks-1.html": {
    "href": "api/Platform.Data.Doublets.SynchronizedLinks-1.html",
    "title": "Class SynchronizedLinks<TLinkAddress> | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class SynchronizedLinks<TLinkAddress> Inheritance Object SynchronizedLinks<TLinkAddress> Implements ISynchronizedLinks <TLinkAddress> Platform.Data.Doublets.ISynchronizedLinks <TLinkAddress, ILinks <TLinkAddress>, LinksConstants <TLinkAddress>> ILinks <TLinkAddress> Platform.Data.Doublets.ILinks <TLinkAddress, LinksConstants <TLinkAddress>> Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public class SynchronizedLinks<TLinkAddress> : ISynchronizedLinks<TLinkAddress>, ISynchronizedLinks<TLinkAddress, ILinks<TLinkAddress>, LinksConstants<TLinkAddress>>, ILinks<TLinkAddress>, ILinks<TLinkAddress, LinksConstants<TLinkAddress>> where TLinkAddress : struct Type Parameters Name Description TLinkAddress Remarks TODO: Autogeneration of synchronized wrapper (decorator). TODO: Try to unfold code of each method using IL generation for performance improvements. TODO: Or even to unfold multiple layers of implementations. Constructors | Improve this Doc View Source SynchronizedLinks(ISynchronization, ILinks<TLinkAddress>) Initializes a new instance. Declaration public SynchronizedLinks(ISynchronization synchronization, ILinks<TLinkAddress> links) Parameters Type Name Description ISynchronization synchronization A synchronization. ILinks <TLinkAddress> links A links. | Improve this Doc View Source SynchronizedLinks(ILinks<TLinkAddress>) Initializes a new instance. Declaration public SynchronizedLinks(ILinks<TLinkAddress> links) Parameters Type Name Description ILinks <TLinkAddress> links A links. Properties | Improve this Doc View Source Constants Gets the constants value. Declaration public LinksConstants<TLinkAddress> Constants { get; } Property Value Type Description LinksConstants <TLinkAddress> | Improve this Doc View Source Sync Gets the sync value. Declaration public ILinks<TLinkAddress> Sync { get; } Property Value Type Description ILinks <TLinkAddress> | Improve this Doc View Source SyncRoot Gets the sync root value. Declaration public ISynchronization SyncRoot { get; } Property Value Type Description ISynchronization | Improve this Doc View Source Unsync Gets the unsync value. Declaration public ILinks<TLinkAddress> Unsync { get; } Property Value Type Description ILinks <TLinkAddress> Methods | Improve this Doc View Source Count(IList<TLinkAddress>) Counts the restriction. Declaration public TLinkAddress Count(IList<TLinkAddress> restriction) Parameters Type Name Description IList <TLinkAddress> restriction The restriction. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Create(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Creates the substitution. Declaration public TLinkAddress Create(IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link address | Improve this Doc View Source Delete(IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Deletes the substitution. Declaration public TLinkAddress Delete(IList<TLinkAddress> restriction, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress | Improve this Doc View Source Each(IList<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>) Eaches the handler. Declaration public TLinkAddress Each(IList<TLinkAddress> restriction, ReadHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. Nullable < ReadHandler <TLinkAddress>> handler The handler. Returns Type Description TLinkAddress The link address | Improve this Doc View Source Update(IList<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) Updates the substitution. Declaration public TLinkAddress Update(IList<TLinkAddress> restriction, IList<TLinkAddress> substitution, WriteHandler<TLinkAddress>? handler) Parameters Type Name Description IList <TLinkAddress> restriction The substitution. IList <TLinkAddress> substitution The substitution. Nullable < WriteHandler <TLinkAddress>> handler Returns Type Description TLinkAddress The link address Implements ISynchronizedLinks<TLinkAddress> Platform.Data.Doublets.ISynchronizedLinks<, , > ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress)"
  },
  "api/Platform.Data.Doublets.UInt64LinksExtensions.html": {
    "href": "api/Platform.Data.Doublets.UInt64LinksExtensions.html",
    "title": "Class UInt64LinksExtensions | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksExtensions Represents the int 64 links extensions. Inheritance Object UInt64LinksExtensions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public static class UInt64LinksExtensions Fields | Improve this Doc View Source Constants The instance. Declaration public static readonly LinksConstants<ulong> Constants Field Value Type Description LinksConstants < UInt64 > Methods | Improve this Doc View Source AnyLinkIsAny(ILinks<UInt64>, UInt64[]) Determines whether any link is any. Declaration public static bool AnyLinkIsAny(this ILinks<ulong> links, params ulong[] sequence) Parameters Type Name Description ILinks < UInt64 > links The links. UInt64 [] sequence The sequence. Returns Type Description Boolean The bool | Improve this Doc View Source AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) Appends the structure using the specified links. Declaration public static void AppendStructure(this ILinks<ulong> links, StringBuilder sb, HashSet<ulong> visited, ulong linkIndex, Func<Link<ulong>, bool> isElement, Action<StringBuilder, Link<ulong>> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < UInt64 > links The links. StringBuilder sb The sb. HashSet < UInt64 > visited The visited. UInt64 linkIndex The link index. Func < Link < UInt64 >, Boolean > isElement The is element. Action < StringBuilder , Link < UInt64 >> appendElement The append element. Boolean renderIndex The render index. Boolean renderDebug The render debug. Exceptions Type Condition ArgumentNullException | Improve this Doc View Source FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) Formats the structure using the specified links. Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<Link<ulong>, bool> isElement, Action<StringBuilder, Link<ulong>> appendElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < UInt64 > links The links. UInt64 linkIndex The link index. Func < Link < UInt64 >, Boolean > isElement The is element. Action < StringBuilder , Link < UInt64 >> appendElement The append element. Boolean renderIndex The render index. Boolean renderDebug The render debug. Returns Type Description String The string | Improve this Doc View Source FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Boolean, Boolean) Formats the structure using the specified links. Declaration public static string FormatStructure(this ILinks<ulong> links, ulong linkIndex, Func<Link<ulong>, bool> isElement, bool renderIndex = false, bool renderDebug = false) Parameters Type Name Description ILinks < UInt64 > links The links. UInt64 linkIndex The link index. Func < Link < UInt64 >, Boolean > isElement The is element. Boolean renderIndex The render index. Boolean renderDebug The render debug. Returns Type Description String The string"
  },
  "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.html": {
    "href": "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.html",
    "title": "Class UInt64LinksTransactionsLayer | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksTransactionsLayer Represents the int 64 links transactions layer. Inheritance Object LinksOperatorBase < UInt64 > LinksDecoratorBase < UInt64 > LinksDisposableDecoratorBase < UInt64 > UInt64LinksTransactionsLayer Implements ILinks < UInt64 > Platform.Data.Doublets.ILinks < UInt64 , LinksConstants < UInt64 >> IDisposable Inherited Members LinksDisposableDecoratorBase<UInt64>.Disposable LinksDisposableDecoratorBase<UInt64>.Dispose() LinksDecoratorBase<UInt64>._constants LinksDecoratorBase<UInt64>.Constants LinksDecoratorBase<UInt64>._facade LinksDecoratorBase<UInt64>.Facade LinksDecoratorBase<UInt64>.Count(IList<UInt64>) LinksDecoratorBase<UInt64>.Each(IList<UInt64>, Nullable<ReadHandler<UInt64>>) LinksOperatorBase<UInt64>._links LinksOperatorBase<UInt64>.Links Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public class UInt64LinksTransactionsLayer : LinksDisposableDecoratorBase<ulong>, ILinks<ulong>, ILinks<ulong, LinksConstants<ulong>>, IDisposable Constructors | Improve this Doc View Source UInt64LinksTransactionsLayer(ILinks<UInt64>, String) Initializes a new UInt64LinksTransactionsLayer instance. Declaration public UInt64LinksTransactionsLayer(ILinks<ulong> links, string logAddress) Parameters Type Name Description ILinks < UInt64 > links A links. String logAddress A log address. Exceptions Type Condition ArgumentNullException NotSupportedException Database is damaged, autorecovery is not supported yet. Fields | Improve this Doc View Source DefaultPushDelay The from seconds. Declaration public static readonly TimeSpan DefaultPushDelay Field Value Type Description TimeSpan Methods | Improve this Doc View Source BeginTransaction() Begins the transaction. Declaration public UInt64LinksTransactionsLayer.Transaction BeginTransaction() Returns Type Description UInt64LinksTransactionsLayer.Transaction The transaction | Improve this Doc View Source Create(IList<UInt64>, Nullable<WriteHandler<UInt64>>) Creates the substitution. Declaration public override ulong Create(IList<ulong> substitution, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > substitution The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 The created link index. Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Create(System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) | Improve this Doc View Source Delete(IList<UInt64>, Nullable<WriteHandler<UInt64>>) Deletes the substitution. Declaration public override ulong Delete(IList<ulong> restriction, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > restriction The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Delete(System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes the manual. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual The manual. Boolean wasDisposed The was disposed. Overrides Platform.Data.Doublets.Decorators.LinksDisposableDecoratorBase<System.UInt64>.Dispose(System.Boolean, System.Boolean) | Improve this Doc View Source GetLinkValue(UInt64) Gets the link value using the specified link. Declaration public IList<ulong> GetLinkValue(ulong link) Parameters Type Name Description UInt64 link The link. Returns Type Description IList < UInt64 > A list of TLinkAddress | Improve this Doc View Source Update(IList<UInt64>, IList<UInt64>, Nullable<WriteHandler<UInt64>>) Updates the substitution. Declaration public override ulong Update(IList<ulong> restriction, IList<ulong> substitution, WriteHandler<ulong>? handler) Parameters Type Name Description IList < UInt64 > restriction The substitution. IList < UInt64 > substitution The substitution. Nullable < WriteHandler < UInt64 >> handler Returns Type Description UInt64 The link index. Overrides Platform.Data.Doublets.Decorators.LinksDecoratorBase<System.UInt64>.Update(System.Collections.Generic.IList<System.UInt64>, System.Collections.Generic.IList<System.UInt64>, System.Nullable<WriteHandler<System.UInt64>>) Implements ILinks<TLinkAddress> Platform.Data.Doublets.ILinks<, > System.IDisposable Extension Methods ILinksExtensions.RunRandomCreations<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomSearches<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.RunRandomDeletions<TLinkAddress>(ILinks<TLinkAddress>, UInt64) ILinksExtensions.Delete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteAll<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.First<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.SingleOrDefault<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.CheckPathExistance<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.GetByKeys<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Int32[]) ILinksExtensions.GetSquareMatrixSequenceElementByIndex<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, UInt64, UInt64) ILinksExtensions.GetIndex<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetSource<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.GetTarget<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress, Boolean>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Func<TLinkAddress, Boolean>) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, Nullable<ReadHandler<TLinkAddress>>, TLinkAddress, TLinkAddress) ILinksExtensions.Each<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<ReadHandler<TLinkAddress>>) ILinksExtensions.All<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.AllIndices<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Exists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureLinkExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureInnerReferenceExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, String) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.EnsureLinkIsAnyOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureLinkIsItselfOrExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, String) ILinksExtensions.EnsureDoesNotExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.EnsureNoUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsurePointsCreated<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.EnsureCreated<TLinkAddress>(ILinks<TLinkAddress>, Func<TLinkAddress>, TLinkAddress[]) ILinksExtensions.CountUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.HasUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.Equals<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.SearchOrDefault<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.CreatePoint<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.CreateAndUpdate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>, TLinkAddress[]) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.Update<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.ResolveConstantAsSelfReference<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, IList<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.GetOrCreate<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress) ILinksExtensions.UpdateOrCreateOrGet<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteIfExists<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.DeleteMany<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.DeleteAllUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DeleteByQuery<TLinkAddress>(ILinks<TLinkAddress>, Link<TLinkAddress>) ILinksExtensions.AreValuesReset<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.ResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) ILinksExtensions.EnforceResetValues<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeUsages<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress) ILinksExtensions.MergeAndDelete<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress, TLinkAddress, Nullable<WriteHandler<TLinkAddress>>) ILinksExtensions.DecorateWithAutomaticUniquenessAndUsagesResolution<TLinkAddress>(ILinks<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, IList<TLinkAddress>) ILinksExtensions.Format<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) UInt64LinksExtensions.AnyLinkIsAny(ILinks<UInt64>, UInt64[]) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Boolean, Boolean) UInt64LinksExtensions.FormatStructure(ILinks<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) UInt64LinksExtensions.AppendStructure(ILinks<UInt64>, StringBuilder, HashSet<UInt64>, UInt64, Func<Link<UInt64>, Boolean>, Action<StringBuilder, Link<UInt64>>, Boolean, Boolean) StackExtensions.CreateStack<TLinkAddress>(ILinks<TLinkAddress>, TLinkAddress) See Also LinksDisposableDecoratorBase <TLinkAddress>"
  },
  "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.Transaction.html": {
    "href": "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.Transaction.html",
    "title": "Class UInt64LinksTransactionsLayer.Transaction | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Class UInt64LinksTransactionsLayer.Transaction Inheritance Object UInt64LinksTransactionsLayer.Transaction Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public class Transaction : DisposableBase Remarks Другие варианты реализации транзакций (атомарности): Разделение хранения значения связи ((Source Target) или (Source Linker Target)) и индексов. Хранение трансформаций/операций в отдельном хранилище Links, но дополнительно потребуется решить вопрос со ссылками на внешние идентификаторы, или как-то иначе решить вопрос с пересечениями идентификаторов. Где хранить промежуточный список транзакций? В оперативной памяти: Минусы: Может усложнить систему, если она будет функционировать самостоятельно, так как нужно отдельно выделять память под список трансформаций. Выделенной оперативной памяти может не хватить, в том случае, если транзакция использует слишком много трансформаций. -> Можно использовать жёсткий диск для слишком длинных транзакций. -> Максимальный размер списка трансформаций можно ограничить / задать константой. При подтверждении транзакции (Commit) все трансформации записываются разом создавая задержку. На жёстком диске: Минусы: Длительный отклик, на запись каждой трансформации. Лог транзакций дополнительно наполняется отменёнными транзакциями. -> Это может решаться упаковкой/исключением дублирующих операций. -> Также это может решаться тем, что короткие транзакции вообще не будут записываться в случае отката. Перед тем как выполнять отмену операций транзакции нужно дождаться пока все операции (трансформации) будут записаны в лог. Constructors | Improve this Doc View Source Transaction(UInt64LinksTransactionsLayer) Initializes a new UInt64LinksTransactionsLayer.Transaction instance. Declaration public Transaction(UInt64LinksTransactionsLayer layer) Parameters Type Name Description UInt64LinksTransactionsLayer layer A layer. Exceptions Type Condition NotSupportedException Nested transactions not supported. Properties | Improve this Doc View Source IsCommitted Gets or sets the is committed value. Declaration public bool IsCommitted { get; } Property Value Type Description Boolean | Improve this Doc View Source IsReverted Gets or sets the is reverted value. Declaration public bool IsReverted { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source Commit() Commits this instance. Declaration public void Commit() | Improve this Doc View Source Dispose(Boolean, Boolean) Disposes the manual. Declaration protected override void Dispose(bool manual, bool wasDisposed) Parameters Type Name Description Boolean manual The manual. Boolean wasDisposed The was disposed. | Improve this Doc View Source EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction) Ensures the transaction allows write operations using the specified transaction. Declaration public static void EnsureTransactionAllowsWriteOperations(UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer.Transaction transaction The transaction. Exceptions Type Condition InvalidOperationException Transation is commited. InvalidOperationException Transation is reverted. | Improve this Doc View Source SetCurrentTransaction(UInt64LinksTransactionsLayer, UInt64LinksTransactionsLayer.Transaction) Sets the current transaction using the specified layer. Declaration public static void SetCurrentTransaction(UInt64LinksTransactionsLayer layer, UInt64LinksTransactionsLayer.Transaction transaction) Parameters Type Name Description UInt64LinksTransactionsLayer layer The layer. UInt64LinksTransactionsLayer.Transaction transaction The transaction."
  },
  "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.Transition.html": {
    "href": "api/Platform.Data.Doublets.UInt64LinksTransactionsLayer.Transition.html",
    "title": "Struct UInt64LinksTransactionsLayer.Transition | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Struct UInt64LinksTransactionsLayer.Transition Implements IEquatable < UInt64LinksTransactionsLayer.Transition > Inherited Members Object.Equals(Object, Object) Object.GetType() Object.ReferenceEquals(Object, Object) Namespace : Platform.Data.Doublets Assembly : Platform.Data.Doublets.dll Syntax public struct Transition : IEquatable<UInt64LinksTransactionsLayer.Transition> Remarks Альтернативные варианты хранения трансформации (элемента транзакции): private enum TransitionType { Creation, UpdateOf, UpdateTo, Deletion } private struct Transition { public TLinkAddress TransactionId; public UniqueTimestamp Timestamp; public TransactionItemType Type; public Link Source; public Link Linker; public Link Target; } Или public struct TransitionHeader { public TLinkAddress TransactionIdCombined; public TLinkAddress TimestampCombined; public TLinkAddress TransactionId { get { return (TLinkAddress) mask & TransactionIdCombined; } } public UniqueTimestamp Timestamp { get { return (UniqueTimestamp)mask & TransactionIdCombined; } } public TransactionItemType Type { get { // Использовать по одному биту из TransactionId и Timestamp, // для значения в 2 бита, которое представляет тип операции throw new NotImplementedException(); } } } private struct Transition { public TransitionHeader Header; public Link Source; public Link Linker; public Link Target; } Constructors | Improve this Doc View Source Transition(UniqueTimestampFactory, UInt64) Initializes a new UInt64LinksTransactionsLayer.Transition instance. Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory A unique timestamp factory. UInt64 transactionId A transaction id. | Improve this Doc View Source Transition(UniqueTimestampFactory, UInt64, Link<UInt64>) Initializes a new UInt64LinksTransactionsLayer.Transition instance. Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId, Link<ulong> before) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory A unique timestamp factory. UInt64 transactionId A transaction id. Link < UInt64 > before A before. | Improve this Doc View Source Transition(UniqueTimestampFactory, UInt64, Link<UInt64>, Link<UInt64>) Initializes a new UInt64LinksTransactionsLayer.Transition instance. Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId, Link<ulong> before, Link<ulong> after) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory A unique timestamp factory. UInt64 transactionId A transaction id. Link < UInt64 > before A before. Link < UInt64 > after A after. | Improve this Doc View Source Transition(UniqueTimestampFactory, UInt64, IList<UInt64>, IList<UInt64>) Declaration public Transition(UniqueTimestampFactory uniqueTimestampFactory, ulong transactionId, IList<ulong> before, IList<ulong> after) Parameters Type Name Description UniqueTimestampFactory uniqueTimestampFactory UInt64 transactionId IList < UInt64 > before IList < UInt64 > after Fields | Improve this Doc View Source After The after. Declaration public readonly Link<ulong> After Field Value Type Description Link < UInt64 > | Improve this Doc View Source Before The before. Declaration public readonly Link<ulong> Before Field Value Type Description Link < UInt64 > | Improve this Doc View Source Size The size. Declaration public static readonly long Size Field Value Type Description Int64 | Improve this Doc View Source Timestamp The timestamp. Declaration public readonly Timestamp Timestamp Field Value Type Description Timestamp | Improve this Doc View Source TransactionId The transaction id. Declaration public readonly ulong TransactionId Field Value Type Description UInt64 Methods | Improve this Doc View Source Equals(UInt64LinksTransactionsLayer.Transition) Determines whether this instance equals. Declaration public bool Equals(UInt64LinksTransactionsLayer.Transition other) Parameters Type Name Description UInt64LinksTransactionsLayer.Transition other The other. Returns Type Description Boolean The bool | Improve this Doc View Source Equals(Object) Determines whether this instance equals. Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj The obj. Returns Type Description Boolean The bool Overrides ValueType.Equals(Object) | Improve this Doc View Source GetHashCode() Gets the hash code. Declaration public override int GetHashCode() Returns Type Description Int32 The int Overrides ValueType.GetHashCode() | Improve this Doc View Source ToString() Returns the string. Declaration public override string ToString() Returns Type Description String The string Overrides ValueType.ToString() Operators | Improve this Doc View Source Equality(UInt64LinksTransactionsLayer.Transition, UInt64LinksTransactionsLayer.Transition) Declaration public static bool operator ==(UInt64LinksTransactionsLayer.Transition left, UInt64LinksTransactionsLayer.Transition right) Parameters Type Name Description UInt64LinksTransactionsLayer.Transition left UInt64LinksTransactionsLayer.Transition right Returns Type Description Boolean | Improve this Doc View Source Inequality(UInt64LinksTransactionsLayer.Transition, UInt64LinksTransactionsLayer.Transition) Declaration public static bool operator !=(UInt64LinksTransactionsLayer.Transition left, UInt64LinksTransactionsLayer.Transition right) Parameters Type Name Description UInt64LinksTransactionsLayer.Transition left UInt64LinksTransactionsLayer.Transition right Returns Type Description Boolean Implements System.IEquatable<T>"
  },
  "README.html": {
    "href": "README.html",
    "title": "Data.Doublets (русская версия) | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Data.Doublets ( русская версия ) LinksPlatform's Platform.Data.Doublets Class Library. Namespace: Platform.Data.Doublets Forked from: Konard/LinksPlatform/Platform/Platform.Data.Doublets NuGet package: Platform.Data.Doublets Example | Run .NET fiddle using System; using Platform.Data; using Platform.Data.Doublets; using Platform.Data.Doublets.Memory.United.Generic; // A doublet links store is mapped to \"db.links\" file: using var links = new UnitedMemoryLinks<uint>(\"db.links\"); // A creation of the doublet link: var link = links.Create(); // The link is updated to reference itself twice (as a source and a target): link = links.Update(link, newSource: link, newTarget: link); // Read operations: Console.WriteLine($\"The number of links in the data store is {links.Count()}.\"); Console.WriteLine(\"Data store contents:\"); var any = links.Constants.Any; // Means any link address or no restriction on link address // Arguments of the query are interpreted as restrictions var query = new Link<uint>(index: any, source: any, target: any); links.Each((link) => { Console.WriteLine(links.Format(link)); return links.Constants.Continue; }, query); // The link's content reset: link = links.Update(link, newSource: default, newTarget: default); // The link deletion: links.Delete(link); SQLite vs Doublets Documentation Interface ILinks<TLink, TConstants> . Interface ILinks<TLink> . Class UnitedMemoryLinks<TLink> . PDF file with code for e-readers. Dependency graph [C#] Dependency graph [C++] Depend on Platform.Random Platform.Timestamps Platform.Incrementers Platform.Collections.Methods Platform.Singletons Platform.Memory Platform.Data Support Ask questions at stackoverflow.com/tags/links-platform (or with tag links-platform ) to get our free support. You can also get real-time support on our official Discord server ."
  },
  "README.ru.html": {
    "href": "README.ru.html",
    "title": "Data.Doublets (english version) | LinksPlatform's Platform.Data.Doublets Library",
    "keywords": "Data.Doublets ( english version ) Библиотека классов ПлатформыСвязей Platform.Data.Doublets. Пространство имён: Platform.Data.Doublets Ответвление от: Konard/LinksPlatform/Platform/Platform.Data.Doublets NuGet пакет: Platform.Data.Doublets Пример | Запустить .NET fiddle using System; using Platform.Data; using Platform.Data.Doublets; using Platform.Data.Doublets.Memory.United.Generic; // Хранилище дуплетов привязывается к файлу \"db.links\": using var links = new UnitedMemoryLinks<uint>(\"db.links\"); // Создание связи-дуплета: var link = links.Create(); // Связь обновляется чтобы ссылаться на себя дважды (в качестве начала и конца): link = links.Update(link, newSource: link, newTarget: link); // Операции чтения: Console.WriteLine($\"Количество связей в хранилище данных: {links.Count()}.\"); Console.WriteLine(\"Содержимое хранилища данных:\"); var any = links.Constants.Any; // Означает любой адрес связи или отсутствие ограничения на адрес связи // Аргументы запроса интерпретируются в качестве органичений var query = new Link<uint>(index: any, source: any, target: any); links.Each((link) => { Console.WriteLine(links.Format(link)); return links.Constants.Continue; }, query); // Сброс содержимого связи: link = links.Update(link, newSource: default, newTarget: default); // Удаление связи: links.Delete(link); SQLite против Дуплетов Документация Интерфейс ILinks<TLink, TConstants> . Интерфейс ILinks<TLink> . Класс UnitedMemoryLinks<TLink> . PDF файл с кодом для электронных книг. Граф зависимостей [C#] Граф зависимостей [C++] Зависит напрямую от Platform.Random Platform.Timestamps Platform.Incrementers Platform.Collections.Methods Platform.Singletons Platform.Memory Platform.Data"
  }
}